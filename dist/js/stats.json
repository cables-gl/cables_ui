{
  "errors": [
  ],
  "warnings": [
  ],
  "version": "4.39.3",
  "hash": "0ff41be3c17e4e7d4429",
  "time": 3587,
  "builtAt": 1567335766182,
  "publicPath": "",
  "outputPath": "/home/tom/cables_dev/cables/build",
  "assetsByChunkName": {
    "main": [
      "cables.min.js",
      "cables.min.js.map"
    ]
  },
  "assets": [
    {
      "name": "cables.min.js",
      "size": 182781,
      "chunks": [
        0
      ],
      "chunkNames": [
        "main"
      ],
      "emitted": true
    },
    {
      "name": "cables.min.js.map",
      "size": 602406,
      "chunks": [
        0
      ],
      "chunkNames": [
        "main"
      ],
      "emitted": true
    }
  ],
  "filteredAssets": 0,
  "entrypoints": {
    "main": {
      "chunks": [
        0
      ],
      "assets": [
        "cables.min.js",
        "cables.min.js.map"
      ],
      "children": {
      },
      "childAssets": {
      }
    }
  },
  "namedChunkGroups": {
    "main": {
      "chunks": [
        0
      ],
      "assets": [
        "cables.min.js",
        "cables.min.js.map"
      ],
      "children": {
      },
      "childAssets": {
      }
    }
  },
  "chunks": [
    {
      "id": 0,
      "rendered": true,
      "initial": true,
      "entry": true,
      "size": 362627,
      "names": [
        "main"
      ],
      "files": [
        "cables.min.js",
        "cables.min.js.map"
      ],
      "hash": "a53181ef9ce1605d2088",
      "siblings": [
      ],
      "parents": [
      ],
      "children": [
      ],
      "childrenByOrder": {
      },
      "modules": [
        {
          "id": 0,
          "identifier": "multi /home/tom/cables_dev/cables/src/core/index.js",
          "name": "multi ./src/core/index.js",
          "index": 0,
          "index2": 38,
          "size": 28,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": null,
          "issuerId": null,
          "issuerName": null,
          "issuerPath": null,
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [
          ],
          "reasons": [
            {
              "moduleId": null,
              "moduleIdentifier": null,
              "module": null,
              "moduleName": null,
              "type": "multi entry"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 0
        },
        {
          "id": 1,
          "identifier": "/home/tom/cables_dev/cables/src/core/index.js a6aa3b1114a6da3a821fc290a5f10dd5",
          "name": "./src/core/index.js + 37 modules",
          "index": 1,
          "index2": 37,
          "size": 362599,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": null,
          "issuerId": null,
          "issuerName": null,
          "issuerPath": null,
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [
          ],
          "reasons": [
            {
              "moduleId": 0,
              "moduleIdentifier": "multi /home/tom/cables_dev/cables/src/core/index.js",
              "module": "multi ./src/core/index.js",
              "moduleName": "multi ./src/core/index.js",
              "type": "single entry",
              "userRequest": "/home/tom/cables_dev/cables/src/core/index.js",
              "loc": "main[0]"
            }
          ],
          "usedExports": true,
          "providedExports": [
            "default"
          ],
          "optimizationBailout": [
          ],
          "depth": 1,
          "modules": [
            {
              "id": null,
              "identifier": "/home/tom/cables_dev/cables/src/core/index.js",
              "name": "./src/core/index.js",
              "index": 1,
              "index2": 37,
              "size": 1334,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
              ],
              "issuer": "multi /home/tom/cables_dev/cables/src/core/index.js",
              "issuerId": 0,
              "issuerName": "multi ./src/core/index.js",
              "issuerPath": [
                {
                  "id": 0,
                  "identifier": "multi /home/tom/cables_dev/cables/src/core/index.js",
                  "name": "multi ./src/core/index.js"
                }
              ],
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "assets": [
              ],
              "reasons": [
                {
                  "moduleId": 0,
                  "moduleIdentifier": "multi /home/tom/cables_dev/cables/src/core/index.js",
                  "module": "multi ./src/core/index.js",
                  "moduleName": "multi ./src/core/index.js",
                  "type": "single entry",
                  "userRequest": "/home/tom/cables_dev/cables/src/core/index.js",
                  "loc": "main[0]"
                }
              ],
              "usedExports": true,
              "providedExports": [
                "default"
              ],
              "optimizationBailout": [
                "ModuleConcatenation bailout: Module is referenced from these modules with unsupported syntax: multi ./src/core/index.js (referenced with single entry)"
              ],
              "depth": 1,
              "source": "import * as base64 from \"./base64\";\nimport { EventTarget } from \"./eventtarget\";\nimport * as utils from \"./utils\";\nimport * as anim from \"./anim\";\nimport { Link } from \"./core_link\";\nimport { Port } from \"./core_port\";\nimport { Op } from \"./core_op\";\nimport { EMBED } from \"./embedding\";\nimport { Profiler } from \"./core_profiler\";\nimport Patch from \"./core_patch\";\nimport { Requirements } from \"./requirements\";\nimport { GLGUI } from \"./glpatch\";\nimport { Instancing } from \"./instancing\";\nimport { LoadingStatus } from \"./loadingstatus\";\nimport { WEBAUDIO } from \"./webaudio\";\nimport { Variable } from \"./sessionvar\";\nimport { Timer, now, internalNow } from \"./timer\";\nimport * as PatchConnections from \"./patchConnection\";\n// import { Gizmo, htmlLine } from \"./mod_gizmo\";\nimport { CONSTANTS } from \"./constants\";\n\nconst CABLES = Object.assign(\n    {\n        EventTarget,\n        EMBED,\n        Link,\n        Port,\n        Op,\n        Profiler,\n        Requirements,\n        Patch,\n        GLGUI,\n        // Gizmo,\n        // htmlLine,\n        Instancing,\n        Timer,\n        WEBAUDIO,\n        Variable,\n        LoadingStatus,\n        now,\n        internalNow,\n    },\n    base64,\n    utils,\n    anim,\n    PatchConnections,\n    CONSTANTS.PORT,\n    CONSTANTS.PACO,\n    CONSTANTS.ANIM,\n    CONSTANTS.OP,\n);\n\nexport default CABLES;\n"
            },
            {
              "id": null,
              "identifier": "/home/tom/cables_dev/cables/src/core/base64.js",
              "name": "./src/core/base64.js",
              "index": 2,
              "index2": 0,
              "size": 1980,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
              ],
              "issuer": "/home/tom/cables_dev/cables/src/core/index.js",
              "issuerId": null,
              "issuerName": "./src/core/index.js",
              "issuerPath": [
                {
                  "id": 0,
                  "identifier": "multi /home/tom/cables_dev/cables/src/core/index.js",
                  "name": "multi ./src/core/index.js"
                },
                {
                  "id": null,
                  "identifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "name": "./src/core/index.js"
                }
              ],
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "assets": [
              ],
              "reasons": [
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "module": "./src/core/index.js",
                  "moduleName": "./src/core/index.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./base64",
                  "loc": "1:0-35"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_geom.js",
                  "module": "./src/core/cgl/cgl_geom.js",
                  "moduleName": "./src/core/cgl/cgl_geom.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "../base64",
                  "loc": "3:0-45"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "module": "./src/core/index.js",
                  "moduleName": "./src/core/index.js",
                  "type": "harmony import specifier",
                  "userRequest": "./base64",
                  "loc": "43:4-10"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_geom.js",
                  "module": "./src/core/cgl/cgl_geom.js",
                  "moduleName": "./src/core/cgl/cgl_geom.js",
                  "type": "harmony import specifier",
                  "userRequest": "../base64",
                  "loc": "773:64-80"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_geom.js",
                  "module": "./src/core/cgl/cgl_geom.js",
                  "moduleName": "./src/core/cgl/cgl_geom.js",
                  "type": "harmony import specifier",
                  "userRequest": "../base64",
                  "loc": "774:68-84"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_geom.js",
                  "module": "./src/core/cgl/cgl_geom.js",
                  "moduleName": "./src/core/cgl/cgl_geom.js",
                  "type": "harmony import specifier",
                  "userRequest": "../base64",
                  "loc": "775:64-80"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_geom.js",
                  "module": "./src/core/cgl/cgl_geom.js",
                  "moduleName": "./src/core/cgl/cgl_geom.js",
                  "type": "harmony import specifier",
                  "userRequest": "../base64",
                  "loc": "776:68-84"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_geom.js",
                  "module": "./src/core/cgl/cgl_geom.js",
                  "moduleName": "./src/core/cgl/cgl_geom.js",
                  "type": "harmony import specifier",
                  "userRequest": "../base64",
                  "loc": "777:71-87"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_geom.js",
                  "module": "./src/core/cgl/cgl_geom.js",
                  "moduleName": "./src/core/cgl/cgl_geom.js",
                  "type": "harmony import specifier",
                  "userRequest": "../base64",
                  "loc": "781:47-63"
                }
              ],
              "usedExports": true,
              "providedExports": [
                "base64Chars",
                "base64lookup",
                "b64encTypesArray",
                "b64decTypedArray"
              ],
              "optimizationBailout": [
              ],
              "depth": 2,
              "source": "export const base64Chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\n// Use a lookup table to find the index.\nconst _base64lookup = new Uint8Array(256);\nfor (var i = 0; i < base64Chars.length; i++) _base64lookup[base64Chars.charCodeAt(i)] = i;\n\nexport const base64lookup = _base64lookup;\n\nexport const b64encTypesArray = function (arraybuffer)\n{\n    if (arraybuffer.buffer) arraybuffer = arraybuffer.buffer;\n    var bytes = new Uint8Array(arraybuffer),\n        i,\n        len = bytes.length,\n        base64 = \"\";\n\n    for (i = 0; i < len; i += 3)\n    {\n        base64 += base64Chars[bytes[i] >> 2];\n        base64 += base64Chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += base64Chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += base64Chars[bytes[i + 2] & 63];\n    }\n\n    if (len % 3 === 2) base64 = base64.substring(0, base64.length - 1) + \"=\";\n    else if (len % 3 === 1) base64 = base64.substring(0, base64.length - 2) + \"==\";\n\n    return base64;\n};\n\nexport const b64decTypedArray = function (base64)\n{\n    var bufferLength = base64.length * 0.75,\n        len = base64.length,\n        i,\n        p = 0,\n        encoded1,\n        encoded2,\n        encoded3,\n        encoded4;\n\n    if (base64[base64.length - 1] === \"=\")\n    {\n        bufferLength--;\n        if (base64[base64.length - 2] === \"=\") bufferLength--;\n    }\n\n    var arraybuffer = new ArrayBuffer(bufferLength),\n        bytes = new Uint8Array(arraybuffer);\n\n    for (i = 0; i < len; i += 4)\n    {\n        encoded1 = base64lookup[base64.charCodeAt(i)];\n        encoded2 = base64lookup[base64.charCodeAt(i + 1)];\n        encoded3 = base64lookup[base64.charCodeAt(i + 2)];\n        encoded4 = base64lookup[base64.charCodeAt(i + 3)];\n\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n\n    return arraybuffer;\n};\n"
            },
            {
              "id": null,
              "identifier": "/home/tom/cables_dev/cables/src/core/eventtarget.js",
              "name": "./src/core/eventtarget.js",
              "index": 3,
              "index2": 1,
              "size": 1594,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
              ],
              "issuer": "/home/tom/cables_dev/cables/src/core/index.js",
              "issuerId": null,
              "issuerName": "./src/core/index.js",
              "issuerPath": [
                {
                  "id": 0,
                  "identifier": "multi /home/tom/cables_dev/cables/src/core/index.js",
                  "name": "multi ./src/core/index.js"
                },
                {
                  "id": null,
                  "identifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "name": "./src/core/index.js"
                }
              ],
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "assets": [
              ],
              "reasons": [
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_port.js",
                  "module": "./src/core/core_port.js",
                  "moduleName": "./src/core/core_port.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./eventtarget",
                  "loc": "1:0-44"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_patch.js",
                  "module": "./src/core/core_patch.js",
                  "moduleName": "./src/core/core_patch.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./eventtarget",
                  "loc": "1:0-44"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "module": "./src/core/index.js",
                  "moduleName": "./src/core/index.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./eventtarget",
                  "loc": "2:0-44"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_port.js",
                  "module": "./src/core/core_port.js",
                  "moduleName": "./src/core/core_port.js",
                  "type": "harmony import specifier",
                  "userRequest": "./eventtarget",
                  "loc": "18:4-15"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "module": "./src/core/index.js",
                  "moduleName": "./src/core/index.js",
                  "type": "harmony import specifier",
                  "userRequest": "./eventtarget",
                  "loc": "24:8-19"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_patch.js",
                  "module": "./src/core/core_patch.js",
                  "moduleName": "./src/core/core_patch.js",
                  "type": "harmony import specifier",
                  "userRequest": "./eventtarget",
                  "loc": "38:4-15"
                }
              ],
              "usedExports": [
                "EventTarget"
              ],
              "providedExports": [
                "EventTarget"
              ],
              "optimizationBailout": [
              ],
              "depth": 2,
              "source": "const EventTarget = function ()\n{\n    this._eventCallbacks = {};\n\n    this.addEventListener = function (which, cb)\n    {\n        if (!this._eventCallbacks[which]) this._eventCallbacks[which] = [cb];\n        else this._eventCallbacks[which].push(cb);\n    };\n\n    this.hasEventListener = function (which, cb)\n    {\n        if (which && cb)\n        {\n            if (this._eventCallbacks[which])\n            {\n                var idx = this._eventCallbacks[which].indexOf(cb);\n                if (idx == -1) return false;\n                return true;\n            }\n        }\n        else\n        {\n            console.log(\"hasListener: missing parameters\");\n        }\n    };\n\n    this.removeEventListener = function (which, cb)\n    {\n        if (this._eventCallbacks[which])\n        {\n            var idx = this._eventCallbacks[which].indexOf(cb);\n            if (idx == -1) console.log(\"eventlistener \" + which + \" not found...\");\n            else this._eventCallbacks[which].splice(idx);\n        }\n    };\n\n    this.emitEvent = function (which, param1, param2, param3, param4, param5, param6)\n    {\n        if (this._eventCallbacks[which])\n        {\n            for (var i = 0; i < this._eventCallbacks[which].length; i++)\n            {\n                if (this._eventCallbacks[which][i])\n                {\n                    this._eventCallbacks[which][i](param1, param2, param3, param4, param5, param6);\n                }\n            }\n        }\n        else\n        {\n            // console.log(\"has no event callback\",which,this._eventCallbacks);\n        }\n    };\n};\nexport { EventTarget };\n"
            },
            {
              "id": null,
              "identifier": "/home/tom/cables_dev/cables/src/core/utils.js",
              "name": "./src/core/utils.js",
              "index": 4,
              "index2": 2,
              "size": 9381,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
              ],
              "issuer": "/home/tom/cables_dev/cables/src/core/index.js",
              "issuerId": null,
              "issuerName": "./src/core/index.js",
              "issuerPath": [
                {
                  "id": 0,
                  "identifier": "multi /home/tom/cables_dev/cables/src/core/index.js",
                  "name": "multi ./src/core/index.js"
                },
                {
                  "id": null,
                  "identifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "name": "./src/core/index.js"
                }
              ],
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "assets": [
              ],
              "reasons": [
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/loadingstatus.js",
                  "module": "./src/core/loadingstatus.js",
                  "moduleName": "./src/core/loadingstatus.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./utils",
                  "loc": "1:0-39"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./utils",
                  "loc": "1:0-38"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_port.js",
                  "module": "./src/core/core_port.js",
                  "moduleName": "./src/core/core_port.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./utils",
                  "loc": "2:0-39"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_texture.js",
                  "module": "./src/core/cgl/cgl_texture.js",
                  "moduleName": "./src/core/cgl/cgl_texture.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "../utils",
                  "loc": "2:0-32"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_geom.js",
                  "module": "./src/core/cgl/cgl_geom.js",
                  "moduleName": "./src/core/cgl/cgl_geom.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "../utils",
                  "loc": "2:0-33"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/embedding.js",
                  "module": "./src/core/embedding.js",
                  "moduleName": "./src/core/embedding.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./utils",
                  "loc": "2:0-39"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_patch.js",
                  "module": "./src/core/core_patch.js",
                  "moduleName": "./src/core/core_patch.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./utils",
                  "loc": "2:0-47"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "module": "./src/core/index.js",
                  "moduleName": "./src/core/index.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./utils",
                  "loc": "3:0-33"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_shader.js",
                  "module": "./src/core/cgl/cgl_shader.js",
                  "moduleName": "./src/core/cgl/cgl_shader.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "../utils",
                  "loc": "3:0-50"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/embedding.js",
                  "module": "./src/core/embedding.js",
                  "moduleName": "./src/core/embedding.js",
                  "type": "harmony import specifier",
                  "userRequest": "./utils",
                  "loc": "16:13-25"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_port.js",
                  "module": "./src/core/core_port.js",
                  "moduleName": "./src/core/core_port.js",
                  "type": "harmony import specifier",
                  "userRequest": "./utils",
                  "loc": "29:14-26"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_texture.js",
                  "module": "./src/core/cgl/cgl_texture.js",
                  "moduleName": "./src/core/cgl/cgl_texture.js",
                  "type": "harmony import specifier",
                  "userRequest": "../utils",
                  "loc": "35:14-18"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "module": "./src/core/index.js",
                  "moduleName": "./src/core/index.js",
                  "type": "harmony import specifier",
                  "userRequest": "./utils",
                  "loc": "44:4-9"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_shader.js",
                  "module": "./src/core/cgl/cgl_shader.js",
                  "moduleName": "./src/core/cgl/cgl_shader.js",
                  "type": "harmony import specifier",
                  "userRequest": "../utils",
                  "loc": "50:12-20"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./utils",
                  "loc": "67:30-34"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/loadingstatus.js",
                  "module": "./src/core/loadingstatus.js",
                  "moduleName": "./src/core/loadingstatus.js",
                  "type": "harmony import specifier",
                  "userRequest": "./utils",
                  "loc": "103:13-25"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_patch.js",
                  "module": "./src/core/core_patch.js",
                  "moduleName": "./src/core/core_patch.js",
                  "type": "harmony import specifier",
                  "userRequest": "./utils",
                  "loc": "122:12-16"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_geom.js",
                  "module": "./src/core/cgl/cgl_geom.js",
                  "moduleName": "./src/core/cgl/cgl_geom.js",
                  "type": "harmony import specifier",
                  "userRequest": "../utils",
                  "loc": "225:20-25"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_geom.js",
                  "module": "./src/core/cgl/cgl_geom.js",
                  "moduleName": "./src/core/cgl/cgl_geom.js",
                  "type": "harmony import specifier",
                  "userRequest": "../utils",
                  "loc": "226:21-26"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_geom.js",
                  "module": "./src/core/cgl/cgl_geom.js",
                  "moduleName": "./src/core/cgl/cgl_geom.js",
                  "type": "harmony import specifier",
                  "userRequest": "../utils",
                  "loc": "227:25-30"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_geom.js",
                  "module": "./src/core/cgl/cgl_geom.js",
                  "moduleName": "./src/core/cgl/cgl_geom.js",
                  "type": "harmony import specifier",
                  "userRequest": "../utils",
                  "loc": "228:20-25"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_geom.js",
                  "module": "./src/core/cgl/cgl_geom.js",
                  "moduleName": "./src/core/cgl/cgl_geom.js",
                  "type": "harmony import specifier",
                  "userRequest": "../utils",
                  "loc": "229:22-27"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_shader.js",
                  "module": "./src/core/cgl/cgl_shader.js",
                  "moduleName": "./src/core/cgl/cgl_shader.js",
                  "type": "harmony import specifier",
                  "userRequest": "../utils",
                  "loc": "624:25-37"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./utils",
                  "loc": "662:26-31"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_patch.js",
                  "module": "./src/core/core_patch.js",
                  "moduleName": "./src/core/core_patch.js",
                  "type": "harmony import specifier",
                  "userRequest": "./utils",
                  "loc": "690:4-12"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_patch.js",
                  "module": "./src/core/core_patch.js",
                  "moduleName": "./src/core/core_patch.js",
                  "type": "harmony import specifier",
                  "userRequest": "./utils",
                  "loc": "855:32-36"
                }
              ],
              "usedExports": true,
              "providedExports": [
                "shuffleArray",
                "uuid",
                "generateUUID",
                "simpleId",
                "smoothStep",
                "smootherStep",
                "map",
                "cacheBust",
                "jsonp",
                "ajaxSync",
                "ajax",
                "request",
                "UTILS"
              ],
              "optimizationBailout": [
              ],
              "depth": 2,
              "source": "/**\n * @external CABLES\n * @namespace Utils\n */\n\nconst UTILS = {};\n/**\n * Merge two Float32Arrays.\n * @function float32Concat\n * @memberof Utils\n * @param {Float32Array} first Left-hand side array\n * @param {Float32Array} second Right-hand side array\n * @return {Float32Array}\n * @static\n */\nUTILS.float32Concat = function (first, second)\n{\n    if (!(first instanceof Float32Array)) first = new Float32Array(first);\n    if (!(second instanceof Float32Array)) second = new Float32Array(second);\n\n    var firstLength = first.length,\n        result = new Float32Array(firstLength + second.length);\n\n    result.set(first);\n    result.set(second, firstLength);\n\n    return result;\n};\n\n/**\n * randomize order of an array\n * @function shuffleArray\n * @memberof Utils\n * @param {Array|Float32Array} array {Array} original\n * @return {Array|Float32Array} shuffled array\n * @static\n */\nexport const shuffleArray = function (array)\n{\n    for (var i = array.length - 1; i > 0; i--)\n    {\n        var j = Math.floor(Math.seededRandom() * (i + 1));\n        var temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n    }\n    return array;\n};\n\nconst _uuid = function ()\n{\n    var d = new Date().getTime();\n    var uuid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, (c) =>\n    {\n        var r = (d + Math.random() * 16) % 16 | 0;\n        d = Math.floor(d / 16);\n        return (c == \"x\" ? r : (r & 0x3) | 0x8).toString(16);\n    });\n    return uuid;\n};\n/**\n * generate a UUID\n * @function uuid\n * @memberof Utils\n * @return {String} generated UUID\n * @static\n */\nexport const uuid = _uuid;\nexport const generateUUID = _uuid;\n\n/**\n * generate a simple ID\n * @function simpleId\n * @memberof Utils\n * @return {Number} new id\n * @static\n */\nvar simpleIdCounter = 0;\nexport const simpleId = function ()\n{\n    simpleIdCounter++;\n    return simpleIdCounter;\n};\n\n/**\n * smoothStep a value\n * @function smoothStep\n * @memberof Utils\n * @function\n * @param {Number} value value to be smoothed [0-1]\n * @return {Number} smoothed value\n * @static\n */\nexport const smoothStep = function (perc)\n{\n    var x = Math.max(0, Math.min(1, (perc - 0) / (1 - 0)));\n    perc = x * x * (3 - 2 * x); // smoothstep\n    return perc;\n};\n\n/**\n * smootherstep a value\n * @function smootherStep\n * @memberof Utils\n * @param value {Number} value to be smoothed [0-1]\n * @return {Number} smoothed value\n * @static\n */\nexport const smootherStep = function (perc)\n{\n    var x = Math.max(0, Math.min(1, (perc - 0) / (1 - 0)));\n    perc = x * x * x * (x * (x * 6 - 15) + 10); // smootherstep\n    return perc;\n};\n\n/**\n * map a value in a range to a value in another range\n * @function map\n * @memberof Utils\n * @param {Number} value value to be mapped\n * @param {Number} oldMin old range minimum value\n * @param {Number} oldMax old range maximum value\n * @param {Number} newMin new range minimum value\n * @param {Number} newMax new range maximum value\n * @return {Number} mapped value\n * @static\n */\nexport const map = function (x, _oldMin, _oldMax, _newMin, _newMax, _easing)\n{\n    if (x >= _oldMax) return _newMax;\n    if (x <= _oldMin) return _newMin;\n\n    var reverseInput = false;\n    var oldMin = Math.min(_oldMin, _oldMax);\n    var oldMax = Math.max(_oldMin, _oldMax);\n    if (oldMin != _oldMin) reverseInput = true;\n\n    var reverseOutput = false;\n    var newMin = Math.min(_newMin, _newMax);\n    var newMax = Math.max(_newMin, _newMax);\n    if (newMin != _newMin) reverseOutput = true;\n\n    var portion = 0;\n    var r = 0;\n\n    if (reverseInput) portion = ((oldMax - x) * (newMax - newMin)) / (oldMax - oldMin);\n    else portion = ((x - oldMin) * (newMax - newMin)) / (oldMax - oldMin);\n\n    if (reverseOutput) r = newMax - portion;\n    else r = portion + newMin;\n\n    if (!_easing) return r;\n    if (_easing == 1)\n    {\n        // smoothstep\n        x = Math.max(0, Math.min(1, (r - _newMin) / (_newMax - _newMin)));\n        return _newMin + x * x * (3 - 2 * x) * (_newMax - _newMin);\n    }\n    if (_easing == 2)\n    {\n        // smootherstep\n        x = Math.max(0, Math.min(1, (r - _newMin) / (_newMax - _newMin)));\n        return _newMin + x * x * x * (x * (x * 6 - 15) + 10) * (_newMax - _newMin);\n    }\n\n    return r;\n};\n\n/**\n * @namespace Math\n */\n/**\n * set random seed for seededRandom()\n * @memberof Math\n * @type Number\n * @static\n */\nMath.randomSeed = 1;\n\n/**\n * generate a seeded random number\n * @function seededRandom\n * @memberof Math\n * @param {Number} max minimum possible random number\n * @param {Number} min maximum possible random number\n * @return {Number} random value\n * @static\n */\nMath.seededRandom = function (max, min)\n{\n    if (Math.randomSeed === 0) Math.randomSeed = Math.random() * 999;\n    max = max || 1;\n    min = min || 0;\n\n    Math.randomSeed = (Math.randomSeed * 9301 + 49297) % 233280;\n    var rnd = Math.randomSeed / 233280.0;\n\n    return min + rnd * (max - min);\n};\n\n// ----------------------------------------------------------------\n\nUTILS.arrayWriteToEnd = function (arr, v)\n{\n    for (var i = 1; i < arr.length; i++) arr[i - 1] = arr[i];\n    arr[arr.length - 1] = v;\n};\n\n// ----------------------------------------------------------------\n\n/**\n * returns true if parameter is a number\n * @function isNumeric\n * @memberof Utils\n * @param {Any} value The value to check.\n * @return {Boolean}\n * @static\n */\nUTILS.isNumeric = function (n)\n{\n    return !isNaN(parseFloat(n)) && isFinite(n);\n};\n\n/**\n * returns true if parameter is array\n * @function isArray\n * @param {Any} value Value to check\n * @memberof Utils\n * @return {Boolean}\n * @static\n */\nUTILS.isArray = function (v)\n{\n    return Object.prototype.toString.call(v) === \"[object Array]\";\n};\n\n/**\n * @namespace String\n */\n\n/**\n * append a linebreak to a string\n * @function endl\n * @memberof String\n * @return {String} string with newline break appended ('\\n')\n */\nString.prototype.endl = function ()\n{\n    return this + \"\\n\";\n};\n\n/**\n * return true if string starts with prefix\n * @function startsWith\n * @memberof String\n * @param {String} prefix The prefix to check.\n * @return {Boolean}\n */\nString.prototype.startsWith = function (prefix)\n{\n    return this.indexOf(prefix) === 0;\n};\n\n/**\n * return true if string ends with suffix\n * @function endsWith\n * @memberof String\n * @param {String} suffix\n * @return {Boolean}\n */\nString.prototype.endsWith = function (suffix)\n{\n    return this.match(suffix + \"$\") == suffix;\n};\n\n// ----------------------------------------------------------------\n\n/**\n * append a unique/random parameter to a url, so the browser is forced to reload the file, even if its cached\n * @function cacheBust\n * @static\n * @memberof Utils\n * @param {String} url The url to append the cachebuster parameter to.\n * @return {String} url with cachebuster parameter\n */\nexport const cacheBust = function (url)\n{\n    if (url.indexOf(\"?\") > -1) url += \"&\";\n    else url += \"?\";\n    return url + \"cb=\" + CABLES.uuid();\n};\n\nvar jsonpCounter = null;\nexport const jsonp = function (url, cb)\n{\n    jsonpCounter = jsonpCounter || 0;\n    jsonpCounter++;\n    var jsonPID = jsonpCounter;\n\n    console.log(\"making jsonp request...\");\n\n    CABLES[\"jsonpFunc\" + jsonPID] = function (data)\n    {\n        console.log(data);\n        cb(false, data);\n    };\n\n    var paramChar = \"?\";\n    if (url.indexOf(paramChar) > -1) paramChar = \"&\";\n\n    var s = document.createElement(\"script\");\n    s.setAttribute(\"src\", url + paramChar + \"callback=CABLES.jsonpFunc\" + jsonPID);\n    // s.onload=function()\n    // {\n    // };\n    document.body.appendChild(s);\n};\n\nexport const ajaxSync = function (url, cb, method, post, contenttype)\n{\n    request({\n        url,\n        cb,\n        method,\n        data: post,\n        contenttype,\n        sync: true,\n    });\n};\n\nexport const ajax = function (url, cb, method, post, contenttype, jsonp)\n{\n    request({\n        url,\n        cb,\n        method,\n        \"data:\": post,\n        contenttype,\n        sync: false,\n        jsonp,\n    });\n};\n\nexport const request = function (options)\n{\n    if (!options.hasOwnProperty(\"asynch\")) options.asynch = true;\n\n    var xhr;\n    try\n    {\n        xhr = new XMLHttpRequest();\n    }\n    catch (e) {}\n\n    xhr.onreadystatechange = function ()\n    {\n        if (xhr.readyState != 4) return;\n\n        if (options.cb)\n        {\n            if (xhr.status == 200 || xhr.status == 0) options.cb(false, xhr.responseText, xhr);\n            else options.cb(true, xhr.responseText, xhr);\n        }\n    };\n\n    xhr.addEventListener(\"progress\", (ev) =>\n    {\n        // console.log('progress',ev.loaded/1024+' kb');\n        // if (ev.lengthComputable)\n        // {\n        //     var percentComplete = ev.loaded / ev.total;\n        //     console.log(url,percentComplete);\n        // }\n    });\n\n    xhr.open(options.method ? options.method.toUpperCase() : \"GET\", options.url, !options.sync);\n\n    if (!options.post && !options.data)\n    {\n        xhr.send();\n    }\n    else\n    {\n        xhr.setRequestHeader(\n            \"Content-type\",\n            options.contenttype ? options.contenttype : \"application/x-www-form-urlencoded\",\n        );\n        xhr.send(options.data || options.post);\n    }\n};\n\n// ----------------------------------------------------------------\n\nwindow.performance = window.performance || {\n    offset: Date.now(),\n    now: function now()\n    {\n        return Date.now() - this.offset;\n    },\n};\n\nexport { UTILS };\n"
            },
            {
              "id": null,
              "identifier": "/home/tom/cables_dev/cables/src/core/constants.js",
              "name": "./src/core/constants.js",
              "index": 7,
              "index2": 3,
              "size": 2162,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
              ],
              "issuer": "/home/tom/cables_dev/cables/src/core/index.js",
              "issuerId": null,
              "issuerName": "./src/core/index.js",
              "issuerPath": [
                {
                  "id": 0,
                  "identifier": "multi /home/tom/cables_dev/cables/src/core/index.js",
                  "name": "multi ./src/core/index.js"
                },
                {
                  "id": null,
                  "identifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "name": "./src/core/index.js"
                }
              ],
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "assets": [
              ],
              "reasons": [
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/patchConnection.js",
                  "module": "./src/core/patchConnection.js",
                  "moduleName": "./src/core/patchConnection.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./constants",
                  "loc": "1:0-40"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_link.js",
                  "module": "./src/core/core_link.js",
                  "moduleName": "./src/core/core_link.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./constants",
                  "loc": "1:0-40"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/webaudio.js",
                  "module": "./src/core/webaudio.js",
                  "moduleName": "./src/core/webaudio.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./constants",
                  "loc": "1:0-40"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./constants",
                  "loc": "2:0-40"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_port.js",
                  "module": "./src/core/core_port.js",
                  "moduleName": "./src/core/core_port.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./constants",
                  "loc": "4:0-40"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/anim.js",
                  "module": "./src/core/anim.js",
                  "moduleName": "./src/core/anim.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./constants",
                  "loc": "4:0-40"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/glpatch.js",
                  "module": "./src/core/glpatch.js",
                  "moduleName": "./src/core/glpatch.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./constants",
                  "loc": "8:0-40"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_patch.js",
                  "module": "./src/core/core_patch.js",
                  "moduleName": "./src/core/core_patch.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./constants",
                  "loc": "10:0-40"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "module": "./src/core/index.js",
                  "moduleName": "./src/core/index.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./constants",
                  "loc": "20:0-40"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/anim.js",
                  "module": "./src/core/anim.js",
                  "moduleName": "./src/core/anim.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "26:19-28"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_port.js",
                  "module": "./src/core/core_port.js",
                  "moduleName": "./src/core/core_port.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "28:21-30"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_port.js",
                  "module": "./src/core/core_port.js",
                  "moduleName": "./src/core/core_port.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "42:24-33"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/patchConnection.js",
                  "module": "./src/core/patchConnection.js",
                  "moduleName": "./src/core/patchConnection.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "43:22-31"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "module": "./src/core/index.js",
                  "moduleName": "./src/core/index.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "47:4-13"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "module": "./src/core/index.js",
                  "moduleName": "./src/core/index.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "48:4-13"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "module": "./src/core/index.js",
                  "moduleName": "./src/core/index.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "49:4-13"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/patchConnection.js",
                  "module": "./src/core/patchConnection.js",
                  "moduleName": "./src/core/patchConnection.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "49:27-36"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "module": "./src/core/index.js",
                  "moduleName": "./src/core/index.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "50:4-13"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_link.js",
                  "module": "./src/core/core_link.js",
                  "moduleName": "./src/core/core_link.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "50:32-41"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/patchConnection.js",
                  "module": "./src/core/patchConnection.js",
                  "moduleName": "./src/core/patchConnection.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "55:27-36"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "58:38-47"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/patchConnection.js",
                  "module": "./src/core/patchConnection.js",
                  "moduleName": "./src/core/patchConnection.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "60:27-36"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "60:44-53"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "61:91-100"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/patchConnection.js",
                  "module": "./src/core/patchConnection.js",
                  "moduleName": "./src/core/patchConnection.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "65:27-36"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/patchConnection.js",
                  "module": "./src/core/patchConnection.js",
                  "moduleName": "./src/core/patchConnection.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "70:27-36"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/patchConnection.js",
                  "module": "./src/core/patchConnection.js",
                  "moduleName": "./src/core/patchConnection.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "75:27-36"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/patchConnection.js",
                  "module": "./src/core/patchConnection.js",
                  "moduleName": "./src/core/patchConnection.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "83:27-36"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_link.js",
                  "module": "./src/core/core_link.js",
                  "moduleName": "./src/core/core_link.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "88:43-52"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/patchConnection.js",
                  "module": "./src/core/patchConnection.js",
                  "moduleName": "./src/core/patchConnection.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "89:27-36"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_link.js",
                  "module": "./src/core/core_link.js",
                  "moduleName": "./src/core/core_link.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "118:24-33"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "151:22-31"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_link.js",
                  "module": "./src/core/core_link.js",
                  "moduleName": "./src/core/core_link.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "168:28-37"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "170:40-49"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_link.js",
                  "module": "./src/core/core_link.js",
                  "moduleName": "./src/core/core_link.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "172:19-28"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_link.js",
                  "module": "./src/core/core_link.js",
                  "moduleName": "./src/core/core_link.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "172:67-76"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "175:41-50"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_link.js",
                  "module": "./src/core/core_link.js",
                  "moduleName": "./src/core/core_link.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "180:24-33"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_link.js",
                  "module": "./src/core/core_link.js",
                  "moduleName": "./src/core/core_link.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "181:24-33"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "188:22-31"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_port.js",
                  "module": "./src/core/core_port.js",
                  "moduleName": "./src/core/core_port.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "190:66-75"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_port.js",
                  "module": "./src/core/core_port.js",
                  "moduleName": "./src/core/core_port.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "190:116-125"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_link.js",
                  "module": "./src/core/core_link.js",
                  "moduleName": "./src/core/core_link.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "205:24-33"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_link.js",
                  "module": "./src/core/core_link.js",
                  "moduleName": "./src/core/core_link.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "206:24-33"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "208:52-61"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_link.js",
                  "module": "./src/core/core_link.js",
                  "moduleName": "./src/core/core_link.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "214:42-51"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_link.js",
                  "module": "./src/core/core_link.js",
                  "moduleName": "./src/core/core_link.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "214:90-99"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_link.js",
                  "module": "./src/core/core_link.js",
                  "moduleName": "./src/core/core_link.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "215:19-28"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_link.js",
                  "module": "./src/core/core_link.js",
                  "moduleName": "./src/core/core_link.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "215:67-76"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_port.js",
                  "module": "./src/core/core_port.js",
                  "moduleName": "./src/core/core_port.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "218:46-55"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_port.js",
                  "module": "./src/core/core_port.js",
                  "moduleName": "./src/core/core_port.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "224:34-43"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "224:52-61"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/webaudio.js",
                  "module": "./src/core/webaudio.js",
                  "moduleName": "./src/core/webaudio.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "243:9-18"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/webaudio.js",
                  "module": "./src/core/webaudio.js",
                  "moduleName": "./src/core/webaudio.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "243:42-51"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "243:52-61"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/glpatch.js",
                  "module": "./src/core/glpatch.js",
                  "moduleName": "./src/core/glpatch.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "245:17-26"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/glpatch.js",
                  "module": "./src/core/glpatch.js",
                  "moduleName": "./src/core/glpatch.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "246:26-35"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/glpatch.js",
                  "module": "./src/core/glpatch.js",
                  "moduleName": "./src/core/glpatch.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "247:26-35"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/glpatch.js",
                  "module": "./src/core/glpatch.js",
                  "moduleName": "./src/core/glpatch.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "248:26-35"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/glpatch.js",
                  "module": "./src/core/glpatch.js",
                  "moduleName": "./src/core/glpatch.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "249:26-35"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/glpatch.js",
                  "module": "./src/core/glpatch.js",
                  "moduleName": "./src/core/glpatch.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "250:26-35"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "265:52-61"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_port.js",
                  "module": "./src/core/core_port.js",
                  "moduleName": "./src/core/core_port.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "279:21-30"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_port.js",
                  "module": "./src/core/core_port.js",
                  "moduleName": "./src/core/core_port.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "280:21-30"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_port.js",
                  "module": "./src/core/core_port.js",
                  "moduleName": "./src/core/core_port.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "281:21-30"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_port.js",
                  "module": "./src/core/core_port.js",
                  "moduleName": "./src/core/core_port.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "282:21-30"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_port.js",
                  "module": "./src/core/core_port.js",
                  "moduleName": "./src/core/core_port.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "283:21-30"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_port.js",
                  "module": "./src/core/core_port.js",
                  "moduleName": "./src/core/core_port.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "284:21-30"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "285:52-61"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_port.js",
                  "module": "./src/core/core_port.js",
                  "moduleName": "./src/core/core_port.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "295:25-34"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "298:52-61"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_port.js",
                  "module": "./src/core/core_port.js",
                  "moduleName": "./src/core/core_port.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "303:26-35"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/anim.js",
                  "module": "./src/core/anim.js",
                  "moduleName": "./src/core/anim.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "312:24-33"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/anim.js",
                  "module": "./src/core/anim.js",
                  "moduleName": "./src/core/anim.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "313:29-38"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/anim.js",
                  "module": "./src/core/anim.js",
                  "moduleName": "./src/core/anim.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "314:29-38"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/anim.js",
                  "module": "./src/core/anim.js",
                  "moduleName": "./src/core/anim.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "315:29-38"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/anim.js",
                  "module": "./src/core/anim.js",
                  "moduleName": "./src/core/anim.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "316:29-38"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/anim.js",
                  "module": "./src/core/anim.js",
                  "moduleName": "./src/core/anim.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "317:29-38"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "317:52-61"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/anim.js",
                  "module": "./src/core/anim.js",
                  "moduleName": "./src/core/anim.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "318:29-38"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/anim.js",
                  "module": "./src/core/anim.js",
                  "moduleName": "./src/core/anim.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "319:29-38"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/anim.js",
                  "module": "./src/core/anim.js",
                  "moduleName": "./src/core/anim.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "320:29-38"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/anim.js",
                  "module": "./src/core/anim.js",
                  "moduleName": "./src/core/anim.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "321:29-38"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/anim.js",
                  "module": "./src/core/anim.js",
                  "moduleName": "./src/core/anim.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "322:29-38"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/anim.js",
                  "module": "./src/core/anim.js",
                  "moduleName": "./src/core/anim.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "323:29-38"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/anim.js",
                  "module": "./src/core/anim.js",
                  "moduleName": "./src/core/anim.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "324:29-38"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/anim.js",
                  "module": "./src/core/anim.js",
                  "moduleName": "./src/core/anim.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "325:29-38"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/anim.js",
                  "module": "./src/core/anim.js",
                  "moduleName": "./src/core/anim.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "326:29-38"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/anim.js",
                  "module": "./src/core/anim.js",
                  "moduleName": "./src/core/anim.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "327:29-38"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/anim.js",
                  "module": "./src/core/anim.js",
                  "moduleName": "./src/core/anim.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "328:29-38"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/anim.js",
                  "module": "./src/core/anim.js",
                  "moduleName": "./src/core/anim.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "329:29-38"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/anim.js",
                  "module": "./src/core/anim.js",
                  "moduleName": "./src/core/anim.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "330:29-38"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/anim.js",
                  "module": "./src/core/anim.js",
                  "moduleName": "./src/core/anim.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "331:29-38"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/anim.js",
                  "module": "./src/core/anim.js",
                  "moduleName": "./src/core/anim.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "332:29-38"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/anim.js",
                  "module": "./src/core/anim.js",
                  "moduleName": "./src/core/anim.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "333:29-38"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/anim.js",
                  "module": "./src/core/anim.js",
                  "moduleName": "./src/core/anim.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "334:29-38"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/anim.js",
                  "module": "./src/core/anim.js",
                  "moduleName": "./src/core/anim.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "335:29-38"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/anim.js",
                  "module": "./src/core/anim.js",
                  "moduleName": "./src/core/anim.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "336:29-38"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/anim.js",
                  "module": "./src/core/anim.js",
                  "moduleName": "./src/core/anim.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "337:29-38"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "339:52-61"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/anim.js",
                  "module": "./src/core/anim.js",
                  "moduleName": "./src/core/anim.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "344:23-32"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "352:52-61"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_port.js",
                  "module": "./src/core/core_port.js",
                  "moduleName": "./src/core/core_port.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "358:26-35"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_port.js",
                  "module": "./src/core/core_port.js",
                  "moduleName": "./src/core/core_port.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "360:25-34"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "375:52-61"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/anim.js",
                  "module": "./src/core/anim.js",
                  "moduleName": "./src/core/anim.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "396:24-33"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "397:33-42"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "424:52-61"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "443:52-61"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "454:52-61"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "473:52-61"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/anim.js",
                  "module": "./src/core/anim.js",
                  "moduleName": "./src/core/anim.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "475:25-34"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "488:52-61"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "495:52-61"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "510:52-61"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "527:52-61"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "547:53-62"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "564:53-62"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "580:53-62"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "596:53-62"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "602:53-62"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "618:53-62"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_port.js",
                  "module": "./src/core/core_port.js",
                  "moduleName": "./src/core/core_port.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "623:16-25"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_port.js",
                  "module": "./src/core/core_port.js",
                  "moduleName": "./src/core/core_port.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "624:16-25"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_port.js",
                  "module": "./src/core/core_port.js",
                  "moduleName": "./src/core/core_port.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "625:16-25"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_port.js",
                  "module": "./src/core/core_port.js",
                  "moduleName": "./src/core/core_port.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "626:16-25"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_port.js",
                  "module": "./src/core/core_port.js",
                  "moduleName": "./src/core/core_port.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "627:16-25"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_port.js",
                  "module": "./src/core/core_port.js",
                  "moduleName": "./src/core/core_port.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "628:16-25"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "634:53-62"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "650:53-62"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "658:37-46"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/anim.js",
                  "module": "./src/core/anim.js",
                  "moduleName": "./src/core/anim.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "688:32-41"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/anim.js",
                  "module": "./src/core/anim.js",
                  "moduleName": "./src/core/anim.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "689:34-43"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/anim.js",
                  "module": "./src/core/anim.js",
                  "moduleName": "./src/core/anim.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "690:36-45"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/anim.js",
                  "module": "./src/core/anim.js",
                  "moduleName": "./src/core/anim.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "691:38-47"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/anim.js",
                  "module": "./src/core/anim.js",
                  "moduleName": "./src/core/anim.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "693:34-43"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/anim.js",
                  "module": "./src/core/anim.js",
                  "moduleName": "./src/core/anim.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "694:35-44"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/anim.js",
                  "module": "./src/core/anim.js",
                  "moduleName": "./src/core/anim.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "695:38-47"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/anim.js",
                  "module": "./src/core/anim.js",
                  "moduleName": "./src/core/anim.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "697:33-42"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "697:47-56"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/anim.js",
                  "module": "./src/core/anim.js",
                  "moduleName": "./src/core/anim.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "698:34-43"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/anim.js",
                  "module": "./src/core/anim.js",
                  "moduleName": "./src/core/anim.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "699:37-46"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/anim.js",
                  "module": "./src/core/anim.js",
                  "moduleName": "./src/core/anim.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "701:32-41"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/anim.js",
                  "module": "./src/core/anim.js",
                  "moduleName": "./src/core/anim.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "702:33-42"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/anim.js",
                  "module": "./src/core/anim.js",
                  "moduleName": "./src/core/anim.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "703:36-45"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/anim.js",
                  "module": "./src/core/anim.js",
                  "moduleName": "./src/core/anim.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "705:33-42"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/anim.js",
                  "module": "./src/core/anim.js",
                  "moduleName": "./src/core/anim.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "706:34-43"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/anim.js",
                  "module": "./src/core/anim.js",
                  "moduleName": "./src/core/anim.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "707:37-46"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/anim.js",
                  "module": "./src/core/anim.js",
                  "moduleName": "./src/core/anim.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "709:36-45"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/anim.js",
                  "module": "./src/core/anim.js",
                  "moduleName": "./src/core/anim.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "710:37-46"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/anim.js",
                  "module": "./src/core/anim.js",
                  "moduleName": "./src/core/anim.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "712:35-44"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/anim.js",
                  "module": "./src/core/anim.js",
                  "moduleName": "./src/core/anim.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "713:36-45"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/anim.js",
                  "module": "./src/core/anim.js",
                  "moduleName": "./src/core/anim.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "715:35-44"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/anim.js",
                  "module": "./src/core/anim.js",
                  "moduleName": "./src/core/anim.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "716:34-43"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/anim.js",
                  "module": "./src/core/anim.js",
                  "moduleName": "./src/core/anim.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "717:38-47"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/anim.js",
                  "module": "./src/core/anim.js",
                  "moduleName": "./src/core/anim.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "719:35-44"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/anim.js",
                  "module": "./src/core/anim.js",
                  "moduleName": "./src/core/anim.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "720:34-43"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/anim.js",
                  "module": "./src/core/anim.js",
                  "moduleName": "./src/core/anim.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "721:38-47"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/anim.js",
                  "module": "./src/core/anim.js",
                  "moduleName": "./src/core/anim.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "727:28-37"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/anim.js",
                  "module": "./src/core/anim.js",
                  "moduleName": "./src/core/anim.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "729:20-29"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_patch.js",
                  "module": "./src/core/core_patch.js",
                  "moduleName": "./src/core/core_patch.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "865:72-81"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_patch.js",
                  "module": "./src/core/core_patch.js",
                  "moduleName": "./src/core/core_patch.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "881:43-52"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "978:51-60"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "995:42-51"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "995:103-112"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "999:42-51"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "1012:43-52"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "1226:63-72"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "1235:38-47"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "1241:38-47"
                }
              ],
              "usedExports": [
                "CONSTANTS"
              ],
              "providedExports": [
                "CONSTANTS"
              ],
              "optimizationBailout": [
              ],
              "depth": 2,
              "source": "export const CONSTANTS = {\n    ANIM: {\n        EASINGS: [\n            \"linear\",\n            \"absolute\",\n            \"smoothstep\",\n            \"smootherstep\",\n            \"Cubic In\",\n            \"Cubic Out\",\n            \"Cubic In Out\",\n            \"Expo In\",\n            \"Expo Out\",\n            \"Expo In Out\",\n            \"Sin In\",\n            \"Sin Out\",\n            \"Sin In Out\",\n            \"Quart In\",\n            \"Quart Out\",\n            \"Quart In Out\",\n            \"Quint In\",\n            \"Quint Out\",\n            \"Quint In Out\",\n            \"Back In\",\n            \"Back Out\",\n            \"Back In Out\",\n            \"Elastic In\",\n            \"Elastic Out\",\n            \"Elastic In Out\",\n            \"Bounce In\",\n            \"Bounce Out\",\n        ],\n        EASING_LINEAR: 0,\n        EASING_ABSOLUTE: 1,\n        EASING_SMOOTHSTEP: 2,\n        EASING_SMOOTHERSTEP: 3,\n        EASING_BEZIER: 4,\n\n        EASING_CUBIC_IN: 5,\n        EASING_CUBIC_OUT: 6,\n        EASING_CUBIC_INOUT: 7,\n\n        EASING_EXPO_IN: 8,\n        EASING_EXPO_OUT: 9,\n        EASING_EXPO_INOUT: 10,\n\n        EASING_SIN_IN: 11,\n        EASING_SIN_OUT: 12,\n        EASING_SIN_INOUT: 13,\n\n        EASING_BACK_IN: 14,\n        EASING_BACK_OUT: 15,\n        EASING_BACK_INOUT: 16,\n\n        EASING_ELASTIC_IN: 17,\n        EASING_ELASTIC_OUT: 18,\n\n        EASING_BOUNCE_IN: 19,\n        EASING_BOUNCE_OUT: 21,\n\n        EASING_QUART_IN: 22,\n        EASING_QUART_OUT: 23,\n        EASING_QUART_INOUT: 24,\n\n        EASING_QUINT_IN: 25,\n        EASING_QUINT_OUT: 26,\n        EASING_QUINT_INOUT: 27,\n    },\n\n    OP: {\n        OP_PORT_TYPE_VALUE: 0,\n        OP_PORT_TYPE_FUNCTION: 1,\n        OP_PORT_TYPE_OBJECT: 2,\n        OP_PORT_TYPE_TEXTURE: 2,\n        OP_PORT_TYPE_ARRAY: 3,\n        OP_PORT_TYPE_DYNAMIC: 4,\n        OP_PORT_TYPE_STRING: 5,\n\n        OP_VERSION_PREFIX: \"_v\",\n    },\n\n    PORT: {\n        PORT_DIR_IN: 0,\n        PORT_DIR_OUT: 1,\n    },\n\n    PACO: {\n        PACO_CLEAR: 0,\n        PACO_VALUECHANGE: 1,\n        PACO_OP_DELETE: 2,\n        PACO_UNLINK: 3,\n        PACO_LINK: 4,\n        PACO_LOAD: 5,\n        PACO_OP_CREATE: 6,\n        PACO_OP_ENABLE: 7,\n        PACO_OP_DISABLE: 8,\n    },\n};\n"
            },
            {
              "id": null,
              "identifier": "/home/tom/cables_dev/cables/src/core/core_port.js",
              "name": "./src/core/core_port.js",
              "index": 6,
              "index2": 4,
              "size": 16334,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
              ],
              "issuer": "/home/tom/cables_dev/cables/src/core/index.js",
              "issuerId": null,
              "issuerName": "./src/core/index.js",
              "issuerPath": [
                {
                  "id": 0,
                  "identifier": "multi /home/tom/cables_dev/cables/src/core/index.js",
                  "name": "multi ./src/core/index.js"
                },
                {
                  "id": null,
                  "identifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "name": "./src/core/index.js"
                }
              ],
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "assets": [
              ],
              "reasons": [
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/anim.js",
                  "module": "./src/core/anim.js",
                  "moduleName": "./src/core/anim.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./core_port",
                  "loc": "2:0-35"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_shader_uniform.js",
                  "module": "./src/core/cgl/cgl_shader_uniform.js",
                  "moduleName": "./src/core/cgl/cgl_shader_uniform.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "../core_port",
                  "loc": "2:0-36"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./core_port",
                  "loc": "3:0-35"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "module": "./src/core/index.js",
                  "moduleName": "./src/core/index.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./core_port",
                  "loc": "6:0-35"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "module": "./src/core/index.js",
                  "moduleName": "./src/core/index.js",
                  "type": "harmony import specifier",
                  "userRequest": "./core_port",
                  "loc": "27:8-12"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_shader_uniform.js",
                  "module": "./src/core/cgl/cgl_shader_uniform.js",
                  "moduleName": "./src/core/cgl/cgl_shader_uniform.js",
                  "type": "harmony import specifier",
                  "userRequest": "../core_port",
                  "loc": "101:55-59"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./core_port",
                  "loc": "184:27-31"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./core_port",
                  "loc": "208:35-39"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./core_port",
                  "loc": "224:35-39"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./core_port",
                  "loc": "243:35-39"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./core_port",
                  "loc": "265:35-39"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./core_port",
                  "loc": "285:35-39"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./core_port",
                  "loc": "298:35-39"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./core_port",
                  "loc": "317:35-39"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./core_port",
                  "loc": "339:35-39"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./core_port",
                  "loc": "352:35-39"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./core_port",
                  "loc": "375:35-39"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./core_port",
                  "loc": "397:16-20"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./core_port",
                  "loc": "424:35-39"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./core_port",
                  "loc": "443:35-39"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./core_port",
                  "loc": "454:35-39"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./core_port",
                  "loc": "473:35-39"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./core_port",
                  "loc": "488:35-39"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./core_port",
                  "loc": "495:35-39"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./core_port",
                  "loc": "510:35-39"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./core_port",
                  "loc": "527:35-39"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./core_port",
                  "loc": "547:36-40"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./core_port",
                  "loc": "564:36-40"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./core_port",
                  "loc": "580:36-40"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./core_port",
                  "loc": "596:36-40"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./core_port",
                  "loc": "602:36-40"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./core_port",
                  "loc": "618:36-40"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./core_port",
                  "loc": "634:36-40"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./core_port",
                  "loc": "650:36-40"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./core_port",
                  "loc": "658:20-24"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/anim.js",
                  "module": "./src/core/anim.js",
                  "moduleName": "./src/core/anim.js",
                  "type": "harmony import specifier",
                  "userRequest": "./core_port",
                  "loc": "727:12-16"
                }
              ],
              "usedExports": [
                "Port"
              ],
              "providedExports": [
                "Port"
              ],
              "optimizationBailout": [
              ],
              "depth": 2,
              "source": "import { EventTarget } from \"./eventtarget\";\nimport { generateUUID } from \"./utils\";\nimport { Anim } from \"./anim\";\nimport { CONSTANTS } from \"./constants\";\n/**\n * data is coming into and out of ops through input and output ports\n * @external CABLES\n * @namespace Port\n * @class\n * @hideconstructor\n * @example\n * const myPort=op.inString(\"String Port\");\n */\n\n\nconst Port = function (__parent, name, type, uiAttribs)\n{\n    EventTarget.apply(this);\n\n    this.data = {}; // reserved for port-specific user-data\n    /**\n     * @type {Number}\n     * @name direction\n     * @instance\n     * @memberof Port\n     * @description direction of port (input(0) or output(1))\n     */\n    this.direction = CONSTANTS.PORT.PORT_DIR_IN;\n    this.id = generateUUID();\n    this.parent = __parent;\n\n    /**\n     * @type {Array<Link>}\n     * @name links\n     * @instance\n     * @memberof Port\n     * @description links of port\n     */\n    this.links = [];\n    this.value = 0.0;\n    this.name = name;\n    this.type = type || CONSTANTS.OP.OP_PORT_TYPE_VALUE;\n    this.uiAttribs = uiAttribs || {};\n    this.anim = null;\n    this._oldAnimVal = -5711;\n    this.defaultValue = null;\n\n    this._uiActiveState = true;\n    this.ignoreValueSerialize = false;\n    // this.onLink=null;\n    this.onLinkChanged = null;\n    this.crashed = false;\n\n    this._valueBeforeLink = null;\n    this._lastAnimFrame = -1;\n    this._animated = false;\n\n    this.onValueChanged = null;\n    this.onTriggered = null;\n    this.onUiActiveStateChange = null;\n    this.changeAlways = false;\n\n    this._warnedDeprecated = false;\n\n    // this.onUiAttrChange=null;\n\n    Object.defineProperty(this, \"val\", {\n        get()\n        {\n            this._warnedDeprecated = true;\n            return this.get();\n        },\n        set(v)\n        {\n            this.setValue(v);\n            // if(!this._warnedDeprecated)console.log('deprecated .val set used',this.parent.name);\n            this._warnedDeprecated = true;\n        },\n    });\n};\n\n/**\n * change listener for input value ports, overwrite to react to changes\n * @function onChange\n * @memberof Port\n * @instance\n * @example\n * const myPort=op.inString(\"MyPort\");\n * myPort.onChange=function()\n * {\n *   console.log(\"was changed to: \",myPort.get());\n * }\n *\n */\n\nPort.prototype.onAnimToggle = function () {};\nPort.prototype._onAnimToggle = function ()\n{\n    this.onAnimToggle();\n};\n\n/**\n * @function hidePort\n * @memberof Port\n * @instance\n * @description hide port rectangle in op\n */\nPort.prototype.hidePort = function ()\n{\n    this.setUiAttribs({ hidePort: true });\n};\n\n/**\n * @function remove\n * @memberof Port\n * @instance\n * @description remove port\n */\nPort.prototype.remove = function ()\n{\n    // this.setUiAttribs({hidePort:true});\n    this.removeLinks();\n    this.parent.removePort(this);\n};\n\n/**\n * set ui attributes\n * @function setUiAttribs\n * @memberof Port\n * @instance\n * @param {Object} newAttribs\n * <pre>\n * title - overwrite title of port (by default this is portname)\n * greyout - port paramater will appear greyed out, can not be\n * hidePort - port will be hidden from op\n * hideParam - port params will be hidden from parameter panel\n * showIndex - only for dropdowns - show value index (e.g. `0 - normal` )\n * editorSyntax - set syntax highlighting theme for editor port\n * </pre>\n * @example\n * myPort.setUiAttribs({greyout:true});\n */\nPort.prototype.setUiAttribs = function (newAttribs)\n{\n    if (!this.uiAttribs) this.uiAttribs = {};\n    for (var p in newAttribs)\n    {\n        this.uiAttribs[p] = newAttribs[p];\n    }\n    // if(this.onUiAttrChange) this.onUiAttrChange(newAttribs);\n    this.emitEvent(\"onUiAttrChange\", newAttribs);\n    // console.log(\"new attribs!\",newAttribs);\n};\n\n/**\n * @function get\n * @memberof Port\n * @instance\n * @description get value of port\n */\nPort.prototype.get = function ()\n{\n    if (this._animated && this._lastAnimFrame != this.parent.patch.getFrameNum())\n    {\n        this._lastAnimFrame = this.parent.patch.getFrameNum();\n        this.value = this.anim.getValue(this.parent.patch.timer.getTime());\n\n        // if(this._oldAnimVal!=this.value)\n        {\n            this._oldAnimVal = this.value;\n            this.forceChange();\n        }\n    }\n\n    return this.value;\n};\n\n/**\n * @function setValue\n * @memberof Port\n * @instance\n * @description set value of port / will send value to all linked ports (only for output ports)\n */\nPort.prototype.set = Port.prototype.setValue = function (v)\n{\n    if (v === undefined) return;\n\n    if (this.parent.enabled && !this.crashed)\n    {\n        if (v !== this.value || this.changeAlways || this.type == CONSTANTS.OP.OP_PORT_TYPE_TEXTURE || this.type == CONSTANTS.OP.OP_PORT_TYPE_ARRAY)\n        {\n            if (this._animated)\n            {\n                this.anim.setValue(this.parent.patch.timer.getTime(), v);\n            }\n            else\n            {\n                try\n                {\n                    this.value = v;\n                    this.forceChange();\n                }\n                catch (ex)\n                {\n                    this.crashed = true;\n                    this.setValue = function (v) {};\n                    this.onTriggered = function () {};\n\n                    console.log(\"exception!\");\n                    console.error(\"onvaluechanged exception cought\", ex);\n                    console.log(ex.stack);\n                    console.log(\"exception in: \" + this.parent.name);\n                    if (gui) gui.showOpCrash(this.parent);\n\n                    this.parent.patch.emitEvent(\"exception\".ex,this.parent);\n                }\n\n                if (CABLES.UI && this.type == CONSTANTS.OP.OP_PORT_TYPE_TEXTURE)\n                {\n                    gui.texturePreview().updateTexturePort(this);\n                }\n            }\n\n            if (this.direction == CONSTANTS.PORT.PORT_DIR_OUT) for (var i = 0; i < this.links.length; ++i) this.links[i].setValue();\n        }\n    }\n};\n\nPort.prototype.updateAnim = function ()\n{\n    if (this._animated)\n    {\n        this.value = this.get();\n\n        if (this._oldAnimVal != this.value || this.changeAlways)\n        {\n            this._oldAnimVal = this.value;\n            this.forceChange();\n        }\n        this._oldAnimVal = this.value;\n    }\n};\n\nPort.args = function (func)\n{\n    return (func + \"\")\n        .replace(/[/][/].*$/gm, \"\") // strip single-line comments\n        .replace(/\\s+/g, \"\") // strip white space\n        .replace(/[/][*][^/*]*[*][/]/g, \"\") // strip multi-line comments\n        .split(\"){\", 1)[0]\n        .replace(/^[^(]*[(]/, \"\") // extract the parameters\n        .replace(/=[^,]+/g, \"\") // strip any ES6 defaults\n        .split(\",\")\n        .filter(Boolean); // split & filter [\"\"]\n};\n\nPort.prototype.forceChange = function ()\n{\n    if (this.onValueChanged || this.onChange)\n    {\n        // very temporary: deprecated warning!!!!!!!!!\n        // var params=Port.args(this.onValueChanged||this.onChange)\n        // if(params.length>0) console.warn('TOM: port has onchange params!',this.parent.objName,this.name);\n    }\n\n    if (this.onChange) this.onChange(this, this.value);\n    else if (this.onValueChanged) this.onValueChanged(this, this.value); // deprecated\n};\n\n/**\n * @function getTypeString\n * @memberof Port\n * @instance\n * @description get port type as string, e.g. \"Function\",\"Value\"...\n * @return {String} type\n */\nPort.prototype.getTypeString = function ()\n{\n    if (this.type == CONSTANTS.OP.OP_PORT_TYPE_VALUE) return \"Number\";\n    if (this.type == CONSTANTS.OP.OP_PORT_TYPE_FUNCTION) return \"Trigger\";\n    if (this.type == CONSTANTS.OP.OP_PORT_TYPE_OBJECT) return \"Object\";\n    if (this.type == CONSTANTS.OP.OP_PORT_TYPE_DYNAMIC) return \"Dynamic\";\n    if (this.type == CONSTANTS.OP.OP_PORT_TYPE_ARRAY) return \"Array\";\n    if (this.type == CONSTANTS.OP.OP_PORT_TYPE_STRING) return \"String\";\n    return \"Unknown\";\n};\n\nPort.prototype.getSerialized = function ()\n{\n    var obj = {};\n    obj.name = this.getName();\n\n    if (!this.ignoreValueSerialize && this.links.length === 0)\n    {\n        if (this.type == CONSTANTS.OP.OP_PORT_TYPE_OBJECT && this.value && this.value.tex)\n        {\n        }\n        else obj.value = this.value;\n    }\n    if (this._animated) obj.animated = true;\n    if (this.anim) obj.anim = this.anim.getSerialized();\n    if (this.uiAttribs.display == \"file\") obj.display = this.uiAttribs.display;\n    if (this.direction == CONSTANTS.PORT.PORT_DIR_IN && this.links.length > 0)\n    {\n        obj.links = [];\n        for (var i in this.links)\n        {\n            if (this.links[i].portIn && this.links[i].portOut) obj.links.push(this.links[i].getSerialized());\n        }\n    }\n    return obj;\n};\n\nPort.prototype.shouldLink = function ()\n{\n    return true;\n};\n\n/**\n * @function removeLinks\n * @memberof Port\n * @instance\n * @description remove all links from port\n */\nPort.prototype.removeLinks = function ()\n{\n    var count = 0;\n    while (this.links.length > 0)\n    {\n        count++;\n        if (count > 5000)\n        {\n            console.warn(\"could not delete links... / infinite loop\");\n            this.links.length = 0;\n            break;\n        }\n        this.links[0].remove();\n    }\n};\n\n/**\n * @function removeLink\n * @memberof Port\n * @instance\n * @description remove all link from port\n * @param {CABLES.Link} link\n */\nPort.prototype.removeLink = function (link)\n{\n    for (var i in this.links)\n    {\n        if (this.links[i] == link)\n        {\n            this.links.splice(i, 1);\n        }\n    }\n\n    if (this.direction == CONSTANTS.PORT.PORT_DIR_IN)\n    {\n        if (this.type == CONSTANTS.OP.OP_PORT_TYPE_VALUE) this.setValue(this._valueBeforeLink || 0);\n        else this.setValue(this._valueBeforeLink || null);\n    }\n\n    // if (this.type == CABLES.CONSTANTS.OP.OP_PORT_TYPE_OBJECT && this.direction == CABLES.CONSTANTS.PORT.PORT_DIR_IN && this.links.length > 0)\n    // {\n    //     console.log(\"REMOVELINK OBJECT!!\",this);\n\n    //     for (var i=0;i<this.links.length;i++)\n    //     {\n    //         // console.log('iii', i, this.links[i].portOut.get());\n    //         // this.links[i].setValue();\n    //         // this.set(null);\n    //         // this.forceChange();\n    //         this.set(this.links[i].portOut.get());\n    //         console.log(this.get())\n    //         // this.forceChange();\n\n    //     }\n    // }\n\n    if (this.onLinkChanged) this.onLinkChanged();\n    this.emitEvent(\"onLinkChanged\");\n};\n\n/**\n * @function getName\n * @memberof Port\n * @instance\n * @description return port name\n */\nPort.prototype.getName = function ()\n{\n    return this.name;\n};\n\nPort.prototype.addLink = function (l)\n{\n    this._valueBeforeLink = this.value;\n    this.links.push(l);\n    if (this.onLinkChanged) this.onLinkChanged();\n    this.emitEvent(\"onLinkChanged\");\n};\n\n/**\n * @function getLinkTo\n * @memberof Port\n * @instance\n * @param {Port} otherPort\n * @description return link, which is linked to otherPort\n */\nPort.prototype.getLinkTo = function (p2)\n{\n    for (var i in this.links) if (this.links[i].portIn == p2 || this.links[i].portOut == p2) return this.links[i];\n};\n\n/**\n * @function removeLinkTo\n * @memberof Port\n * @instance\n * @param {Port} otherPort\n * @description removes link, which is linked to otherPort\n */\nPort.prototype.removeLinkTo = function (p2)\n{\n    for (var i in this.links)\n    {\n        if (this.links[i].portIn == p2 || this.links[i].portOut == p2)\n        {\n            this.links[i].remove();\n            if (this.onLinkChanged) this.onLinkChanged();\n            this.emitEvent(\"onLinkChanged\");\n            return;\n        }\n    }\n};\n\n/**\n * @function isLinkedTo\n * @memberof Port\n * @instance\n * @param {Port} otherPort\n * @description returns true if port is linked to otherPort\n */\nPort.prototype.isLinkedTo = function (p2)\n{\n    for (var i in this.links) if (this.links[i].portIn == p2 || this.links[i].portOut == p2) return true;\n\n    return false;\n};\n\n/**\n * @function trigger\n * @memberof Port\n * @instance\n * @description trigger the linked port (usually invoked on an output function port)\n */\nPort.prototype.trigger = function ()\n{\n    if (this.links.length === 0) return;\n    if (!this.parent.enabled) return;\n\n    var portTriggered = null;\n    try\n    {\n        for (var i = 0; i < this.links.length; ++i)\n        {\n            if (this.links[i].portIn)\n            {\n                portTriggered = this.links[i].portIn;\n                portTriggered._onTriggered();\n            }\n            if (this.links[i]) this.links[i].activity();\n        }\n    }\n    catch (ex)\n    {\n        this.parent.enabled = false;\n\n        if (CABLES.UI)\n        {\n            this.parent.patch.emitEvent(\"exception\".ex,portTriggered.parent);\n\n            if (window.gui) gui.showOpCrash(portTriggered.parent);\n        }\n        console.log(\"exception!\");\n        console.error(\"ontriggered exception cought\", ex);\n        console.log(ex.stack);\n        console.log(\"exception in: \" + portTriggered.parent.name);\n    }\n};\n\nPort.prototype.call = function ()\n{\n    console.log(\"call deprecated - use trigger() \");\n    this.trigger();\n};\n\nPort.prototype.execute = function ()\n{\n    console.log(\"### execute port: \" + this.getName(), this.goals.length);\n};\n\nPort.prototype.setAnimated = function (a)\n{\n    if (this._animated != a)\n    {\n        this._animated = a;\n        if (this._animated && !this.anim) this.anim = new Anim();\n        this._onAnimToggle();\n    }\n};\n\nPort.prototype.toggleAnim = function (val)\n{\n    this._animated = !this._animated;\n    if (this._animated && !this.anim) this.anim = new Anim();\n    this.setAnimated(this._animated);\n    this._onAnimToggle();\n};\n\n/**\n * <pre>\n * CABLES.CONSTANTS.OP.OP_PORT_TYPE_VALUE = 0;\n * CABLES.CONSTANTS.OP.OP_PORT_TYPE_FUNCTION = 1;\n * CABLES.CONSTANTS.OP.OP_PORT_TYPE_OBJECT = 2;\n * CABLES.CONSTANTS.OP.OP_PORT_TYPE_TEXTURE = 2;\n * CABLES.CONSTANTS.OP.OP_PORT_TYPE_ARRAY = 3;\n * CABLES.CONSTANTS.OP.OP_PORT_TYPE_DYNAMIC = 4;\n * CABLES.CONSTANTS.OP.OP_PORT_TYPE_STRING = 5;\n * </pre>\n * @function getType\n * @memberof Port\n * @instance\n * @return {Number} type of port\n */\nPort.prototype.getType = function ()\n{\n    return this.type;\n};\n\n/**\n * @function isLinked\n * @memberof Port\n * @instance\n * @return {Boolean} true if port is linked\n */\nPort.prototype.isLinked = function ()\n{\n    return this.links.length > 0;\n};\n\n/**\n * @function isAnimated\n * @memberof Port\n * @instance\n * @return {Boolean} true if port is animated\n */\nPort.prototype.isAnimated = function ()\n{\n    return this._animated;\n};\n\n/**\n * @function isHidden\n * @memberof Port\n * @instance\n * @return {Boolean} true if port is hidden\n */\nPort.prototype.isHidden = function ()\n{\n    return this.uiAttribs.hidePort;\n};\n\n/**\n * @function onTriggered\n * @memberof Port\n * @instance\n * @param {onTriggeredCallback} callback\n * @description set callback, which will be executed when port was triggered (usually output port)\n */\nPort.prototype._onTriggered = function ()\n{\n    this.parent.updateAnims();\n    if (this.parent.enabled && this.onTriggered) this.onTriggered();\n};\n\nPort.prototype._onTriggeredProfiling = function ()\n{\n    this.parent.updateAnims();\n    this.parent.patch.profiler.add(\"port\", this);\n\n    if (this.parent.enabled && this.onTriggered) this.onTriggered();\n    this.parent.patch.profiler.add(\"port\", null);\n};\n\nPort.prototype.onValueChange = function (cb)\n{\n    // deprecated\n    this.onChange = cb;\n};\n\nPort.prototype.getUiActiveState = function ()\n{\n    return this._uiActiveState;\n};\n\nPort.prototype.setUiActiveState = function (onoff)\n{\n    this._uiActiveState = onoff;\n    if (this.onUiActiveStateChange) this.onUiActiveStateChange();\n};\n\n/**\n * Returns the port type string, e.g. \"value\" based on the port type number\n * @function portTypeNumberToString\n * @instance\n * @memberof Port\n * @param {Number} type - The port type number\n * @returns {String} - The port type as string\n */\nPort.portTypeNumberToString = function (type)\n{\n    if (type == CONSTANTS.OP.OP_PORT_TYPE_VALUE) return \"value\";\n    if (type == CONSTANTS.OP.OP_PORT_TYPE_FUNCTION) return \"function\";\n    if (type == CONSTANTS.OP.OP_PORT_TYPE_OBJECT) return \"object\";\n    if (type == CONSTANTS.OP.OP_PORT_TYPE_ARRAY) return \"array\";\n    if (type == CONSTANTS.OP.OP_PORT_TYPE_STRING) return \"string\";\n    if (type == CONSTANTS.OP.OP_PORT_TYPE_DYNAMIC) return \"dynamic\";\n    return \"unknown\";\n};\n\nexport { Port };\n"
            },
            {
              "id": null,
              "identifier": "/home/tom/cables_dev/cables/src/core/anim.js",
              "name": "./src/core/anim.js",
              "index": 5,
              "index2": 5,
              "size": 20540,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
              ],
              "issuer": "/home/tom/cables_dev/cables/src/core/index.js",
              "issuerId": null,
              "issuerName": "./src/core/index.js",
              "issuerPath": [
                {
                  "id": 0,
                  "identifier": "multi /home/tom/cables_dev/cables/src/core/index.js",
                  "name": "multi ./src/core/index.js"
                },
                {
                  "id": null,
                  "identifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "name": "./src/core/index.js"
                }
              ],
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "assets": [
              ],
              "reasons": [
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_port.js",
                  "module": "./src/core/core_port.js",
                  "moduleName": "./src/core/core_port.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./anim",
                  "loc": "3:0-30"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "module": "./src/core/index.js",
                  "moduleName": "./src/core/index.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./anim",
                  "loc": "4:0-31"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_patch.js",
                  "module": "./src/core/core_patch.js",
                  "moduleName": "./src/core/core_patch.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./anim",
                  "loc": "9:0-36"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "module": "./src/core/index.js",
                  "moduleName": "./src/core/index.js",
                  "type": "harmony import specifier",
                  "userRequest": "./anim",
                  "loc": "45:4-8"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_port.js",
                  "module": "./src/core/core_port.js",
                  "moduleName": "./src/core/core_port.js",
                  "type": "harmony import specifier",
                  "userRequest": "./anim",
                  "loc": "508:58-62"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_port.js",
                  "module": "./src/core/core_port.js",
                  "moduleName": "./src/core/core_port.js",
                  "type": "harmony import specifier",
                  "userRequest": "./anim",
                  "loc": "516:54-58"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_patch.js",
                  "module": "./src/core/core_patch.js",
                  "moduleName": "./src/core/core_patch.js",
                  "type": "harmony import specifier",
                  "userRequest": "./anim",
                  "loc": "869:52-56"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_patch.js",
                  "module": "./src/core/core_patch.js",
                  "moduleName": "./src/core/core_patch.js",
                  "type": "harmony import specifier",
                  "userRequest": "./anim",
                  "loc": "873:48-52"
                }
              ],
              "usedExports": true,
              "providedExports": [
                "easeExpoIn",
                "easeExpoOut",
                "easeExpoInOut",
                "easeCubicIn",
                "easeCubicOut",
                "easeCubicInOut",
                "ANIM",
                "Anim",
                "TL"
              ],
              "optimizationBailout": [
              ],
              "depth": 2,
              "source": "// import { quat } from \"gl-matrix\";\nimport { Port } from \"./core_port\";\n\nimport { CONSTANTS } from \"./constants\";\n\nconst ANIM = {};\n\nANIM.Key = function (obj)\n{\n    this.time = 0.0;\n    this.value = 0.0;\n    this.ui = {};\n    this.onChange = null;\n    this._easing = 0;\n    this.bezTime = 0.5;\n    this.bezValue = 0;\n    this.bezTimeIn = -0.5;\n    this.bezValueIn = 0;\n\n    this.cb = null;\n    this.cbTriggered = false;\n\n    var bezierAnim = null;\n    this._updateBezier = false;\n\n    this.setEasing(CONSTANTS.ANIM.EASING_LINEAR);\n    this.set(obj);\n};\n\nANIM.Key.linear = function (perc, key1, key2)\n{\n    return parseFloat(key1.value) + parseFloat(key2.value - key1.value) * perc;\n};\n\nANIM.Key.easeLinear = function (perc, key2)\n{\n    return ANIM.Key.linear(perc, this, key2);\n};\n\nANIM.Key.easeAbsolute = function (perc, key2)\n{\n    return this.value;\n};\n\nexport const easeExpoIn = function (t)\n{\n    return (t = Math.pow(2, 10 * (t - 1)));\n};\n\nANIM.Key.easeExpoIn = function (t, key2)\n{\n    t = easeExpoIn(t);\n    return ANIM.Key.linear(t, this, key2);\n};\n\nexport const easeExpoOut = function (t)\n{\n    t = -Math.pow(2, -10 * t) + 1;\n    return t;\n};\n\nANIM.Key.easeExpoOut = function (t, key2)\n{\n    t = easeExpoOut(t);\n    return ANIM.Key.linear(t, this, key2);\n};\n\nexport const easeExpoInOut = function (t)\n{\n    t *= 2;\n    if (t < 1)\n    {\n        t = 0.5 * Math.pow(2, 10 * (t - 1));\n    }\n    else\n    {\n        t--;\n        t = 0.5 * (-Math.pow(2, -10 * t) + 2);\n    }\n    return t;\n};\n\nANIM.Key.easeExpoInOut = function (t, key2)\n{\n    t = easeExpoInOut(t);\n    return ANIM.Key.linear(t, this, key2);\n};\n\nANIM.Key.easeSinIn = function (t, key2)\n{\n    t = -1 * Math.cos((t * Math.PI) / 2) + 1;\n    return ANIM.Key.linear(t, this, key2);\n};\n\nANIM.Key.easeSinOut = function (t, key2)\n{\n    t = Math.sin((t * Math.PI) / 2);\n    return ANIM.Key.linear(t, this, key2);\n};\n\nANIM.Key.easeSinInOut = function (t, key2)\n{\n    t = -0.5 * (Math.cos(Math.PI * t) - 1.0);\n    return ANIM.Key.linear(t, this, key2);\n};\n\nexport const easeCubicIn = function (t)\n{\n    t = t * t * t;\n    return t;\n};\n\nANIM.Key.easeCubicIn = function (t, key2)\n{\n    t = easeCubicIn(t);\n    return ANIM.Key.linear(t, this, key2);\n};\n\n// b 0\n// c 1/2 or 1\n// d always 1\n// easeOutCubic: function (x, t, b, c, d) {\n//     return c*((t=t/d-1)*t*t + 1) + b;\n\nANIM.Key.easeInQuint = function (t, key2)\n{\n    t = t * t * t * t * t;\n    return ANIM.Key.linear(t, this, key2);\n};\nANIM.Key.easeOutQuint = function (t, key2)\n{\n    t = (t -= 1) * t * t * t * t + 1;\n    return ANIM.Key.linear(t, this, key2);\n};\nANIM.Key.easeInOutQuint = function (t, key2)\n{\n    if ((t /= 0.5) < 1) t = 0.5 * t * t * t * t * t;\n    else t = 0.5 * ((t -= 2) * t * t * t * t + 2);\n    return ANIM.Key.linear(t, this, key2);\n};\n\nANIM.Key.easeInQuart = function (t, key2)\n{\n    t = t * t * t * t;\n    return ANIM.Key.linear(t, this, key2);\n};\n\nANIM.Key.easeOutQuart = function (t, key2)\n{\n    // return -c * ((t=t/d-1)*t*t*t - 1) + b;\n    t = -1 * ((t -= 1) * t * t * t - 1);\n    return ANIM.Key.linear(t, this, key2);\n};\n\nANIM.Key.easeInOutQuart = function (t, key2)\n{\n    if ((t /= 0.5) < 1) t = 0.5 * t * t * t * t;\n    else t = -0.5 * ((t -= 2) * t * t * t - 2);\n    return ANIM.Key.linear(t, this, key2);\n};\n\nANIM.Key.bounce = function (t)\n{\n    if ((t /= 1) < 1 / 2.75) t = 7.5625 * t * t;\n    else if (t < 2 / 2.75) t = 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n    else if (t < 2.5 / 2.75) t = 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n    else t = 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n    return t;\n};\n\nANIM.Key.easeInBounce = function (t, key2)\n{\n    return ANIM.Key.linear(ANIM.Key.bounce(t), this, key2);\n    // return c - jQuery.easing.easeOutBounce (x, d-t, 0, c, d);\n};\n\nANIM.Key.easeOutBounce = function (t, key2)\n{\n    return ANIM.Key.linear(ANIM.Key.bounce(t), this, key2);\n};\n\nANIM.Key.easeInElastic = function (t, key2)\n{\n    var s = 1.70158;\n    var p = 0;\n    var a = 1;\n\n    var b = 0;\n    var d = 1;\n    var c = 1;\n\n    if (t === 0) t = b;\n    else if ((t /= d) == 1) t = b + c;\n    else\n    {\n        if (!p) p = d * 0.3;\n        if (a < Math.abs(c))\n        {\n            a = c;\n            s = p / 4;\n        }\n        else s = (p / (2 * Math.PI)) * Math.asin(c / a);\n        t = -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin(((t * d - s) * (2 * Math.PI)) / p)) + b;\n    }\n\n    return ANIM.Key.linear(t, this, key2);\n};\n\nANIM.Key.easeOutElastic = function (t, key2)\n{\n    var s = 1.70158;\n    var p = 0;\n    var a = 1;\n\n    var b = 0;\n    var d = 1;\n    var c = 1;\n\n    if (t === 0) t = b;\n    else if ((t /= d) == 1) t = b + c;\n    else\n    {\n        if (!p) p = d * 0.3;\n        if (a < Math.abs(c))\n        {\n            a = c;\n            s = p / 4;\n        }\n        else s = (p / (2 * Math.PI)) * Math.asin(c / a);\n        t = a * Math.pow(2, -10 * t) * Math.sin(((t * d - s) * (2 * Math.PI)) / p) + c + b;\n    }\n\n    return ANIM.Key.linear(t, this, key2);\n};\n\nANIM.Key.easeInBack = function (t, key2)\n{\n    var s = 1.70158;\n    t = t * t * ((s + 1) * t - s);\n\n    return ANIM.Key.linear(t, this, key2);\n};\n\nANIM.Key.easeOutBack = function (t, key2)\n{\n    var s = 1.70158;\n    t = (t = t / 1 - 1) * t * ((s + 1) * t + s) + 1;\n\n    return ANIM.Key.linear(t, this, key2);\n};\n\nANIM.Key.easeInOutBack = function (t, key2)\n{\n    var s = 1.70158;\n    var c = 1 / 2;\n    if ((t /= 1 / 2) < 1) t = c * (t * t * (((s *= 1.525) + 1) * t - s));\n    else t = c * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n\n    return ANIM.Key.linear(t, this, key2);\n};\n\nexport const easeCubicOut = function (t)\n{\n    t--;\n    t = t * t * t + 1;\n    return t;\n};\n\nANIM.Key.easeCubicOut = function (t, key2)\n{\n    t = easeCubicOut(t);\n    return ANIM.Key.linear(t, this, key2);\n};\n\nexport const easeCubicInOut = function (t)\n{\n    t *= 2;\n    if (t < 1) t = 0.5 * t * t * t;\n    else\n    {\n        t -= 2;\n        t = 0.5 * (t * t * t + 2);\n    }\n    return t;\n};\n\nANIM.Key.easeCubicInOut = function (t, key2)\n{\n    t = easeCubicInOut(t);\n    return ANIM.Key.linear(t, this, key2);\n};\n\nANIM.Key.easeSmoothStep = function (perc, key2)\n{\n    // var x = Math.max(0, Math.min(1, (perc-0)/(1-0)));\n    var x = Math.max(0, Math.min(1, perc));\n    perc = x * x * (3 - 2 * x); // smoothstep\n    return ANIM.Key.linear(perc, this, key2);\n};\n\nANIM.Key.easeSmootherStep = function (perc, key2)\n{\n    var x = Math.max(0, Math.min(1, (perc - 0) / (1 - 0)));\n    perc = x * x * x * (x * (x * 6 - 15) + 10); // smootherstep\n    return ANIM.Key.linear(perc, this, key2);\n};\n\nANIM.Key.prototype.setEasing = function (e)\n{\n    this._easing = e;\n\n    if (this._easing == CONSTANTS.ANIM.EASING_ABSOLUTE) this.ease = ANIM.Key.easeAbsolute;\n    else if (this._easing == CONSTANTS.ANIM.EASING_SMOOTHSTEP) this.ease = ANIM.Key.easeSmoothStep;\n    else if (this._easing == CONSTANTS.ANIM.EASING_SMOOTHERSTEP) this.ease = ANIM.Key.easeSmootherStep;\n    else if (this._easing == CONSTANTS.ANIM.EASING_CUBIC_IN) this.ease = ANIM.Key.easeCubicIn;\n    else if (this._easing == CONSTANTS.ANIM.EASING_CUBIC_OUT) this.ease = ANIM.Key.easeCubicOut;\n    else if (this._easing == CONSTANTS.ANIM.EASING_CUBIC_INOUT) this.ease = ANIM.Key.easeCubicInOut;\n    else if (this._easing == CONSTANTS.ANIM.EASING_EXPO_IN) this.ease = ANIM.Key.easeExpoIn;\n    else if (this._easing == CONSTANTS.ANIM.EASING_EXPO_OUT) this.ease = ANIM.Key.easeExpoOut;\n    else if (this._easing == CONSTANTS.ANIM.EASING_EXPO_INOUT) this.ease = ANIM.Key.easeExpoInOut;\n    else if (this._easing == CONSTANTS.ANIM.EASING_SIN_IN) this.ease = ANIM.Key.easeSinIn;\n    else if (this._easing == CONSTANTS.ANIM.EASING_SIN_OUT) this.ease = ANIM.Key.easeSinOut;\n    else if (this._easing == CONSTANTS.ANIM.EASING_SIN_INOUT) this.ease = ANIM.Key.easeSinInOut;\n    else if (this._easing == CONSTANTS.ANIM.EASING_BACK_OUT) this.ease = ANIM.Key.easeOutBack;\n    else if (this._easing == CONSTANTS.ANIM.EASING_BACK_IN) this.ease = ANIM.Key.easeInBack;\n    else if (this._easing == CONSTANTS.ANIM.EASING_BACK_INOUT) this.ease = ANIM.Key.easeInOutBack;\n    else if (this._easing == CONSTANTS.ANIM.EASING_ELASTIC_IN) this.ease = ANIM.Key.easeInElastic;\n    else if (this._easing == CONSTANTS.ANIM.EASING_ELASTIC_OUT) this.ease = ANIM.Key.easeOutElastic;\n    else if (this._easing == CONSTANTS.ANIM.EASING_BOUNCE_IN) this.ease = ANIM.Key.easeInBounce;\n    else if (this._easing == CONSTANTS.ANIM.EASING_BOUNCE_OUT) this.ease = ANIM.Key.easeOutBounce;\n    else if (this._easing == CONSTANTS.ANIM.EASING_QUART_OUT) this.ease = ANIM.Key.easeOutQuart;\n    else if (this._easing == CONSTANTS.ANIM.EASING_QUART_IN) this.ease = ANIM.Key.easeInQuart;\n    else if (this._easing == CONSTANTS.ANIM.EASING_QUART_INOUT) this.ease = ANIM.Key.easeInOutQuart;\n    else if (this._easing == CONSTANTS.ANIM.EASING_QUINT_OUT) this.ease = ANIM.Key.easeOutQuint;\n    else if (this._easing == CONSTANTS.ANIM.EASING_QUINT_IN) this.ease = ANIM.Key.easeInQuint;\n    else if (this._easing == CONSTANTS.ANIM.EASING_QUINT_INOUT) this.ease = ANIM.Key.easeInOutQuint;\n    else if (this._easing == CONSTANTS.ANIM.EASING_BEZIER)\n    {\n        this._updateBezier = true;\n        this.ease = ANIM.Key.easeBezier;\n    }\n    else\n    {\n        this._easing = CONSTANTS.ANIM.EASING_LINEAR;\n        this.ease = ANIM.Key.easeLinear;\n    }\n};\n\nANIM.Key.prototype.trigger = function ()\n{\n    this.cb();\n    this.cbTriggered = true;\n};\n\nANIM.Key.prototype.setValue = function (v)\n{\n    this.value = v;\n    this._updateBezier = true;\n    if (this.onChange !== null) this.onChange();\n};\n\nANIM.Key.prototype.set = function (obj)\n{\n    if (obj)\n    {\n        if (obj.e) this.setEasing(obj.e);\n        if (obj.cb)\n        {\n            this.cb = obj.cb;\n            this.cbTriggered = false;\n        }\n\n        if (obj.b)\n        {\n            this.bezTime = obj.b[0];\n            this.bezValue = obj.b[1];\n            this.bezTimeIn = obj.b[2];\n            this.bezValueIn = obj.b[3];\n            this._updateBezier = true;\n        }\n\n        if (obj.hasOwnProperty(\"t\")) this.time = obj.t;\n        if (obj.hasOwnProperty(\"time\")) this.time = obj.time;\n        if (obj.hasOwnProperty(\"v\")) this.value = obj.v;\n        else if (obj.hasOwnProperty(\"value\")) this.value = obj.value;\n    }\n    if (this.onChange !== null) this.onChange();\n};\n\nANIM.Key.prototype.getSerialized = function ()\n{\n    var obj = {};\n    obj.t = this.time;\n    obj.v = this.value;\n    obj.e = this._easing;\n    if (this._easing == CONSTANTS.ANIM.EASING_BEZIER) obj.b = [this.bezTime, this.bezValue, this.bezTimeIn, this.bezValueIn];\n\n    return obj;\n};\n\nANIM.Key.prototype.getEasing = function ()\n{\n    return this._easing;\n};\n\nexport { ANIM };\n\n// ------------------------------------------------------------------------------------------------------\n\n/**\n * Keyframed interpolated animation.\n *\n * Available Easings:\n * <pre>\n * CONSTANTS.ANIM.EASING_LINEAR\n * CONSTANTS.ANIM.EASING_ABSOLUTE\n * CONSTANTS.ANIM.EASING_SMOOTHSTEP\n * CONSTANTS.ANIM.EASING_SMOOTHERSTEP\n * CONSTANTS.ANIM.EASING_BEZIER\n\n * CONSTANTS.ANIM.EASING_CUBIC_IN\n * CONSTANTS.ANIM.EASING_CUBIC_OUT\n * CONSTANTS.ANIM.EASING_CUBIC_INOUT\n\n * CONSTANTS.ANIM.EASING_EXPO_IN\n * CONSTANTS.ANIM.EASING_EXPO_OUT\n * CONSTANTS.ANIM.EASING_EXPO_INOUT\n\n * CONSTANTS.ANIM.EASING_SIN_IN\n * CONSTANTS.ANIM.EASING_SIN_OUT\n * CONSTANTS.ANIM.EASING_SIN_INOUT\n\n * CONSTANTS.ANIM.EASING_BACK_IN\n * CONSTANTS.ANIM.EASING_BACK_OUT\n * CONSTANTS.ANIM.EASING_BACK_INOUT\n\n * CONSTANTS.ANIM.EASING_ELASTIC_IN\n * CONSTANTS.ANIM.EASING_ELASTIC_OUT\n\n * CONSTANTS.ANIM.EASING_BOUNCE_IN\n * CONSTANTS.ANIM.EASING_BOUNCE_OUT\n\n * CONSTANTS.ANIM.EASING_QUART_IN\n * CONSTANTS.ANIM.EASING_QUART_OUT\n * CONSTANTS.ANIM.EASING_QUART_INOUT\n\n * CONSTANTS.ANIM.EASING_QUINT_IN\n * CONSTANTS.ANIM.EASING_QUINT_OUT\n * CONSTANTS.ANIM.EASING_QUINT_INOUT\n * </pre>\n * @hideconstructor\n * @external CABLES\n * @namespace Anim\n * @class\n * @example\n * var anim=new CABLES.Anim();\n * anim.setValue(0,0);  // set value 0 at 0 seconds\n * anim.setValue(10,1); // set value 1 at 10 seconds\n * anim.getValue(5);    // get value at 5 seconds - this returns 0.5\n\n */\nconst Anim = function (cfg)\n{\n    this.keys = [];\n    this.onChange = null;\n    this.stayInTimeline = false;\n    this.loop = false;\n\n    /**\n     * @member defaultEasing\n     * @memberof Anim\n     * @instance\n     * @type {Number}\n     */\n    this.defaultEasing = CONSTANTS.ANIM.EASING_LINEAR;\n    this.onLooped = null;\n\n    this._timesLooped = 0;\n    this._needsSort = false;\n};\n\nAnim.prototype.forceChangeCallback = function ()\n{\n    if (this.onChange !== null) this.onChange();\n};\n\n/**\n * returns true if animation has ended at @time\n * checks if last key time is < time\n * @param {Number} time\n * @returns {Boolean}\n * @memberof Anim\n * @instance\n * @function\n */\nAnim.prototype.hasEnded = function (time)\n{\n    if (this.keys.length === 0) return true;\n    if (this.keys[this.keys.length - 1].time <= time) return true;\n    return false;\n};\n\nAnim.prototype.isRising = function (time)\n{\n    if (this.hasEnded(time)) return false;\n    var ki = this.getKeyIndex(time);\n    if (this.keys[ki].value < this.keys[ki + 1].value) return true;\n    return false;\n};\n\n/**\n * remove all keys from animation\n * @param {Number} [time=0] set a new key at time with the old value at time\n * @memberof Anim\n * @instance\n * @function\n */\nAnim.prototype.clear = function (time)\n{\n    var v = 0;\n    if (time) v = this.getValue(time);\n    this.keys.length = 0;\n\n    if (time) this.setValue(time, v);\n    if (this.onChange !== null) this.onChange();\n};\n\nAnim.prototype.sortKeys = function ()\n{\n    this.keys.sort((a, b) =>\n        parseFloat(a.time) - parseFloat(b.time));\n    this._needsSort = false;\n};\n\nAnim.prototype.getLength = function ()\n{\n    if (this.keys.length === 0) return 0;\n    return this.keys[this.keys.length - 1].time;\n};\n\nAnim.prototype.getKeyIndex = function (time)\n{\n    var index = 0;\n    for (var i = 0; i < this.keys.length; i++)\n    {\n        if (time >= this.keys[i].time) index = i;\n        if (this.keys[i].time > time) return index;\n    }\n    return index;\n};\n\n/**\n * set value at time\n * @function setValue\n * @memberof Anim\n * @instance\n * @param {Number} time\n * @param {Number} value\n * @param {Function} [callback] callback\n */\nAnim.prototype.setValue = function (time, value, cb)\n{\n    var found = false;\n    for (var i in this.keys)\n    {\n        if (this.keys[i].time == time)\n        {\n            found = this.keys[i];\n            this.keys[i].setValue(value);\n            this.keys[i].cb = cb;\n            break;\n        }\n    }\n\n    if (!found)\n    {\n        this.keys.push(new ANIM.Key({\n            time, value, e: this.defaultEasing, cb,\n        }));\n    }\n\n    if (this.onChange) this.onChange();\n    this._needsSort = true;\n};\n\nAnim.prototype.getSerialized = function ()\n{\n    var obj = {};\n    obj.keys = [];\n    obj.loop = this.loop;\n\n    for (var i in this.keys)\n    {\n        obj.keys.push(this.keys[i].getSerialized());\n    }\n\n    return obj;\n};\n\nAnim.prototype.getKey = function (time)\n{\n    var index = this.getKeyIndex(time);\n    return this.keys[index];\n};\n\nAnim.prototype.getNextKey = function (time)\n{\n    var index = this.getKeyIndex(time) + 1;\n    if (index >= this.keys.length) index = this.keys.length - 1;\n\n    return this.keys[index];\n};\n\nAnim.prototype.isFinished = function (time)\n{\n    if (this.keys.length <= 0) return true;\n    return time > this.keys[this.keys.length - 1].time;\n};\n\nAnim.prototype.isStarted = function (time)\n{\n    if (this.keys.length <= 0) return false;\n    return time >= this.keys[0].time;\n};\n\n/**\n * get value at time\n * @function getValue\n * @memberof Anim\n * @instance\n * @param {Number} [time] time\n * @returns {Number} interpolated value at time\n */\nAnim.prototype.getValue = function (time)\n{\n    if (this.keys.length === 0) return 0;\n    if (this._needsSort) this.sortKeys();\n\n    if (time < this.keys[0].time) return this.keys[0].value;\n\n    var lastKeyIndex = this.keys.length - 1;\n    if (this.loop && time > this.keys[lastKeyIndex].time)\n    {\n        var currentLoop = time / this.keys[lastKeyIndex].time;\n        if (currentLoop > this._timesLooped)\n        {\n            this._timesLooped++;\n            if (this.onLooped) this.onLooped();\n        }\n        time = (time - this.keys[0].time) % (this.keys[lastKeyIndex].time - this.keys[0].time);\n        time += this.keys[0].time;\n    }\n\n    var index = this.getKeyIndex(time);\n    if (index >= lastKeyIndex)\n    {\n        if (this.keys[lastKeyIndex].cb && !this.keys[lastKeyIndex].cbTriggered) this.keys[lastKeyIndex].trigger();\n\n        return this.keys[lastKeyIndex].value;\n    }\n    var index2 = parseInt(index, 10) + 1;\n    var key1 = this.keys[index];\n    var key2 = this.keys[index2];\n\n    if (key1.cb && !key1.cbTriggered) key1.trigger();\n\n    if (!key2) return -1;\n\n    var perc = (time - key1.time) / (key2.time - key1.time);\n    return key1.ease(perc, key2);\n};\n\nAnim.prototype.addKey = function (k)\n{\n    if (k.time === undefined)\n    {\n        console.log(\"key time undefined, ignoring!\");\n    }\n    else\n    {\n        this.keys.push(k);\n        if (this.onChange !== null) this.onChange();\n    }\n};\n\nAnim.prototype.easingFromString = function (str)\n{\n    if (str == \"linear\") return CONSTANTS.ANIM.EASING_LINEAR;\n    if (str == \"absolute\") return CONSTANTS.ANIM.EASING_ABSOLUTE;\n    if (str == \"smoothstep\") return CONSTANTS.ANIM.EASING_SMOOTHSTEP;\n    if (str == \"smootherstep\") return CONSTANTS.ANIM.EASING_SMOOTHERSTEP;\n\n    if (str == \"Cubic In\") return CONSTANTS.ANIM.EASING_CUBIC_IN;\n    if (str == \"Cubic Out\") return CONSTANTS.ANIM.EASING_CUBIC_OUT;\n    if (str == \"Cubic In Out\") return CONSTANTS.ANIM.EASING_CUBIC_INOUT;\n\n    if (str == \"Expo In\") return CONSTANTS.ANIM.EASING_EXPO_IN;\n    if (str == \"Expo Out\") return CONSTANTS.ANIM.EASING_EXPO_OUT;\n    if (str == \"Expo In Out\") return CONSTANTS.ANIM.EASING_EXPO_INOUT;\n\n    if (str == \"Sin In\") return CONSTANTS.ANIM.EASING_SIN_IN;\n    if (str == \"Sin Out\") return CONSTANTS.ANIM.EASING_SIN_OUT;\n    if (str == \"Sin In Out\") return CONSTANTS.ANIM.EASING_SIN_INOUT;\n\n    if (str == \"Back In\") return CONSTANTS.ANIM.EASING_BACK_IN;\n    if (str == \"Back Out\") return CONSTANTS.ANIM.EASING_BACK_OUT;\n    if (str == \"Back In Out\") return CONSTANTS.ANIM.EASING_BACK_INOUT;\n\n    if (str == \"Elastic In\") return CONSTANTS.ANIM.EASING_ELASTIC_IN;\n    if (str == \"Elastic Out\") return CONSTANTS.ANIM.EASING_ELASTIC_OUT;\n\n    if (str == \"Bounce In\") return CONSTANTS.ANIM.EASING_BOUNCE_IN;\n    if (str == \"Bounce Out\") return CONSTANTS.ANIM.EASING_BOUNCE_OUT;\n\n    if (str == \"Quart Out\") return CONSTANTS.ANIM.EASING_QUART_OUT;\n    if (str == \"Quart In\") return CONSTANTS.ANIM.EASING_QUART_IN;\n    if (str == \"Quart In Out\") return CONSTANTS.ANIM.EASING_QUART_INOUT;\n\n    if (str == \"Quint Out\") return CONSTANTS.ANIM.EASING_QUINT_OUT;\n    if (str == \"Quint In\") return CONSTANTS.ANIM.EASING_QUINT_IN;\n    if (str == \"Quint In Out\") return CONSTANTS.ANIM.EASING_QUINT_INOUT;\n};\n\nAnim.prototype.createPort = function (op, title, cb)\n{\n    var port = op.addInPort(\n        new Port(op, title, CONSTANTS.OP.OP_PORT_TYPE_VALUE, {\n            display: \"dropdown\",\n            values: CONSTANTS.ANIM.EASINGS,\n        }),\n    );\n\n    port.set(\"linear\");\n    port.defaultValue = \"linear\";\n\n    port.onChange = function ()\n    {\n        this.defaultEasing = this.easingFromString(port.get());\n        if (cb) cb();\n    }.bind(this);\n\n    return port;\n};\n\n// ------------------------------\n\nAnim.slerpQuaternion = function (time, q, animx, animy, animz, animw)\n{\n    if (!Anim.slerpQuaternion.q1)\n    {\n        Anim.slerpQuaternion.q1 = quat.create();\n        Anim.slerpQuaternion.q2 = quat.create();\n    }\n\n    var i1 = animx.getKeyIndex(time);\n    var i2 = i1 + 1;\n    if (i2 >= animx.keys.length) i2 = animx.keys.length - 1;\n\n    if (i1 == i2)\n    {\n        quat.set(q, animx.keys[i1].value, animy.keys[i1].value, animz.keys[i1].value, animw.keys[i1].value);\n    }\n    else\n    {\n        var key1Time = animx.keys[i1].time;\n        var key2Time = animx.keys[i2].time;\n        var perc = (time - key1Time) / (key2Time - key1Time);\n\n        quat.set(Anim.slerpQuaternion.q1, animx.keys[i1].value, animy.keys[i1].value, animz.keys[i1].value, animw.keys[i1].value);\n\n        quat.set(Anim.slerpQuaternion.q2, animx.keys[i2].value, animy.keys[i2].value, animz.keys[i2].value, animw.keys[i2].value);\n\n        quat.slerp(q, Anim.slerpQuaternion.q1, Anim.slerpQuaternion.q2, perc);\n    }\n    return q;\n};\n\n\nconst TL = ANIM;\nTL.Anim = Anim;\n\nexport { Anim };\nexport { TL };\n"
            },
            {
              "id": null,
              "identifier": "/home/tom/cables_dev/cables/src/core/core_link.js",
              "name": "./src/core/core_link.js",
              "index": 8,
              "index2": 6,
              "size": 5900,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
              ],
              "issuer": "/home/tom/cables_dev/cables/src/core/index.js",
              "issuerId": null,
              "issuerName": "./src/core/index.js",
              "issuerPath": [
                {
                  "id": 0,
                  "identifier": "multi /home/tom/cables_dev/cables/src/core/index.js",
                  "name": "multi ./src/core/index.js"
                },
                {
                  "id": null,
                  "identifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "name": "./src/core/index.js"
                }
              ],
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "assets": [
              ],
              "reasons": [
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./core_link",
                  "loc": "4:0-35"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "module": "./src/core/index.js",
                  "moduleName": "./src/core/index.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./core_link",
                  "loc": "5:0-35"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_patch.js",
                  "module": "./src/core/core_patch.js",
                  "moduleName": "./src/core/core_patch.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./core_link",
                  "loc": "6:0-35"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "module": "./src/core/index.js",
                  "moduleName": "./src/core/index.js",
                  "type": "harmony import specifier",
                  "userRequest": "./core_link",
                  "loc": "26:8-12"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_patch.js",
                  "module": "./src/core/core_patch.js",
                  "moduleName": "./src/core/core_patch.js",
                  "type": "harmony import specifier",
                  "userRequest": "./core_link",
                  "loc": "635:8-12"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_patch.js",
                  "module": "./src/core/core_patch.js",
                  "moduleName": "./src/core/core_patch.js",
                  "type": "harmony import specifier",
                  "userRequest": "./core_link",
                  "loc": "637:23-27"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./core_link",
                  "loc": "747:43-47"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./core_link",
                  "loc": "749:42-46"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./core_link",
                  "loc": "756:43-47"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
                  "module": "./src/core/core_op.js",
                  "moduleName": "./src/core/core_op.js",
                  "type": "harmony import specifier",
                  "userRequest": "./core_link",
                  "loc": "758:42-46"
                }
              ],
              "usedExports": [
                "Link"
              ],
              "providedExports": [
                "Link"
              ],
              "optimizationBailout": [
              ],
              "depth": 2,
              "source": "import { CONSTANTS } from \"./constants\";\n\n//\n// var CABLES=CABLES || {};\n/**\n * @external CABLES\n * @namespace Link\n * @param {Object} patch The patch object\n * @description a link is a connection between two ops/ports -> one input and one output port\n * @hideconstructor\n * @class\n */\nconst Link = function (scene)\n{\n    this.portIn = null;\n    this.portOut = null;\n    this.scene = scene; // todo: make private and rename to patch\n    this.activityCounter = 0;\n};\n\nLink.prototype.setValue = function (v)\n{\n    if (v === undefined) this._setValue();\n    else this.portIn.set(v);\n};\n\nLink.prototype.activity = function ()\n{\n    this.activityCounter++;\n    // if(Date.now()-this.lastTime>100)\n    // {\n    //     // this.lastTime=Date.now();\n    //     // this.changesPerSecond=this.changesCounter*10;\n    //     this.changesCounter=0;\n    // }\n};\n\nLink.prototype._setValue = function ()\n{\n    if (!this.portOut)\n    {\n        this.remove();\n        return;\n    }\n    var v = this.portOut.get();\n\n    if (v == v)\n    {\n        // NaN is the only JavaScript value that is treated as unequal to itself\n        if (this.portIn.type != CONSTANTS.OP.OP_PORT_TYPE_FUNCTION) this.activity();\n\n        if (this.portIn.get() !== v)\n        {\n            this.portIn.set(v);\n        }\n        else if (this.portIn.changeAlways) this.portIn.set(v);\n    }\n};\n\n/**\n * @function getOtherPort\n * @memberof Link\n * @instance\n * @param {Port} port\n * @description returns the port of the link, which is not port\n */\nLink.prototype.getOtherPort = function (p)\n{\n    if (p == this.portIn) return this.portOut;\n    return this.portIn;\n};\n\n/**\n * @function remove\n * @memberof Link\n * @instance\n * @description unlink/remove this link from all ports\n */\nLink.prototype.remove = function ()\n{\n    if (this.portIn) this.portIn.removeLink(this);\n    if (this.portOut) this.portOut.removeLink(this);\n    if (this.scene)\n    {\n        this.scene.emitEvent(\"onUnLink\", this.portIn, this.portOut);\n    }\n\n    if (this.portIn && this.portIn.type == CONSTANTS.OP.OP_PORT_TYPE_OBJECT)\n    {\n        this.portIn.set(null);\n        if (this.portIn.links.length > 0) this.portIn.set(this.portIn.links[0].getOtherPort(this.portIn).get());\n    }\n\n    if (this.portIn) this.portIn.parent._checkLinksNeededToWork();\n    if (this.portOut) this.portOut.parent._checkLinksNeededToWork();\n\n    this.portIn = null;\n    this.portOut = null;\n    this.scene = null;\n};\n\n/**\n * @function link\n * @memberof Link\n * @instance\n * @description link those two ports\n * @param {Port} port1\n * @param {Port} port2\n */\nLink.prototype.link = function (p1, p2)\n{\n    if (!Link.canLink(p1, p2))\n    {\n        console.log(\"cannot link ports!\");\n        return false;\n    }\n\n    if (p1.direction == CONSTANTS.PORT.PORT_DIR_IN)\n    {\n        this.portIn = p1;\n        this.portOut = p2;\n    }\n    else\n    {\n        this.portIn = p2;\n        this.portOut = p1;\n    }\n\n    p1.addLink(this);\n    p2.addLink(this);\n\n    this.setValue();\n\n    if (p1.onLink) p1.onLink(this);\n    if (p2.onLink) p2.onLink(this);\n\n    p1.parent._checkLinksNeededToWork();\n    p2.parent._checkLinksNeededToWork();\n};\n\nLink.prototype.getSerialized = function ()\n{\n    var obj = {};\n\n    obj.portIn = this.portIn.getName();\n    obj.portOut = this.portOut.getName();\n    obj.objIn = this.portIn.parent.id;\n    obj.objOut = this.portOut.parent.id;\n\n    return obj;\n};\n\n// --------------------------------------------\n\n/**\n * @function canLinkText\n * @memberof Link\n * @instance\n * @description return a text message with human readable reason if ports can not be linked, or can be\n * @param {Port} port1\n * @param {Port} port2\n */\nLink.canLinkText = function (p1, p2)\n{\n    if (p1.direction == p2.direction)\n    {\n        var txt = \"(out)\";\n        if (p2.direction == CONSTANTS.PORT.PORT_DIR_IN) txt = \"(in)\";\n        return \"can not link: same direction \" + txt;\n    }\n    if (p1.parent == p2.parent) return \"can not link: same op\";\n    if (p1.type != CONSTANTS.OP.OP_PORT_TYPE_DYNAMIC && p2.type != CONSTANTS.OP.OP_PORT_TYPE_DYNAMIC)\n    {\n        if (p1.type != p2.type) return \"can not link: different type\";\n    }\n\n    if (!p1) return \"can not link: port 1 invalid\";\n    if (!p2) return \"can not link: port 2 invalid\";\n\n    if (p1.direction == CONSTANTS.PORT.PORT_DIR_IN && p1.isAnimated()) return \"can not link: is animated\";\n    if (p2.direction == CONSTANTS.PORT.PORT_DIR_IN && p2.isAnimated()) return \"can not link: is animated\";\n\n    // if(p1.direction==CABLES.CONSTANTS.PORT.PORT_DIR_IN && p1.links.length>0)return 'input port already busy';\n    // if(p2.direction==CABLES.CONSTANTS.PORT.PORT_DIR_IN && p2.links.length>0)return 'input port already busy';\n    if (p1.isLinkedTo(p2)) return \"ports already linked\";\n\n    if ((p1.canLink && !p1.canLink(p2)) || (p2.canLink && !p2.canLink(p1))) return \"Incompatible\";\n\n    return \"can link\";\n};\n\n/**\n * @function canLink\n * @memberof Link\n * @instance\n * @description return true if ports can be linked\n * @param {Port} port1\n * @param {Port} port2\n * @returns {Boolean}\n */\nLink.canLink = function (p1, p2)\n{\n    if (!p1) return false;\n    if (!p2) return false;\n    if (p1.direction == CONSTANTS.PORT.PORT_DIR_IN && p1.isAnimated()) return false;\n    if (p2.direction == CONSTANTS.PORT.PORT_DIR_IN && p2.isAnimated()) return false;\n\n    if (p1.isHidden() || p2.isHidden()) return false;\n\n    if (p1.isLinkedTo(p2)) return false;\n\n    if (p1.direction == p2.direction) return false;\n\n    if (p1.type != p2.type && (p1.type != CONSTANTS.OP.OP_PORT_TYPE_DYNAMIC && p2.type != CONSTANTS.OP.OP_PORT_TYPE_DYNAMIC)) return false;\n    if (p1.type == CONSTANTS.OP.OP_PORT_TYPE_DYNAMIC || p2.type == CONSTANTS.OP.OP_PORT_TYPE_DYNAMIC) return true;\n\n    if (p1.parent == p2.parent) return false;\n\n    if (p1.canLink && !p1.canLink(p2)) return false;\n    if (p2.canLink && !p2.canLink(p1)) return false;\n\n    return true;\n};\n\nexport { Link };\n"
            },
            {
              "id": null,
              "identifier": "/home/tom/cables_dev/cables/src/core/core_op.js",
              "name": "./src/core/core_op.js",
              "index": 9,
              "index2": 7,
              "size": 40013,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
              ],
              "issuer": "/home/tom/cables_dev/cables/src/core/index.js",
              "issuerId": null,
              "issuerName": "./src/core/index.js",
              "issuerPath": [
                {
                  "id": 0,
                  "identifier": "multi /home/tom/cables_dev/cables/src/core/index.js",
                  "name": "multi ./src/core/index.js"
                },
                {
                  "id": null,
                  "identifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "name": "./src/core/index.js"
                }
              ],
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "assets": [
              ],
              "reasons": [
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "module": "./src/core/index.js",
                  "moduleName": "./src/core/index.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./core_op",
                  "loc": "7:0-31"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "module": "./src/core/index.js",
                  "moduleName": "./src/core/index.js",
                  "type": "harmony import specifier",
                  "userRequest": "./core_op",
                  "loc": "28:8-10"
                }
              ],
              "usedExports": [
                "Op"
              ],
              "providedExports": [
                "Op"
              ],
              "optimizationBailout": [
              ],
              "depth": 2,
              "source": "import { uuid, UTILS } from \"./utils\";\nimport { CONSTANTS } from \"./constants\";\nimport { Port } from \"./core_port\";\nimport { Link } from \"./core_link\";\n\n/**\n * op the class of all operators\n * @external CABLES\n * @namespace Op\n * @hideconstructor\n */\n\n/**\n * @type {Object}\n * @name attachments\n * @instance\n * @memberof Op\n * @description access file attachments as String values\n * @example\n * // set shader source to attached files (files are called shader.vert / shader.frag)\n * shader.setSource(attachments.shader_vert,attachments.shader_frag);\n */\n\nvar Ops = {};\n// var CABLES=CABLES || {};\n\n// export const OP_PORT_TYPE_VALUE = 0;\n// export const OP_PORT_TYPE_FUNCTION = 1;\n// export const OP_PORT_TYPE_OBJECT = 2;\n// export const OP_PORT_TYPE_TEXTURE = 2;\n// export const OP_PORT_TYPE_ARRAY = 3;\n// export const OP_PORT_TYPE_DYNAMIC = 4;\n// export const OP_PORT_TYPE_STRING = 5;\n\n// export const OP_VERSION_PREFIX = \"_v\";\n\nconst Op = function ()\n{\n    this.data = {}; // reserved for op-specific user-data\n    this.objName = \"\";\n    this.portsOut = [];\n    this.portsIn = [];\n    this.portsInData = []; // original loaded patch data\n    this.opId = \"\"; // unique op id\n    this.uiAttribs = {};\n    this.enabled = true;\n    this.patch = arguments[0];\n    this.name = arguments[1];\n    this.errors = {};\n    this._needsLinkedToWork = [];\n    this._needsParentOp = null;\n    this._shortOpName = \"\";\n\n    if (arguments[1])\n    {\n        this._shortOpName = arguments[1].split(\".\")[arguments[1].split(\".\").length - 1];\n\n        if (this._shortOpName.indexOf(CONSTANTS.OP.OP_VERSION_PREFIX) > 0)\n        {\n            var n = this._shortOpName.split(CONSTANTS.OP.OP_VERSION_PREFIX)[1];\n            this._shortOpName = this._shortOpName.substring(0, this._shortOpName.length - (CONSTANTS.OP.OP_VERSION_PREFIX + n).length);\n        }\n\n        this.uiAttribs.title = this._shortOpName;\n    }\n\n    this.id = arguments[2] || uuid(); // instance id\n    this.onAddPort = null;\n    this.onCreate = null;\n    this.onResize = null;\n    this.onLoaded = null;\n    this.onDelete = null;\n    this.onUiAttrChange = null;\n    this._eventCallbacks = {};\n    this._instances = null;\n\n    /**\n     * overwrite this to prerender shader and meshes / will be called by op `loadingStatus`\n     * @function preRender\n     * @memberof Op\n     * @instance\n     */\n    this.preRender = null;\n\n    /**\n     * overwrite this to initialize your op\n     * @function init\n     * @memberof Op\n     * @instance\n     */\n    this.init = null;\n};\n\n{\n    Op.prototype.clearUiAttrib = function (name)\n    {\n        var obj = {};\n        obj.name = null;\n        this.uiAttrib(obj);\n    };\n\n    Op.prototype.setTitle = function (name)\n    {\n        var doFireEvent = this.name != name;\n\n        this.name = name;\n        this.uiAttr({ title: name });\n\n        if (doFireEvent) this.fireEvent(\"onTitleChange\", name);\n    };\n\n    const _setUiAttrib = function (newAttribs)\n    {\n        if (!this.uiAttribs) this.uiAttribs = {};\n        for (var p in newAttribs)\n        {\n            this.uiAttribs[p] = newAttribs[p];\n        }\n\n        this.fireEvent(\"onUiAttribsChange\", newAttribs);\n    };\n    /**\n     * setUiAttrib\n     * possible values:\n     * <pre>\n     * warning - warning message - showing up in op parameter panel\n     * error - error message - showing up in op parameter panel\n     * extendTitle - op title extension, e.g. [ + ]\n     * </pre>\n     * @function setUiAttrib\n     * @param {Object} newAttribs, e.g. {\"attrib\":value}\n     * @memberof Op\n     * @instance\n     * @example\n     * op.setUiAttrib({\"extendTitle\":str});\n     */\n    Op.prototype.setUiAttrib = _setUiAttrib;\n    Op.prototype.uiAttr = _setUiAttrib;\n\n    Op.prototype.getName = function ()\n    {\n        if (this.uiAttribs.name) return this.uiAttribs.name;\n\n        return this.objName.split(\".\");\n\n        // return this.name;\n    };\n\n    Op.prototype.addOutPort = function (p)\n    {\n        p.direction = CONSTANTS.PORT.PORT_DIR_OUT;\n        p.parent = this;\n        this.portsOut.push(p);\n        if (this.onAddPort) this.onAddPort(p);\n        // this.fireEvent(\"onPortsChanged\",{});\n        return p;\n    };\n\n    Op.prototype.hasPort = function (name)\n    {\n        for (var ipi = 0; ipi < this.portsIn.length; ipi++) if (this.portsIn[i].getName() == name) return true;\n        return false;\n    };\n\n    Op.prototype.hasDynamicPort = function ()\n    {\n        var i = 0;\n        for (i = 0; i < this.portsIn.length; i++)\n        {\n            if (this.portsIn[i].type == CONSTANTS.OP.OP_PORT_TYPE_DYNAMIC) return true;\n            if (this.portsIn[i].getName() == \"dyn\") return true;\n        }\n        for (i = 0; i < this.portsOut.length; i++)\n        {\n            if (this.portsOut[i].type == CONSTANTS.OP.OP_PORT_TYPE_DYNAMIC) return true;\n            if (this.portsOut[i].getName() == \"dyn\") return true;\n        }\n\n        return false;\n    };\n\n    Op.prototype.addInPort = function (p)\n    {\n        if (!(p instanceof Port))\n        {\n            throw new Error(\"parameter is not a port!\");\n        }\n        p.direction = CONSTANTS.PORT.PORT_DIR_IN;\n        p.parent = this;\n        this.portsIn.push(p);\n        if (this.onAddPort) this.onAddPort(p);\n        // this.fireEvent(\"onPortsChanged\",{});\n        return p;\n    };\n\n    /**\n     * create a trigger input port\n     * @function inTrigger\n     * @instance\n     * @memberof Op\n     * @param {String} name\n     * @return {Port} created port\n     *\n     */\n    Op.prototype.inFunction = Op.prototype.inTrigger = function (name, v)\n    {\n        // deprecated\n        var p = this.addInPort(new Port(this, name, CONSTANTS.OP.OP_PORT_TYPE_FUNCTION));\n        if (v !== undefined) p.set(v);\n        return p;\n    };\n\n    /**\n     * create a trigger input  port with an UI trigger button\n     * @function inTriggerButton\n     * @memberof Op\n     * @instance\n     * @param {String} name\n     * @return {Port} created port\n     */\n    Op.prototype.inFunctionButton = Op.prototype.inTriggerButton = function (name, v)\n    {\n        // deprecated\n        var p = this.addInPort(new Port(this, name, CONSTANTS.OP.OP_PORT_TYPE_FUNCTION, { display: \"button\" }));\n        if (v !== undefined) p.set(v);\n        return p;\n    };\n\n    /**\n     * create a number value input port\n     * @function inFloat\n     * @memberof Op\n     * @instance\n     * @param {String} name\n     * @param {Number} value\n     * @return {Port} created port\n\n     */\n\n    Op.prototype.inValueFloat = Op.prototype.inValue = Op.prototype.inFloat = function (name, v)\n    {\n        // old // old\n        var p = this.addInPort(new Port(this, name, CONSTANTS.OP.OP_PORT_TYPE_VALUE));\n        if (v !== undefined)\n        {\n            p.set(v);\n            p.defaultValue = v;\n        }\n        return p;\n    };\n\n    /**\n     * create a boolean input port, displayed as a checkbox\n     * @function inBool\n     * @instance\n     * @memberof Op\n     * @param {String} name\n     * @param {Boolean} value\n     * @return {Port} created port\n     */\n\n    Op.prototype.inValueBool = Op.prototype.inBool = function (name, v)\n    {\n        // old\n        var p = this.addInPort(new Port(this, name, CONSTANTS.OP.OP_PORT_TYPE_VALUE, { display: \"bool\" }));\n        if (v !== undefined)\n        {\n            p.set(v);\n            p.defaultValue = v;\n        }\n        return p;\n    };\n\n    /**\n     * create a String value input port\n     * @function inString\n     * @instance\n     * @memberof Op\n     * @param {String} name\n     * @param {String} value default value\n     * @return {Port} created port\n     */\n    Op.prototype.inValueString = function (name, v)\n    {\n        var p = this.addInPort(new Port(this, name, CONSTANTS.OP.OP_PORT_TYPE_VALUE, { type: \"string\" }));\n        p.value = \"\";\n        if (v !== undefined)\n        {\n            p.set(v);\n            p.defaultValue = v;\n        }\n        return p;\n    };\n\n    // new string\n    Op.prototype.inString = function (name, v)\n    {\n        var p = this.addInPort(new Port(this, name, CONSTANTS.OP.OP_PORT_TYPE_STRING, { type: \"string\" }));\n        v = v || \"\";\n        p.value = v;\n        p.set(v);\n        p.defaultValue = v;\n        return p;\n    };\n\n    /**\n     * create a String value input port displayed as TextArea\n     * @function inValueText\n     * @instance\n     * @memberof Op\n     * @param {String} name\n     * @param {String} value default value\n     * @return {Port} created port\n     */\n    Op.prototype.inValueText = function (name, v)\n    {\n        var p = this.addInPort(new Port(this, name, CONSTANTS.OP.OP_PORT_TYPE_VALUE, { type: \"string\", display: \"text\" }));\n        p.value = \"\";\n        if (v !== undefined)\n        {\n            p.set(v);\n            p.defaultValue = v;\n        }\n        return p;\n    };\n\n    /**\n     * create a String value input port displayed as editor\n     * @function inStringEditor\n     * @instance\n     * @memberof Op\n     * @param {String} name\n     * @param {String} value default value\n     * @return {Port} created port\n     */\n    // new string\n    Op.prototype.inStringEditor = function (name, v, syntax)\n    {\n        var p = this.addInPort(new Port(this, name, CONSTANTS.OP.OP_PORT_TYPE_STRING, { type: \"string\", display: \"editor\", editorSyntax: syntax }));\n        p.value = \"\";\n        if (v !== undefined)\n        {\n            p.set(v);\n            p.defaultValue = v;\n        }\n        return p;\n    };\n\n    // old\n    Op.prototype.inValueEditor = function (name, v, syntax)\n    {\n        var p = this.addInPort(new Port(this, name, CONSTANTS.OP.OP_PORT_TYPE_VALUE, { type: \"string\", display: \"editor\", editorSyntax: syntax }));\n        p.value = \"\";\n        if (v !== undefined)\n        {\n            p.set(v);\n            p.defaultValue = v;\n        }\n        return p;\n    };\n\n    /**\n     * create a string select box\n     * @function inDropDown\n     * @instance\n     * @memberof Op\n     * @param {String} name\n     * @param {Array} values\n     * @param {String} value default value\n     * @return {Port} created port\n     */\n    Op.prototype.inValueSelect = Op.prototype.inDropDown = function (name, values, v)\n    {\n        // old\n        var p = this.addInPort(new Port(this, name, CONSTANTS.OP.OP_PORT_TYPE_VALUE, { display: \"dropdown\", hidePort: true, values }));\n        if (v !== undefined)\n        {\n            p.set(v);\n            p.defaultValue = v;\n        }\n        return p;\n    };\n\n    /**\n     * create a string switch box\n     * @function inSwitch\n     * @instance\n     * @memberof Op\n     * @param {String} name\n     * @param {Array} values\n     * @param {String} value default value\n     * @return {Port} created port\n     */\n    Op.prototype.inSwitch = function (name, values, v)\n    {\n        var p = this.addInPort(\n            new Port(this, name, CONSTANTS.OP.OP_PORT_TYPE_STRING, {\n                display: \"switch\",\n                hidePort: true,\n                type: \"string\",\n                values,\n            }),\n        );\n        if (v !== undefined)\n        {\n            p.set(v);\n            p.defaultValue = v;\n        }\n        return p;\n    };\n\n    /**\n     * create a integer input port\n     * @function inInt\n     * @instance\n     * @memberof Op\n     * @param {String} name\n     * @param {number} value default value\n     * @return {Port} created port\n     */\n    Op.prototype.inValueInt = Op.prototype.inInt = function (name, v)\n    {\n        // old\n        var p = this.addInPort(new Port(this, name, CONSTANTS.OP.OP_PORT_TYPE_VALUE, { increment: \"integer\" }));\n        if (v !== undefined)\n        {\n            p.set(v);\n            p.defaultValue = v;\n        }\n        return p;\n    };\n\n    /**\n     * create a file/URL input port\n     * @function inURL\n     * @instance\n     * @memberof Op\n     * @param {String} name\n     * @return {Port} created port\n     */\n    Op.prototype.inFile = function (name, filter, v)\n    {\n        var p = this.addInPort(new Port(this, name, CONSTANTS.OP.OP_PORT_TYPE_VALUE, { display: \"file\", filter }));\n        if (v !== undefined)\n        {\n            p.set(v);\n            p.defaultValue = v;\n        }\n        return p;\n    };\n\n    Op.prototype.inUrl = function (name, filter, v)\n    {\n        var p = this.addInPort(new Port(this, name, CONSTANTS.OP.OP_PORT_TYPE_STRING, { display: \"file\", filter }));\n        if (v !== undefined)\n        {\n            p.set(v);\n            p.defaultValue = v;\n        }\n        return p;\n    };\n\n    /**\n     * create a texture input port\n     * @function inTexture\n     * @instance\n     * @memberof Op\n     * @param {String} name\n     * @return {Port} created port\n     */\n    Op.prototype.inTexture = function (name, v)\n    {\n        var p = this.addInPort(new Port(this, name, CONSTANTS.OP.OP_PORT_TYPE_OBJECT, { display: \"texture\", preview: true }));\n        if (v !== undefined) p.set(v);\n        return p;\n    };\n\n    /**\n     * create a object input port\n     * @function inObject\n     * @instance\n     * @memberof Op\n     * @param {String} name\n     * @return {Port} created port\n     */\n    Op.prototype.inObject = function (name, v, options)\n    {\n        var p = this.addInPort(new Port(this, name, CONSTANTS.OP.OP_PORT_TYPE_OBJECT, options));\n        if (v !== undefined) p.set(v);\n        return p;\n    };\n\n    Op.prototype.inGradient = function (name, v)\n    {\n        var p = this.addInPort(new Port(this, name, CONSTANTS.OP.OP_PORT_TYPE_VALUE, { display: \"gradient\", hidePort: true }));\n        if (v !== undefined) p.set(v);\n        return p;\n    };\n\n    /**\n     * create a array input port\n     * @function inArray\n     * @instance\n     * @memberof Op\n     * @param {String} name\n     * @return {Port} created port\n     */\n    Op.prototype.inArray = function (name, v)\n    {\n        var p = this.addInPort(new Port(this, name, CONSTANTS.OP.OP_PORT_TYPE_ARRAY));\n        if (v !== undefined) p.set(v);\n        return p;\n    };\n\n    /**\n     * create a value slider input port\n     * @function inFloatSlider\n     * @instance\n     * @memberof Op\n     * @param {String} name\n     * @param {number} name\n     * @return {Port} created port\n     */\n    Op.prototype.inValueSlider = Op.prototype.inFloatSlider = function (name, v)\n    {\n        // old\n        var p = this.addInPort(new Port(this, name, CONSTANTS.OP.OP_PORT_TYPE_VALUE, { display: \"range\" }));\n        if (v !== undefined)\n        {\n            p.set(v);\n            p.defaultValue = v;\n        }\n        return p;\n    };\n\n    /**\n     * create output trigger port\n     * @function outTrigger\n     * @instance\n     * @memberof Op\n     * @param {String} name\n     * @return {Port} created port\n     */\n    Op.prototype.outFunction = Op.prototype.outTrigger = function (name, v)\n    {\n        // old\n        var p = this.addOutPort(new Port(this, name, CONSTANTS.OP.OP_PORT_TYPE_FUNCTION));\n        if (v !== undefined) p.set(v);\n        return p;\n    };\n\n    /**\n     * create output value port\n     * @function outNumber\n     * @instance\n     * @memberof Op\n     * @param {String} name\n     * @param {number} default value\n     * @return {Port} created port\n     */\n    Op.prototype.outValue = Op.prototype.outNumber = function (name, v)\n    {\n        // old\n        var p = this.addOutPort(new Port(this, name, CONSTANTS.OP.OP_PORT_TYPE_VALUE));\n        if (v !== undefined) p.set(v);\n        return p;\n    };\n\n    /**\n     * create output boolean port\n     * @function outBool\n     * @instance\n     * @memberof Op\n     * @param {String} name\n     * @return {Port} created port\n     */\n    Op.prototype.outValueBool = Op.prototype.outBool = function (name, v)\n    {\n        // old\n        var p = this.addOutPort(new Port(this, name, CONSTANTS.OP.OP_PORT_TYPE_VALUE, { display: \"bool\" }));\n        if (v !== undefined) p.set(v);\n        else p.set(false);\n        return p;\n    };\n\n    /**\n     * create output string port\n     * @function outString\n     * @instance\n     * @memberof Op\n     * @param {String} name\n     * @return {Port} created port\n     */\n    Op.prototype.outValueString = function (name, v)\n    {\n        var p = this.addOutPort(new Port(this, name, CONSTANTS.OP.OP_PORT_TYPE_VALUE, { type: \"string\" }));\n        if (v !== undefined) p.set(v);\n        return p;\n    };\n    Op.prototype.outString = function (name, v)\n    {\n        var p = this.addOutPort(new Port(this, name, CONSTANTS.OP.OP_PORT_TYPE_STRING, { type: \"string\" }));\n        if (v !== undefined) p.set(v);\n        else p.set(\"\");\n        return p;\n    };\n\n    /**\n     * create output object port\n     * @function outObject\n     * @instance\n     * @memberof Op\n     * @param {String} name\n     * @return {Port} created port\n     */\n    Op.prototype.outObject = function (name, v)\n    {\n        var p = this.addOutPort(new Port(this, name, CONSTANTS.OP.OP_PORT_TYPE_OBJECT));\n        if (v !== undefined) p.set(v);\n        p.ignoreValueSerialize = true;\n        return p;\n    };\n\n    /**\n     * create output array port\n     * @function outArray\n     * @instance\n     * @memberof Op\n     * @param {String} name\n     * @return {Port} created port\n     */\n    Op.prototype.outArray = function (name, v)\n    {\n        var p = this.addOutPort(new Port(this, name, CONSTANTS.OP.OP_PORT_TYPE_ARRAY));\n        if (v !== undefined) p.set(v);\n        p.ignoreValueSerialize = true;\n        return p;\n    };\n\n    /**\n     * create output texture port\n     * @function outTexture\n     * @instance\n     * @memberof Op\n     * @param {String} name\n     * @return {Port} created port\n     */\n    Op.prototype.outTexture = function (name, v)\n    {\n        var p = this.addOutPort(new Port(this, name, CONSTANTS.OP.OP_PORT_TYPE_OBJECT, { preview: true }));\n        if (v !== undefined) p.set(v);\n        p.ignoreValueSerialize = true;\n        return p;\n    };\n\n    Op.prototype.inDynamic = function (name, filter, options, v)\n    {\n        var p = new Port(this, name, CONSTANTS.OP.OP_PORT_TYPE_DYNAMIC, options);\n\n        p.shouldLink = function (p1, p2)\n        {\n            if (filter && UTILS.isArray(filter))\n            {\n                for (var i = 0; i < filter.length; i++)\n                {\n                    if (p1 == this && p2.type === filter[i]) return true;\n                    if (p2 == this && p1.type === filter[i]) return true;\n                }\n                return false; // types do not match\n            }\n            return true; // no filter set\n        };\n\n        this.addInPort(p);\n        if (v !== undefined)\n        {\n            p.set(v);\n            p.defaultValue = v;\n        }\n        return p;\n    };\n\n    Op.prototype.printInfo = function ()\n    {\n        for (var i = 0; i < this.portsIn.length; i++) console.log(\"in: \" + this.portsIn[i].getName());\n\n        for (var ipo in this.portsOut) console.log(\"out: \" + this.portsOut[ipo].getName());\n    };\n\n    Op.prototype.getOutChilds = function ()\n    {\n        var childs = [];\n        for (var ipo in this.portsOut)\n        {\n            for (var l in this.portsOut[ipo].links)\n            {\n                if (this.portsOut[ipo].type == CONSTANTS.OP.OP_PORT_TYPE_FUNCTION) childs.push(this.portsOut[ipo].links[l].portIn.parent);\n            }\n        }\n        return childs;\n    };\n\n    Op.prototype.markChilds = function ()\n    {\n        this.marked = true;\n        for (var ipo in this.portsOut)\n        {\n            for (var l in this.portsOut[ipo].links)\n            {\n                this.portsOut[ipo].parent.marked = true;\n                if (this.portsOut[ipo].links[l].portIn.parent != this) this.portsOut[ipo].links[l].portIn.parent.markChilds();\n            }\n        }\n    };\n\n    Op.prototype.deleteChilds = function ()\n    {\n        var opsToDelete = [];\n        for (var ipo in this.portsOut)\n        {\n            for (var l in this.portsOut[ipo].links)\n            {\n                if (this.portsOut[ipo].links[l].portIn.parent != this)\n                {\n                    if (this.portsOut[ipo].parent != this) opsToDelete.push(this.portsOut[ipo].parent);\n                    opsToDelete.push(this.portsOut[ipo].links[l].portIn.parent);\n                    this.portsOut[ipo].links[l].portIn.parent.deleteChilds();\n                }\n            }\n        }\n\n        for (var i in opsToDelete)\n        {\n            this.patch.deleteOp(opsToDelete[i].id);\n        }\n    };\n\n    Op.prototype.removeLinks = function ()\n    {\n        for (var i = 0; i < this.portsIn.length; i++) this.portsIn[i].removeLinks();\n        for (var ipo = 0; ipo < this.portsOut.length; ipo++) this.portsOut[ipo].removeLinks();\n    };\n\n    Op.prototype.countFittingPorts = function (otherPort)\n    {\n        var count = 0;\n        for (var ipo in this.portsOut) if (Link.canLink(otherPort, this.portsOut[ipo])) count++;\n\n        for (var ipi in this.portsIn) if (Link.canLink(otherPort, this.portsIn[ipi])) count++;\n\n        return count;\n    };\n\n    Op.prototype.findFittingPort = function (otherPort)\n    {\n        for (var ipo in this.portsOut) if (Link.canLink(otherPort, this.portsOut[ipo])) return this.portsOut[ipo];\n\n        for (var ipi in this.portsIn) if (Link.canLink(otherPort, this.portsIn[ipi])) return this.portsIn[ipi];\n    };\n\n    Op.prototype.getSerialized = function ()\n    {\n        var op = {};\n        // op.name=this.getName();\n        // var nameParts=this.objName.split('.');\n        // if(nameParts.length>0) if(op.name==nameParts[nameParts.length-1])delete op.name;\n\n        if (this.opId) op.opId = this.opId;\n        op.objName = this.objName; // id opid exists, this should not be needed, but for fallback reasons still here.\n\n        op.id = this.id;\n        op.uiAttribs = this.uiAttribs;\n\n        if (this.uiAttribs.title == this._shortOpName) delete this.uiAttribs.title;\n        if (this.uiAttribs.hasOwnProperty(\"working\") && this.uiAttribs.working == true) delete this.uiAttribs.working;\n\n        op.portsIn = [];\n        op.portsOut = [];\n\n        for (var i = 0; i < this.portsIn.length; i++) op.portsIn.push(this.portsIn[i].getSerialized());\n        for (var ipo in this.portsOut) op.portsOut.push(this.portsOut[ipo].getSerialized());\n\n        return op;\n    };\n\n    Op.prototype.getFirstOutPortByType = function (type)\n    {\n        for (var ipo in this.portsOut) if (this.portsOut[ipo].type == type) return this.portsOut[ipo];\n    };\n\n    /**\n     * return port by the name portName\n     * @function getPort\n     * @instance\n     * @memberof Op\n     * @param {String} portName\n     * @return {Port}\n     */\n    Op.prototype.getPort = Op.prototype.getPortByName = function (name)\n    {\n        // for(var ipi in this.portsIn)\n        for (var ipi = 0; ipi < this.portsIn.length; ipi++) if (this.portsIn[ipi].getName() == name) return this.portsIn[ipi];\n\n        // for(var ipo in this.portsOut)\n        for (var ipo = 0; ipo < this.portsOut.length; ipo++) if (this.portsOut[ipo].getName() == name) return this.portsOut[ipo];\n    };\n\n    /**\n     * return port by the name id\n     * @function getPortById\n     * @instance\n     * @memberof Op\n     * @param {String} id\n     * @return {Port}\n     */\n    Op.prototype.getPortById = function (id)\n    {\n        for (var ipi = 0; ipi < this.portsIn.length; ipi++) if (this.portsIn[ipi].id == id) return this.portsIn[ipi];\n\n        for (var ipo = 0; ipo < this.portsOut.length; ipo++) if (this.portsOut[ipo].id == id) return this.portsOut[ipo];\n    };\n\n    Op.prototype.updateAnims = function ()\n    {\n        for (var i = 0; i < this.portsIn.length; i++) this.portsIn[i].updateAnim();\n    };\n\n    Op.prototype.log = function ()\n    {\n        if (!this.patch.silent) Function.prototype.apply.apply(console.log, [console, arguments]);\n    };\n\n    Op.prototype.error = function ()\n    {\n        if (!this.patch.silent) Function.prototype.apply.apply(console.error, [console, arguments]);\n    };\n\n    Op.prototype.warn = function ()\n    {\n        if (!this.patch.silent) Function.prototype.apply.apply(console.warn, [console, arguments]);\n    };\n\n    Op.prototype.undoUnLinkTemporary = function ()\n    {\n        if (this.shakeLink) this.shakeLink.remove();\n        this.shakeLink = null;\n\n        if (this.oldLinks)\n        {\n            for (var i = 0; i < this.oldLinks.length; i++)\n            {\n                this.patch.link(this.oldLinks[i].in.parent, this.oldLinks[i].in.getName(), this.oldLinks[i].out.parent, this.oldLinks[i].out.getName());\n            }\n            this.oldLinks.length = 0;\n        }\n    };\n\n    /**\n     * disconnect all links\n     * @function\n     * @instance\n     * @memberof Op\n     */\n    Op.prototype.unLink = function ()\n    {\n        for (var ipo = 0; ipo < this.portsOut.length; ipo++) this.portsOut[ipo].removeLinks();\n        for (var ipi = 0; ipi < this.portsIn.length; ipi++) this.portsIn[ipi].removeLinks();\n    };\n\n    Op.unLinkTempReLinkP1 = null;\n    Op.unLinkTempReLinkP2 = null;\n\n    Op.prototype.unLinkTemporary = function ()\n    {\n        var tryRelink = true;\n        var i = 0;\n\n        this.shakeLink = null;\n        this.oldLinks = [];\n\n        if (tryRelink)\n        {\n            if (this.portsIn.length > 0 && this.portsIn[0].isLinked() && (this.portsOut.length > 0 && this.portsOut[0].isLinked()))\n            {\n                if (this.portsIn[0].getType() == this.portsOut[0].getType())\n                {\n                    Op.unLinkTempReLinkP1 = this.portsIn[0].links[0].getOtherPort(this.portsIn[0]);\n                    Op.unLinkTempReLinkP2 = this.portsOut[0].links[0].getOtherPort(this.portsOut[0]);\n                }\n            }\n        }\n\n        for (var ipi = 0; ipi < this.portsIn.length; ipi++)\n        {\n            for (i = 0; i < this.portsIn[ipi].links.length; i++)\n            {\n                this.oldLinks.push({\n                    in: this.portsIn[ipi].links[i].portIn,\n                    out: this.portsIn[ipi].links[i].portOut,\n                });\n            }\n        }\n\n        for (var ipo = 0; ipo < this.portsOut.length; ipo++)\n        {\n            for (i = 0; i < this.portsOut[ipo].links.length; i++)\n            {\n                this.oldLinks.push({\n                    in: this.portsOut[ipo].links[i].portIn,\n                    out: this.portsOut[ipo].links[i].portOut,\n                });\n            }\n        }\n\n        this.unLink();\n\n        if (Op.unLinkTempReLinkP1 && Op.unLinkTempReLinkP2)\n        {\n            this.shakeLink = this.patch.link(Op.unLinkTempReLinkP1.parent, Op.unLinkTempReLinkP1.getName(), Op.unLinkTempReLinkP2.parent, Op.unLinkTempReLinkP2.getName());\n        }\n    };\n\n    Op.prototype.profile = function (enable)\n    {\n        for (var ipi = 0; ipi < this.portsIn.length; ipi++) this.portsIn[ipi]._onTriggered = this.portsIn[ipi]._onTriggeredProfiling;\n    };\n\n    Op.prototype.findParent = function (objName)\n    {\n        for (var ipi = 0; ipi < this.portsIn.length; ipi++)\n        {\n            if (this.portsIn[ipi].isLinked())\n            {\n                if (this.portsIn[ipi].links[0].portOut.parent.objName == objName) return this.portsIn[ipi].links[0].portOut.parent;\n\n                var found = null;\n                found = this.portsIn[ipi].links[0].portOut.parent.findParent(objName);\n                if (found) return found;\n            }\n        }\n        return null;\n    };\n\n    Op.prototype.cleanUp = function ()\n    {\n        if (this._instances)\n        {\n            for (var i = 0; i < this._instances.length; i++)\n            {\n                if (this._instances[i].onDelete) this._instances[i].onDelete();\n            }\n            this._instances.length = 0;\n        }\n    };\n\n    Op.prototype.instanced = function (triggerPort)\n    {\n        if (this.patch.instancing.numCycles() === 0) return false;\n\n        var i = 0;\n        var ipi = 0;\n        if (!this._instances || this._instances.length != this.patch.instancing.numCycles())\n        {\n            if (!this._instances) this._instances = [];\n            console.log(\"creating instances of \", this.objName, this.patch.instancing.numCycles(), this._instances.length);\n            this._instances.length = this.patch.instancing.numCycles();\n            for (i = 0; i < this._instances.length; i++)\n            {\n                this._instances[i] = this.patch.createOp(this.objName, true);\n                this._instances[i].instanced = function ()\n                {\n                    return false;\n                };\n                this._instances[i].uiAttr(this.uiAttribs);\n\n                for (var ipo = 0; ipo < this.portsOut.length; ipo++)\n                {\n                    if (this.portsOut[ipo].type == CONSTANTS.OP.OP_PORT_TYPE_FUNCTION)\n                    {\n                        this._instances[i].getPortByName(this.portsOut[ipo].name).trigger = this.portsOut[ipo].trigger.bind(this.portsOut[ipo]);\n                    }\n                }\n            }\n\n            for (ipi = 0; ipi < this.portsIn.length; ipi++)\n            {\n                this.portsIn[ipi].onChange = null;\n                this.portsIn[ipi].onValueChanged = null;\n            }\n        }\n\n        var theTriggerPort = null;\n        for (ipi = 0; ipi < this.portsIn.length; ipi++)\n        {\n            if (this.portsIn[ipi].type == CONSTANTS.OP.OP_PORT_TYPE_VALUE || this.portsIn[ipi].type == CONSTANTS.OP.OP_PORT_TYPE_ARRAY)\n            {\n                this._instances[this.patch.instancing.index()].portsIn[ipi].set(this.portsIn[ipi].get());\n            }\n            if (this.portsIn[ipi].type == CONSTANTS.OP.OP_PORT_TYPE_FUNCTION)\n            {\n                // console.log(this.patch.instancing.index());\n                // console.log(this._instances.length);\n                // if(this._instances[ this.patch.instancing.index() ].portsIn[ipi].name==triggerPort.name)\n                // theTriggerPort=this._instances[ this.patch.instancing.index() ].portsIn[ipi];\n            }\n        }\n\n        if (theTriggerPort) theTriggerPort.onTriggered();\n\n        for (ipi = 0; ipi < this.portsOut.length; ipi++)\n        {\n            if (this.portsOut[ipi].type == CONSTANTS.OP.OP_PORT_TYPE_VALUE)\n            {\n                this.portsOut[ipi].set(this._instances[this.patch.instancing.index()].portsOut[ipi].get());\n            }\n        }\n\n        return true;\n    };\n\n    Op.prototype.initInstancable = function ()\n    {\n        //         if(this.isInstanced)\n        //         {\n        //             console.log('cancel instancing');\n        //             return;\n        //         }\n        //         this._instances=[];\n        //         for(var ipi=0;ipi<this.portsIn.length;ipi++)\n        //         {\n        //             if(this.portsIn[ipi].type==CONSTANTS.OP.OP_PORT_TYPE_VALUE)\n        //             {\n        //\n        //             }\n        //             if(this.portsIn[ipi].type==CONSTANTS.OP.OP_PORT_TYPE_FUNCTION)\n        //             {\n        //                 // var piIndex=ipi;\n        //                 this.portsIn[ipi].onTriggered=function(piIndex)\n        //                 {\n        //\n        //                     var i=0;\n        // // console.log('trigger',this._instances.length);\n        //\n        //                 }.bind(this,ipi );\n        //\n        //             }\n        // };\n        // this._instances=null;\n    };\n\n    Op.prototype.setValues = function (obj)\n    {\n        for (var i in obj)\n        {\n            var port = this.getPortByName(i);\n            if (port) port.set(obj[i]);\n            else console.log(\"op.setValues: port not found:\", i);\n        }\n    };\n\n    /**\n     * show op error message - set message to null to remove error message\n     * @function error\n     * @instance\n     * @memberof Op\n     * @param {errorid} id error identifier\n     * @param {txt} text message\n     */\n    Op.prototype.error = function (id, txt)\n    {\n        this.errors[id] = txt;\n        if (txt == null) delete this.errors[id];\n\n        var errorHtml = \"\";\n        for (var i in this.errors)\n        {\n            errorHtml += \"- \" + this.errors[i] + \"<br/>\";\n        }\n        this.uiAttr({ error: errorHtml });\n    };\n\n    /**\n     *  add an eventlistener ot op\n     * currently implemented:  \"onEnabledChange\", \"onTitleChange\", \"onUiAttribsChange\"\n     * @function addEventListener\n     * @instance\n     * @memberof Op\n     * @description\n     * @param {which} name of event\n     * @param {function} callback\n     */\n    Op.prototype.addListener = Op.prototype.addEventListener = function (which, cb)\n    {\n        if (!this._eventCallbacks[which]) this._eventCallbacks[which] = [cb];\n        else this._eventCallbacks[which].push(cb);\n    };\n\n    Op.prototype.hasEventListener = function (which, cb)\n    {\n        if (which && cb)\n        {\n            if (this._eventCallbacks[which])\n            {\n                var idx = this._eventCallbacks[which].indexOf(cb);\n                if (idx == -1) return false;\n                return true;\n            }\n        }\n        else\n        {\n            console.log(\"hasListener: missing parameters\");\n        }\n    };\n\n    /**\n     * remove an eventlistener\n     * @function removeEventListener\n     * @instance\n     * @memberof Op\n     * @param {which} name of event\n     * @param {function} callback\n     */\n    Op.prototype.removeEventListener = function (which, cb)\n    {\n        if (this._eventCallbacks[which])\n        {\n            var idx = this._eventCallbacks[which].indexOf(cb);\n            if (idx == -1) console.log(\"eventlistener \" + which + \" not found...\");\n            else this._eventCallbacks[which].slice(idx);\n        }\n    };\n\n    Op.prototype.fireEvent = function (which, params)\n    {\n        if (this._eventCallbacks[which]) for (var i = 0; i < this._eventCallbacks[which].length; i++) if (this._eventCallbacks[which][i]) this._eventCallbacks[which][i](params);\n\n        if (this.onUiAttrChange && which == \"onUiAttribsChange\") this.onUiAttrChange(params); // todo: use normal eventlistener\n    };\n\n    /**\n     * enable/disable op\n     * @function\n     * @instance\n     * @memberof Op\n     * @param {boolean}\n     */\n    Op.prototype.setEnabled = function (b)\n    {\n        this.enabled = b;\n        this.fireEvent(\"onEnabledChange\", b);\n        // if(this._eventCallbacks.onEnabledChange)this._eventCallbacks.onEnabledChange(b);\n    };\n\n    /**\n     * organize ports into a group\n     * @function\n     * @instance\n     * @memberof Op\n     * @param {String} name\n     * @param {Array} ports\n     */\n    Op.prototype.setPortGroup = function (name, ports)\n    {\n        for (var i = 0; i < ports.length; i++)\n        {\n            if (ports[i] && ports[i].setUiAttribs) ports[i].setUiAttribs({ group: name });\n            else\n            {\n                console.error(\"setPortGroup: invalid port!\");\n            }\n        }\n    };\n\n    Op.prototype.setUiAxisPorts = function (px, py, pz)\n    {\n        if (px) px.setUiAttribs({ axis: \"X\" });\n        if (py) py.setUiAttribs({ axis: \"Y\" });\n        if (pz) pz.setUiAttribs({ axis: \"Z\" });\n    };\n\n    /**\n     * remove port from op\n     * @function removePort\n     * @instance\n     * @memberof Op\n     * @param {Port} port to remove\n     */\n    Op.prototype.removePort = function (port)\n    {\n        // for(var ipi in this.portsIn)\n        for (var ipi = 0; ipi < this.portsIn.length; ipi++)\n        {\n            if (this.portsIn[ipi] == port)\n            {\n                this.portsIn.splice(ipi, 1);\n                this.fireEvent(\"onUiAttribsChange\", {});\n                this.fireEvent(\"onPortRemoved\", {});\n                return;\n            }\n        }\n    };\n\n    // needs to be in UI only\n    Op.prototype.checkLinkTimeWarnings = function ()\n    {\n        function hasParent(op, type, name)\n        {\n            for (var i = 0; i < op.portsIn.length; i++)\n            {\n                if (op.portsIn[i].type == type && op.portsIn[i].isLinked())\n                {\n                    var pi = op.portsIn[i];\n                    for (var li = 0; li < pi.links.length; li++)\n                    {\n                        if (!pi.links[li]) continue;\n                        if (pi.links[li].portOut.parent.objName.indexOf(name) > -1) return true;\n                        if (hasParent(pi.links[li].portOut.parent, type, name)) return true;\n                    }\n                }\n            }\n            return false;\n        }\n\n        function hasTriggerInput(op)\n        {\n            if (op.portsIn.length > 0 && op.portsIn[0].type == CONSTANTS.OP.OP_PORT_TYPE_FUNCTION) return true;\n            return false;\n        }\n\n        var notWorkingMsg = null;\n        var working = true;\n\n        if (working && this.objName.indexOf(\"Ops.Gl.TextureEffects\") == 0 && hasTriggerInput(this) && this.objName.indexOf(\"TextureEffects.ImageCompose\") == -1)\n        {\n            working = hasParent(this, CONSTANTS.OP.OP_PORT_TYPE_FUNCTION, \"TextureEffects.ImageCompose\");\n            if (!working) notWorkingMsg = CABLES.UI.TEXTS.working_connected_to + \"ImageCompose\";\n        }\n\n        if (this._needsParentOp && working)\n        {\n            working = hasParent(this, CONSTANTS.OP.OP_PORT_TYPE_OBJECT, this._needsParentOp);\n            if (!working) notWorkingMsg = CABLES.UI.TEXTS.working_connected_to + this._needsParentOp;\n        }\n\n        if (this._needsLinkedToWork.length > 0)\n        {\n            for (var i = 0; i < this._needsLinkedToWork.length; i++)\n            {\n                var p = this._needsLinkedToWork[i];\n                if (!p)\n                {\n                    console.warn(\"[needsLinkedToWork] port not found\");\n                    continue;\n                }\n                if (!p.isLinked())\n                {\n                    working = false;\n\n                    if (!notWorkingMsg) notWorkingMsg = CABLES.UI.TEXTS.working_connected_needs_connections_to;\n                    else notWorkingMsg += \", \";\n                    notWorkingMsg += p.name.toUpperCase();\n                }\n            }\n        }\n\n        if (!working) this.setUiAttrib({ working, notWorkingMsg });\n        else if (!this.uiAttribs.working) this.setUiAttrib({ working: true, notWorkingMsg: null });\n    };\n\n    Op.prototype._checkLinksNeededToWork = function () {};\n\n    Op.prototype.toWorkNeedsParent = function (parentOpName)\n    {\n        if (!this.patch.isEditorMode()) return;\n        this._needsParentOp = parentOpName;\n    };\n\n    /**\n     * show a small X to indicate op is not working when given ports are not linked\n     * @function\n     * @instance\n     * @memberof Op\n     * @param {Port} port1\n     * @param {Port} port2\n     * @param {Port} port3\n     */\n    Op.prototype.toWorkPortsNeedToBeLinked = function ()\n    {\n        if (!this.patch.isEditorMode()) return;\n        for (var i = 0; i < arguments.length; i++) if (this._needsLinkedToWork.indexOf(arguments[i]) == -1) this._needsLinkedToWork.push(arguments[i]);\n    };\n    Op.prototype.toWorkPortsNeedToBeLinkedReset = function ()\n    {\n        if (!this.patch.isEditorMode()) return;\n        this._needsLinkedToWork.length = 0;\n        this.checkLinkTimeWarnings();\n    };\n\n    /**\n     * refresh op parameters, if current op is selected\n     * @function\n     * @instance\n     * @memberof Op\n     */\n    Op.prototype.refreshParams = function ()\n    {\n        if (CABLES.UI && gui) gui.patch().refreshOpParams(this);\n    };\n}\n\n/**\n * Returns an op category for the op.\n * @function getNamespaceClassName\n * @instance\n * @memberof Op\n * @param {String} opName - The (full) name of the op, e.g. \"Ops.Value\"\n * @returns {String} - The op category\n */\nOp.getNamespaceClassName = function (opName)\n{\n    if (!opName) return \"default\";\n    if (opName.startsWith(\"Ops.Gl\")) return \"gl\";\n    if (opName.startsWith(\"Ops.WebAudio\")) return \"audio\";\n    if (opName.startsWith(\"Ops.Devices\")) return \"devices\";\n    if (opName.startsWith(\"Ops.Html\")) return \"html\";\n    if (opName.startsWith(\"Ops.Sidebar\")) return \"html\";\n    if (opName.startsWith(\"Ops.Math\")) return \"math\";\n    if (opName.startsWith(\"Ops.User\")) return \"user\";\n    return \"default\";\n};\n\nOp.isSubpatchOp = function (name)\n{\n    return name == \"Ops.Ui.Patch\" || name == \"Ops.Ui.SubPatch\";\n};\n\nexport { Op };\n"
            },
            {
              "id": null,
              "identifier": "/home/tom/cables_dev/cables/src/core/timer.js",
              "name": "./src/core/timer.js",
              "index": 28,
              "index2": 20,
              "size": 4028,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
              ],
              "issuer": "/home/tom/cables_dev/cables/src/core/index.js",
              "issuerId": null,
              "issuerName": "./src/core/index.js",
              "issuerPath": [
                {
                  "id": 0,
                  "identifier": "multi /home/tom/cables_dev/cables/src/core/index.js",
                  "name": "multi ./src/core/index.js"
                },
                {
                  "id": null,
                  "identifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "name": "./src/core/index.js"
                }
              ],
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "assets": [
              ],
              "reasons": [
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_profiler.js",
                  "module": "./src/core/core_profiler.js",
                  "moduleName": "./src/core/core_profiler.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./timer",
                  "loc": "1:0-30"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_shader.js",
                  "module": "./src/core/cgl/cgl_shader.js",
                  "moduleName": "./src/core/cgl/cgl_shader.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "../timer",
                  "loc": "2:0-31"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_patch.js",
                  "module": "./src/core/core_patch.js",
                  "moduleName": "./src/core/core_patch.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./timer",
                  "loc": "5:0-32"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "module": "./src/core/index.js",
                  "moduleName": "./src/core/index.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./timer",
                  "loc": "17:0-50"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_profiler.js",
                  "module": "./src/core/core_profiler.js",
                  "moduleName": "./src/core/core_profiler.js",
                  "type": "harmony import specifier",
                  "userRequest": "./timer",
                  "loc": "30:54-57"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "module": "./src/core/index.js",
                  "moduleName": "./src/core/index.js",
                  "type": "harmony import specifier",
                  "userRequest": "./timer",
                  "loc": "36:8-13"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_profiler.js",
                  "module": "./src/core/core_profiler.js",
                  "moduleName": "./src/core/core_profiler.js",
                  "type": "harmony import specifier",
                  "userRequest": "./timer",
                  "loc": "38:52-55"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "module": "./src/core/index.js",
                  "moduleName": "./src/core/index.js",
                  "type": "harmony import specifier",
                  "userRequest": "./timer",
                  "loc": "40:8-11"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "module": "./src/core/index.js",
                  "moduleName": "./src/core/index.js",
                  "type": "harmony import specifier",
                  "userRequest": "./timer",
                  "loc": "41:8-19"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_patch.js",
                  "module": "./src/core/core_patch.js",
                  "moduleName": "./src/core/core_patch.js",
                  "type": "harmony import specifier",
                  "userRequest": "./timer",
                  "loc": "42:21-26"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_patch.js",
                  "module": "./src/core/core_patch.js",
                  "moduleName": "./src/core/core_patch.js",
                  "type": "harmony import specifier",
                  "userRequest": "./timer",
                  "loc": "43:25-30"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_patch.js",
                  "module": "./src/core/core_patch.js",
                  "moduleName": "./src/core/core_patch.js",
                  "type": "harmony import specifier",
                  "userRequest": "./timer",
                  "loc": "253:21-26"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_shader.js",
                  "module": "./src/core/cgl/cgl_shader.js",
                  "moduleName": "./src/core/cgl/cgl_shader.js",
                  "type": "harmony import specifier",
                  "userRequest": "../timer",
                  "loc": "389:23-26"
                }
              ],
              "usedExports": [
                "Timer",
                "now",
                "internalNow"
              ],
              "providedExports": [
                "internalNow",
                "now",
                "Timer"
              ],
              "optimizationBailout": [
              ],
              "depth": 2,
              "source": "export const internalNow = function ()\n{\n    return window.performance.now();\n};\n\n/**\n * current time in milliseconds\n * @memberof CABLES\n * @function now\n * @static\n */\nexport const now = function ()\n{\n    return internalNow();\n};\n\n// ----------------------------\n\n/**\n * Measuring time\n * @external CABLES\n * @namespace Timer\n * @hideconstructor\n * @class\n */\nconst Timer = function ()\n{\n    this._timeStart = internalNow();\n    this._timeOffset = 0;\n\n    this._currentTime = 0;\n    this._lastTime = 0;\n    this._paused = true;\n    this._delay = 0;\n    this._eventsPaused = false;\n    this.overwriteTime = -1;\n\n    this.cbPlayPause = [];\n    this.cbTimeChange = [];\n};\n\nTimer.prototype._getTime = function ()\n{\n    this._lastTime = (internalNow() - this._timeStart) / 1000;\n    return this._lastTime + this._timeOffset;\n};\n\nTimer.prototype._eventPlayPause = function ()\n{\n    if (this._eventsPaused) return;\n    for (var i in this.cbPlayPause) this.cbPlayPause[i]();\n};\n\nTimer.prototype._eventTimeChange = function ()\n{\n    if (this._eventsPaused) return;\n    for (var i in this.cbTimeChange) this.cbTimeChange[i]();\n};\n\nTimer.prototype.setDelay = function (d)\n{\n    this._delay = d;\n    this._eventTimeChange();\n};\n\n/**\n * @function\n * @memberof Timer\n * @instance\n * @description returns true if timer is playing\n * @return {Boolean} value\n */\nTimer.prototype.isPlaying = function ()\n{\n    return !this._paused;\n};\n\n/**\n * @function\n * @memberof Timer\n * @instance\n * @description update timer\n * @return {Number} time\n */\nTimer.prototype.update = function ()\n{\n    if (this._paused) return;\n    this._currentTime = this._getTime();\n\n    return this._currentTime;\n};\n\n/**\n * @function\n * @memberof Timer\n * @instance\n * @return {Number} time in milliseconds\n */\nTimer.prototype.getMillis = function ()\n{\n    return this.get() * 1000;\n};\n\n/**\n * @function\n * @memberof Timer\n * @instance\n * @return {Number} value time in seconds\n */\nTimer.prototype.get = Timer.prototype.getTime = function ()\n{\n    if (this.overwriteTime >= 0) return this.overwriteTime - this._delay;\n    return this._currentTime - this._delay;\n};\n\n/**\n * toggle between play/pause state\n * @function\n * @memberof Timer\n * @instance\n */\nTimer.prototype.togglePlay = function ()\n{\n    if (this._paused) this.play();\n    else this.pause();\n};\n\n/**\n * set current time\n * @function\n * @memberof Timer\n * @instance\n * @param {Number} time\n */\nTimer.prototype.setTime = function (t)\n{\n    if (t < 0) t = 0;\n    this._timeStart = internalNow();\n    this._timeOffset = t;\n    this._currentTime = t;\n    this._eventTimeChange();\n};\n\nTimer.prototype.setOffset = function (val)\n{\n    if (this._currentTime + val < 0)\n    {\n        this._timeStart = internalNow();\n        this._timeOffset = 0;\n        this._currentTime = 0;\n    }\n    else\n    {\n        this._timeOffset += val;\n        this._currentTime = this._lastTime + this._timeOffset;\n    }\n    this._eventTimeChange();\n};\n\n/**\n * (re)starts the timer\n * @function\n * @memberof Timer\n * @instance\n */\nTimer.prototype.play = function ()\n{\n    this._timeStart = internalNow();\n    this._paused = false;\n    this._eventPlayPause();\n};\n\n/**\n * pauses the timer\n * @function\n * @memberof Timer\n * @instance\n */\nTimer.prototype.pause = function ()\n{\n    this._timeOffset = this._currentTime;\n    this._paused = true;\n    this._eventPlayPause();\n};\n\nTimer.prototype.pauseEvents = function (onoff)\n{\n    this._eventsPaused = onoff;\n};\n\n/**\n * @callback\n * @description adds callback, which will be executed it playing state changed\n * @memberof Timer\n * @param {Function} callback\n * @instance\n */\nTimer.prototype.onPlayPause = function (cb)\n{\n    if (cb && typeof cb == \"function\") this.cbPlayPause.push(cb);\n};\n\n/**\n * @callback\n * @description adds callback, which will be executed when the current time changes\n * @memberof Timer\n * @param {Function} callback\n * @instance\n */\nTimer.prototype.onTimeChange = function (cb)\n{\n    if (cb && typeof cb == \"function\") this.cbTimeChange.push(cb);\n};\n\nexport { Timer };\n"
            },
            {
              "id": null,
              "identifier": "/home/tom/cables_dev/cables/src/core/loadingstatus.js",
              "name": "./src/core/loadingstatus.js",
              "index": 12,
              "index2": 27,
              "size": 2699,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
              ],
              "issuer": "/home/tom/cables_dev/cables/src/core/index.js",
              "issuerId": null,
              "issuerName": "./src/core/index.js",
              "issuerPath": [
                {
                  "id": 0,
                  "identifier": "multi /home/tom/cables_dev/cables/src/core/index.js",
                  "name": "multi ./src/core/index.js"
                },
                {
                  "id": null,
                  "identifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "name": "./src/core/index.js"
                }
              ],
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "assets": [
              ],
              "reasons": [
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_patch.js",
                  "module": "./src/core/core_patch.js",
                  "moduleName": "./src/core/core_patch.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./loadingstatus",
                  "loc": "3:0-48"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "module": "./src/core/index.js",
                  "moduleName": "./src/core/index.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./loadingstatus",
                  "loc": "14:0-48"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "module": "./src/core/index.js",
                  "moduleName": "./src/core/index.js",
                  "type": "harmony import specifier",
                  "userRequest": "./loadingstatus",
                  "loc": "39:8-21"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_patch.js",
                  "module": "./src/core/core_patch.js",
                  "moduleName": "./src/core/core_patch.js",
                  "type": "harmony import specifier",
                  "userRequest": "./loadingstatus",
                  "loc": "52:23-36"
                }
              ],
              "usedExports": [
                "LoadingStatus"
              ],
              "providedExports": [
                "LoadingStatus"
              ],
              "optimizationBailout": [
              ],
              "depth": 2,
              "source": "import { generateUUID } from \"./utils\";\n// eslint-disable-next-line\nimport { CGL } from \"./cgl\"; // * if you remove this, the project wont build CGL properly.. wtf?\n\n// \"use strict\";\n\nconst LoadingStatus = function (patch)\n{\n    this._loadingAssets = {};\n    this._cbFinished = [];\n    this._percent = 0;\n    this._count = 0;\n    this._countFinished = 0;\n    this._order = 0;\n    this._startTime = 0;\n    this._patch = patch;\n};\n\nLoadingStatus.prototype.setOnFinishedLoading = function (cb)\n{\n    this._cbFinished.push(cb);\n};\n\nLoadingStatus.prototype.getNumAssets = function ()\n{\n    return this._countFinished;\n};\n\nLoadingStatus.prototype.getProgress = function ()\n{\n    return this._percent;\n};\n\nLoadingStatus.prototype.checkStatus = function ()\n{\n    this._countFinished = 0;\n    this._count = 0;\n\n    for (var i in this._loadingAssets)\n    {\n        this._count++;\n        if (!this._loadingAssets[i].finished)\n        {\n            this._countFinished++;\n        }\n    }\n\n    this._percent = (this._count - this._countFinished) / this._count;\n\n    // if (onLoadingAssetsFinished)\n    // {\n    //     console.error(\"CGL.onLoadingAssetsFinished is deprecated, please use config parameter onFinishedLoading with scene/patch constructor\");\n    //     setTimeout(this._cbFinished, 200);\n    // }\n\n    if (this._countFinished === 0)\n    {\n        for (var j = 0; j < this._cbFinished.length; j++)\n        {\n            setTimeout(this._cbFinished[j], 200);\n        }\n        this.print();\n    }\n};\n\nLoadingStatus.prototype.print = function ()\n{\n    if (this._patch.silent) return;\n\n    var rows = [];\n\n    for (var i in this._loadingAssets)\n    {\n        rows.push([\n            this._loadingAssets[i].order,\n            this._loadingAssets[i].type,\n            this._loadingAssets[i].name,\n            (this._loadingAssets[i].timeEnd - this._loadingAssets[i].timeStart) / 1000 + \"s\",\n        ]);\n    }\n\n    console.groupCollapsed(\n        \"finished loading \" + this._order + \" assets in \" + (Date.now() - this._startTime) / 1000 + \"s\",\n    );\n    console.table(rows);\n    console.groupEnd();\n};\n\nLoadingStatus.prototype.finished = function (id)\n{\n    if (this._loadingAssets[id])\n    {\n        this._loadingAssets[id].finished = true;\n        this._loadingAssets[id].timeEnd = Date.now();\n    }\n\n    this.checkStatus();\n};\n\nLoadingStatus.prototype.start = function (type, name)\n{\n    if (this._startTime == 0) this._startTime = Date.now();\n    var id = generateUUID();\n\n    this._loadingAssets[id] = {\n        id,\n        type,\n        name,\n        finished: false,\n        timeStart: Date.now(),\n        order: this._order,\n    };\n    this._order++;\n\n    return id;\n};\n\nexport { LoadingStatus };\n"
            },
            {
              "id": null,
              "identifier": "/home/tom/cables_dev/cables/src/core/instancing.js",
              "name": "./src/core/instancing.js",
              "index": 32,
              "index2": 28,
              "size": 1008,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
              ],
              "issuer": "/home/tom/cables_dev/cables/src/core/index.js",
              "issuerId": null,
              "issuerName": "./src/core/index.js",
              "issuerPath": [
                {
                  "id": 0,
                  "identifier": "multi /home/tom/cables_dev/cables/src/core/index.js",
                  "name": "multi ./src/core/index.js"
                },
                {
                  "id": null,
                  "identifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "name": "./src/core/index.js"
                }
              ],
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "assets": [
              ],
              "reasons": [
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_patch.js",
                  "module": "./src/core/core_patch.js",
                  "moduleName": "./src/core/core_patch.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./instancing",
                  "loc": "4:0-42"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "module": "./src/core/index.js",
                  "moduleName": "./src/core/index.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./instancing",
                  "loc": "13:0-42"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "module": "./src/core/index.js",
                  "moduleName": "./src/core/index.js",
                  "type": "harmony import specifier",
                  "userRequest": "./instancing",
                  "loc": "35:8-18"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_patch.js",
                  "module": "./src/core/core_patch.js",
                  "moduleName": "./src/core/core_patch.js",
                  "type": "harmony import specifier",
                  "userRequest": "./instancing",
                  "loc": "67:26-36"
                }
              ],
              "usedExports": [
                "Instancing"
              ],
              "providedExports": [
                "Instancing"
              ],
              "optimizationBailout": [
              ],
              "depth": 2,
              "source": "// todo: needs to be removed...\n\nconst Instancing = function ()\n{\n    this._loops = [];\n    this._indizes = [];\n    this._index = 0;\n};\n\nInstancing.prototype.pushLoop = function (maxNum)\n{\n    this._loops.push(Math.abs(Math.floor(maxNum)));\n    this._indizes.push(this._index);\n};\n\nInstancing.prototype.popLoop = function ()\n{\n    this._loops.pop();\n    // this._index--;\n    this._index = this._indizes.pop();\n    if (this._loops.length === 0) this._index = 0;\n};\n\nInstancing.prototype.numLoops = function ()\n{\n    return this._loops.length;\n};\n\nInstancing.prototype.numCycles = function ()\n{\n    if (this._loops.length === 0) return 0;\n    var num = this._loops[0];\n    for (var i = 1; i < this._loops.length; i++) num *= this._loops[i];\n\n    return num;\n};\n\nInstancing.prototype.inLoop = function ()\n{\n    return this._loops.length > 0;\n};\n\nInstancing.prototype.increment = function ()\n{\n    this._index++;\n};\n\nInstancing.prototype.index = function ()\n{\n    return this._index;\n};\n\nexport { Instancing };\n"
            },
            {
              "id": null,
              "identifier": "/home/tom/cables_dev/cables/src/core/core_profiler.js",
              "name": "./src/core/core_profiler.js",
              "index": 33,
              "index2": 29,
              "size": 1958,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
              ],
              "issuer": "/home/tom/cables_dev/cables/src/core/index.js",
              "issuerId": null,
              "issuerName": "./src/core/index.js",
              "issuerPath": [
                {
                  "id": 0,
                  "identifier": "multi /home/tom/cables_dev/cables/src/core/index.js",
                  "name": "multi ./src/core/index.js"
                },
                {
                  "id": null,
                  "identifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "name": "./src/core/index.js"
                }
              ],
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "assets": [
              ],
              "reasons": [
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_patch.js",
                  "module": "./src/core/core_patch.js",
                  "moduleName": "./src/core/core_patch.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./core_profiler",
                  "loc": "7:0-43"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "module": "./src/core/index.js",
                  "moduleName": "./src/core/index.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./core_profiler",
                  "loc": "9:0-43"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "module": "./src/core/index.js",
                  "moduleName": "./src/core/index.js",
                  "type": "harmony import specifier",
                  "userRequest": "./core_profiler",
                  "loc": "29:8-16"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_patch.js",
                  "module": "./src/core/core_patch.js",
                  "moduleName": "./src/core/core_patch.js",
                  "type": "harmony import specifier",
                  "userRequest": "./core_profiler",
                  "loc": "969:24-32"
                }
              ],
              "usedExports": [
                "Profiler"
              ],
              "providedExports": [
                "Profiler"
              ],
              "optimizationBailout": [
              ],
              "depth": 2,
              "source": "import { now } from \"./timer\";\n\nconst Profiler = function ()\n{\n    var items = {};\n    var currentId = null;\n    var currentStart = 0;\n\n    this.getItems = function ()\n    {\n        return items;\n    };\n\n    this.clear = function ()\n    {\n        items = {};\n    };\n\n    this.add = function (type, object)\n    {\n        if (currentId !== null)\n        {\n            if (!object || object.id != currentId)\n            {\n                if (items[currentId])\n                {\n                    // console.log(currentStart);\n                    items[currentId].timeUsed += performance.now() - currentStart;\n\n                    if (!items[currentId].peakTime || now() - items[currentId].peakTime > 5000)\n                    {\n                        if (items[currentId].peak > 1 && object)\n                        {\n                            console.log(\"PEAK \", object.parent.objName);\n                        }\n\n                        items[currentId].peak = 0;\n                        items[currentId].peakTime = now();\n                    }\n                    items[currentId].peak = Math.max(items[currentId].peak, performance.now() - currentStart);\n                }\n            }\n        }\n\n        if (object !== null)\n        {\n            if (!items[object.id])\n            {\n                items[object.id] = {\n                    numTriggers: 0,\n                    timeUsed: 0,\n                };\n            }\n\n            items[object.id].numTriggers++;\n            items[object.id].title = object.parent.name + object.name;\n\n            currentId = object.id;\n            currentStart = performance.now();\n        }\n        else\n        {\n            currentId = null;\n        }\n    };\n\n    this.print = function ()\n    {\n        console.log(\"--------\");\n        for (var i in items)\n        {\n            console.log(items[i].title + \": \" + items[i].numTriggers + \" / \" + items[i].timeUsed);\n        }\n    };\n};\n\nexport { Profiler };\n"
            },
            {
              "id": null,
              "identifier": "/home/tom/cables_dev/cables/src/core/requirements.js",
              "name": "./src/core/requirements.js",
              "index": 34,
              "index2": 30,
              "size": 2538,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
              ],
              "issuer": "/home/tom/cables_dev/cables/src/core/index.js",
              "issuerId": null,
              "issuerName": "./src/core/index.js",
              "issuerPath": [
                {
                  "id": 0,
                  "identifier": "multi /home/tom/cables_dev/cables/src/core/index.js",
                  "name": "multi ./src/core/index.js"
                },
                {
                  "id": null,
                  "identifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "name": "./src/core/index.js"
                }
              ],
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "assets": [
              ],
              "reasons": [
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "module": "./src/core/index.js",
                  "moduleName": "./src/core/index.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./requirements",
                  "loc": "11:0-46"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_patch.js",
                  "module": "./src/core/core_patch.js",
                  "moduleName": "./src/core/core_patch.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./requirements",
                  "loc": "12:0-46"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "module": "./src/core/index.js",
                  "moduleName": "./src/core/index.js",
                  "type": "harmony import specifier",
                  "userRequest": "./requirements",
                  "loc": "30:8-20"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_patch.js",
                  "module": "./src/core/core_patch.js",
                  "moduleName": "./src/core/core_patch.js",
                  "type": "harmony import specifier",
                  "userRequest": "./requirements",
                  "loc": "829:19-31"
                }
              ],
              "usedExports": [
                "Requirements"
              ],
              "providedExports": [
                "Requirements"
              ],
              "optimizationBailout": [
              ],
              "depth": 2,
              "source": "const Requirements = function (patch)\n{\n    this._patch = patch;\n    this.result = [];\n};\n\nRequirements.MIDI = 0;\nRequirements.POINTERLOCK = 1;\nRequirements.WEBAUDIO = 2;\nRequirements.WEBGL2 = 3;\n\nRequirements.infos = [];\nRequirements.infos[Requirements.POINTERLOCK] = { title: \"pointerLock\", caniuse: \"https://caniuse.com/#search=pointerlock\" };\nRequirements.infos[Requirements.MIDI] = { title: \"midi API\", caniuse: \"https://caniuse.com/#search=midi\" };\nRequirements.infos[Requirements.WEBAUDIO] = { title: \"web audio\", caniuse: \"https://caniuse.com/#search=webaudio\" };\nRequirements.infos[Requirements.WEBGL2] = { title: \"WebGL 2\" };\n\nRequirements.prototype.checkRequirement = function (which, op)\n{\n    this.result = [];\n    switch (which)\n    {\n    case Requirements.WEBGL2:\n        return op.patch.cgl.glVersion >= 2;\n        break;\n    case Requirements.POINTERLOCK:\n        return \"exitPointerLock\" in document;\n        break;\n    case Requirements.MIDI:\n        return \"MIDIAccess\" in window;\n        break;\n    case Requirements.WEBAUDIO:\n        var has = false;\n        if (window.audioContext) has = true;\n        if (!has && (\"webkitAudioContext\" in window || \"AudioContext\" in window)) has = true;\n        return has;\n        break;\n    }\n};\n\nRequirements.prototype.checkOp = function (op)\n{\n    if (op && op.requirements)\n    {\n        for (var j = 0; j < op.requirements.length; j++)\n        {\n            var reqId = op.requirements[j];\n            if (!this.result[reqId])\n            {\n                var success = this.checkRequirement(reqId, op);\n\n                if (!success)\n                {\n                    if (op.patch.cgl && op.patch.cgl.canvas) op.patch.cgl.canvas.remove();\n                    var title = Requirements.infos[reqId].title;\n                    if (Requirements.infos[reqId].caniuse) title = \"<a href=\\\"\" + Requirements.infos[reqId].caniuse + \"\\\" target=\\\"_blank\\\">\" + Requirements.infos[reqId].title + \" (\" + op.objName + \")</a>\";\n                    // document.writeln('<pre>browser does not meet requirement: '+title+'</pre>');\n                    // console.error(\"browser does not meet requirement: \"+Requirements.infos[reqId].title);\n                    throw \"this browser does not meet requirement: \" + Requirements.infos[reqId].title + \" (\" + op.objName + \")\";\n                }\n\n                this.result[reqId] = {\n                    success,\n                    info: Requirements.infos[reqId],\n                };\n            }\n        }\n    }\n};\n\nexport { Requirements };\n"
            },
            {
              "id": null,
              "identifier": "/home/tom/cables_dev/cables/src/core/core_patch.js",
              "name": "./src/core/core_patch.js",
              "index": 11,
              "index2": 31,
              "size": 33760,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
              ],
              "issuer": "/home/tom/cables_dev/cables/src/core/index.js",
              "issuerId": null,
              "issuerName": "./src/core/index.js",
              "issuerPath": [
                {
                  "id": 0,
                  "identifier": "multi /home/tom/cables_dev/cables/src/core/index.js",
                  "name": "multi ./src/core/index.js"
                },
                {
                  "id": null,
                  "identifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "name": "./src/core/index.js"
                }
              ],
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "assets": [
              ],
              "reasons": [
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/embedding.js",
                  "module": "./src/core/embedding.js",
                  "moduleName": "./src/core/embedding.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./core_patch",
                  "loc": "1:0-33"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "module": "./src/core/index.js",
                  "moduleName": "./src/core/index.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./core_patch",
                  "loc": "10:0-33"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "module": "./src/core/index.js",
                  "moduleName": "./src/core/index.js",
                  "type": "harmony import specifier",
                  "userRequest": "./core_patch",
                  "loc": "31:8-13"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/embedding.js",
                  "module": "./src/core/embedding.js",
                  "moduleName": "./src/core/embedding.js",
                  "type": "harmony import specifier",
                  "userRequest": "./core_patch",
                  "loc": "56:23-28"
                }
              ],
              "usedExports": [
                "default"
              ],
              "providedExports": [
                "default"
              ],
              "optimizationBailout": [
              ],
              "depth": 2,
              "source": "import { EventTarget } from \"./eventtarget\";\nimport { ajax, uuid, ajaxSync } from \"./utils\";\nimport { LoadingStatus } from \"./loadingstatus\";\nimport { Instancing } from \"./instancing\";\nimport { Timer } from \"./timer\";\nimport { Link } from \"./core_link\";\nimport { Profiler } from \"./core_profiler\";\nimport { Context } from \"./cgl/cgl_state\";\nimport { Anim, ANIM } from \"./anim\";\nimport { CONSTANTS } from \"./constants\";\n// import { CONSTANTS.OP.OP_PORT_TYPE_TEXTURE } from \"./core_op\";\nimport { Requirements } from \"./requirements\";\n\n/**\n * Patch class, contains all operators,values,links etc. manages loading and running of the whole patch\n *\n * see {@link PatchConfig}\n *\n * @external CABLES\n * @namespace Patch\n * @hideconstructor\n * @param {PatchConfig} config The configuration object.\n * @class\n * @example\n * CABLES.patch=new CABLES.Patch(\n * {\n *     patch:pStr,\n *     glCanvasId:'glcanvas',\n *     glCanvasResizeToWindow:true,\n *     canvas:{powerPreference:\"high-performance\"},\n *     prefixAssetPath:'/assets/',\n *     onError:function(e){console.log(e);}\n * });\n */\n\nconst Patch = function (cfg)\n{\n    EventTarget.apply(this);\n\n    this.ops = [];\n    this.settings = {};\n    this.timer = new Timer();\n    this.freeTimer = new Timer();\n    this.animFrameOps = [];\n    this.animFrameCallbacks = [];\n    this.gui = false;\n    this.silent = false;\n    this.profiler = null;\n    this.onLoadStart = null;\n    this.onLoadEnd = null;\n    this.aborted = false;\n    this.loading = new LoadingStatus(this);\n    this._crashedOps = [];\n\n    this._perf = {\n        fps: 0,\n        ms: 0,\n        _fpsFrameCount: 0,\n        _fpsMsCount: 0,\n        _fpsStart: 0,\n    };\n\n\n    this._volumeListeners = [];\n    this._paused = false;\n    this._frameNum = 0;\n    this.instancing = new Instancing();\n    this.onOneFrameRendered = null;\n    this.namedTriggers = {};\n\n    this._origData = null;\n    this._frameNext = 0;\n    this._frameInterval = 0;\n    this._lastFrameTime = 0;\n    this._frameWasdelayed = true;\n\n    this.config = cfg || {\n        glCanvasResizeToWindow: false,\n        // glCanvasId: 'glcanvas',\n        prefixAssetPath: \"\",\n        silent: false,\n        onError: null,\n        onFinishedLoading: null,\n        onFirstFrameRendered: null,\n        onPatchLoaded: null,\n        fpsLimit: 0,\n    };\n\n    if (!this.config.hasOwnProperty(\"doRequestAnimation\")) this.config.doRequestAnimation = true;\n\n    if (!this.config.prefixAssetPath) this.config.prefixAssetPath = \"\";\n    if (!this.config.masterVolume) this.config.masterVolume = 1.0;\n\n    this._variables = {};\n    if (cfg && cfg.variables) this._variables = cfg.variables || {};\n    this._variableListeners = [];\n    this.vars = {};\n    if (cfg && cfg.vars) this.vars = cfg.vars; // vars is old!\n\n    this.cgl = new Context(this);\n\n    this.cgl.setCanvas(this.config.glCanvasId || this.config.glCanvas || \"glcanvas\");\n    if (this.config.glCanvasResizeToWindow === true) this.cgl.setAutoResize(\"window\");\n    if (this.config.glCanvasResizeToParent === true) this.cgl.setAutoResize(\"parent\");\n    this.loading.setOnFinishedLoading(this.config.onFinishedLoading);\n\n    if (this.cgl.aborted) this.aborted = true;\n    if (this.cgl.silent) this.silent = true;\n\n    this.freeTimer.play();\n    this.exec();\n\n    if (!this.aborted)\n    {\n        if (this.config.patch)\n        {\n            this.deSerialize(this.config.patch);\n            this.timer.play();\n        }\n        else if (this.config.patchFile)\n        {\n            ajax(\n                this.config.patchFile,\n                (err, _data) =>\n                {\n                    var data = JSON.parse(_data);\n                    if (err)\n                    {\n                        var txt = \"\";\n\n                        console.error(\"err\", err);\n                        console.error(\"data\", data);\n                        console.error(\"data\", data.msg);\n                        return;\n                    }\n\n                    this.deSerialize(data);\n                },\n            );\n\n            this.timer.play();\n        }\n    }\n\n    console.log(\"made with https://cables.gl\");\n};\n\nPatch.prototype.isPlaying = function ()\n{\n    return !this._paused;\n};\n\nPatch.prototype.renderOneFrame = function ()\n{\n    this._paused = true;\n    this._renderOneFrame = true;\n    this.exec();\n    this._renderOneFrame = false;\n};\n\n/**\n * current number of frames per second\n * @function getFPS\n * @memberof Patch\n * @instance\n * @return {Number} fps\n */\nPatch.prototype.getFPS = function ()\n{\n    return this._fps;\n};\n\n/**\n * returns true if patch is opened in editor/gui mode\n * @function isEditorMode\n * @memberof Patch\n * @instance\n * @return {Boolean} editor mode\n */\nPatch.prototype.isEditorMode = function ()\n{\n    return this.config.editorMode === true;\n};\n\n/**\n * pauses patch execution\n * @function pause\n * @memberof Patch\n * @instance\n */\nPatch.prototype.pause = function ()\n{\n    this._paused = true;\n    this.freeTimer.pause();\n};\n\n/**\n * resumes patch execution\n * @function resume\n * @memberof Patch\n * @instance\n */\nPatch.prototype.resume = function ()\n{\n    if (this._paused)\n    {\n        this._paused = false;\n        this.freeTimer.play();\n        this.exec();\n    }\n};\n\n/**\n * set volume [0-1]\n * @function setVolume\n * @param {Number} volume\n * @memberof Patch\n * @instance\n */\nPatch.prototype.setVolume = function (v)\n{\n    this.config.masterVolume = v;\n    for (var i = 0; i < this._volumeListeners.length; i++) this._volumeListeners[i].onMasterVolumeChanged(v);\n};\n\n/**\n * get url/filepath for a filename\n * this uses prefixAssetpath in exported patches\n * @function getFilePath\n * @memberof Patch\n * @instance\n * @param {String} filename\n * @return {String} url\n\n */\nPatch.prototype.getFilePath = function (filename)\n{\n    if (!filename) return filename;\n    if (filename.indexOf(\"https:\") === 0 || filename.indexOf(\"http:\") === 0) return filename;\n\n    filename = filename.replace(\"//\", \"/\");\n\n    var finalFilename = this.config.prefixAssetPath + filename + (this.config.suffixAssetPath || \"\");\n    // console.log('finalFilename',finalFilename);\n\n    return finalFilename;\n};\n\nPatch.prototype.clear = function ()\n{\n    this.cgl.TextureEffectMesh = null;\n    this.animFrameOps.length = 0;\n    this.timer = new Timer();\n    while (this.ops.length > 0) this.deleteOp(this.ops[0].id);\n};\n\nPatch.getOpClass = function (objName)\n{\n    var parts = objName.split(\".\");\n    var opObj = null;\n\n    try\n    {\n        if (parts.length == 2) opObj = window[parts[0]][parts[1]];\n        else if (parts.length == 3) opObj = window[parts[0]][parts[1]][parts[2]];\n        else if (parts.length == 4) opObj = window[parts[0]][parts[1]][parts[2]][parts[3]];\n        else if (parts.length == 5) opObj = window[parts[0]][parts[1]][parts[2]][parts[3]][parts[4]];\n        else if (parts.length == 6) opObj = window[parts[0]][parts[1]][parts[2]][parts[3]][parts[4]][parts[5]];\n        else if (parts.length == 7) opObj = window[parts[0]][parts[1]][parts[2]][parts[3]][parts[4]][parts[5]][parts[6]];\n        else if (parts.length == 8) opObj = window[parts[0]][parts[1]][parts[2]][parts[3]][parts[4]][parts[5]][parts[6]][parts[7]];\n        else if (parts.length == 9) opObj = window[parts[0]][parts[1]][parts[2]][parts[3]][parts[4]][parts[5]][parts[6]][parts[7]][parts[8]];\n        else if (parts.length == 10) opObj = window[parts[0]][parts[1]][parts[2]][parts[3]][parts[4]][parts[5]][parts[6]][parts[7]][parts[8]][parts[9]];\n        return opObj;\n    }\n    catch (e)\n    {\n        return null;\n    }\n};\n\nPatch.prototype.createOp = function (identifier, id)\n{\n    var parts = identifier.split(\".\");\n    var op = null;\n    var objName = \"\";\n\n    try\n    {\n        if (identifier.indexOf(\"Ops.\") == -1)\n        {\n            // this should be a uuid, not a namespace\n            // creating ops by id should be the default way from now on!\n            var opId = identifier;\n\n            if (CABLES.OPS[opId])\n            {\n                objName = CABLES.OPS[opId].objName;\n                op = new CABLES.OPS[opId].f(this, objName, id, opId);\n                op.opId = opId;\n            }\n            else\n            {\n                throw(\"could not find op by id\");\n            }\n        }\n\n        if (!op)\n        {\n            // fallback: create by objname!\n            objName = identifier;\n            var opObj = Patch.getOpClass(objName);\n\n            if (!opObj)\n            {\n                this.emitEvent(\"criticalError\", \"unknown op\", \"unknown op: \" + objName);\n\n                console.error('unknown op: ' + objName);\n                throw new Error('unknown op: ' + objName);\n            } else {\n                if (parts.length == 2) op = new window[parts[0]][parts[1]](this, objName,id);\n                else if (parts.length == 3) op = new window[parts[0]][parts[1]][parts[2]](this, objName,id);\n                else if (parts.length == 4) op = new window[parts[0]][parts[1]][parts[2]][parts[3]](this, objName,id);\n                else if (parts.length == 5) op = new window[parts[0]][parts[1]][parts[2]][parts[3]][parts[4]](this, objName,id);\n                else if (parts.length == 6) op = new window[parts[0]][parts[1]][parts[2]][parts[3]][parts[4]][parts[5]](this, objName,id);\n                else if (parts.length == 7) op = new window[parts[0]][parts[1]][parts[2]][parts[3]][parts[4]][parts[5]][parts[6]](this, objName,id);\n                else if (parts.length == 8) op = new window[parts[0]][parts[1]][parts[2]][parts[3]][parts[4]][parts[5]][parts[6]][parts[7]](this, objName,id);\n                else if (parts.length == 9) op = new window[parts[0]][parts[1]][parts[2]][parts[3]][parts[4]][parts[5]][parts[6]][parts[7]][parts[8]](this, objName,id);\n                else if (parts.length == 10) op = new window[parts[0]][parts[1]][parts[2]][parts[3]][parts[4]][parts[5]][parts[6]][parts[7]][parts[8]][parts[9]](this, objName,id);\n                else console.log('parts.length', parts.length);\n            }\n\n            if (op)\n            {\n                op.opId = null;\n                // console.log(\"op created by objName:\",objName);\n                for (var i in CABLES.OPS)\n                {\n                    if (CABLES.OPS[i].objName == objName) op.opId = i;\n                }\n            }\n        }\n    }\n    catch (e)\n    {\n        this._crashedOps.push(objName);\n\n        this.emitEvent(\"exceptionOp\", e, objName);\n\n        if (!this.isEditorMode)\n        {\n            console.log(e);\n            console.error('[instancing error] ' + objName,e);\n\n            if (CABLES.api) CABLES.api.sendErrorReport(e);\n            this.exitError(\"INSTANCE_ERR\",'Instancing Error ' + objName);\n            throw 'instancing error ' + objName;\n        }\n    }\n\n    if (op)\n    {\n        op.objName = objName;\n        op.patch = this;\n    }\n    return op;\n};\n\n/**\n * create a new op in patch\n * @function addOp\n * @memberof Patch\n * @instance\n * @param {String} objName, e.g. Ops.Math.Sum\n * @param {Object} UI Attributes\n * @example\n * // add invisible op\n * patch.addOp('Ops.Math.Sum', { showUiAttribs: false });\n */\nPatch.prototype.addOp = function (opIdentifier, uiAttribs, id)\n{\n    var op = this.createOp(opIdentifier, id);\n\n    if (op)\n    {\n        op.uiAttr(uiAttribs);\n        if (op.onCreate) op.onCreate();\n\n        if (op.hasOwnProperty(\"onAnimFrame\")) this.animFrameOps.push(op);\n        if (op.hasOwnProperty(\"onMasterVolumeChanged\")) this._volumeListeners.push(op);\n\n        this.ops.push(op);\n\n        // if (this.onAdd) this.onAdd(op);\n        this.emitEvent(\"onOpAdd\", op);\n\n        if (op.init) op.init();\n    }\n\n    // if(next) next(op);\n    return op;\n};\n\nPatch.prototype.addOnAnimFrame = function (op)\n{\n    this.animFrameOps.push(op);\n};\n\nPatch.prototype.removeOnAnimFrame = function (op)\n{\n    for (var i = 0; i < this.animFrameOps.length; i++)\n    {\n        if (this.animFrameOps[i] == op)\n        {\n            this.animFrameOps.splice(i, 1);\n            return;\n        }\n    }\n};\n\nPatch.prototype.addOnAnimFrameCallback = function (cb)\n{\n    this.animFrameCallbacks.push(cb);\n};\n\nPatch.prototype.removeOnAnimCallback = function (cb)\n{\n    for (var i = 0; i < this.animFrameCallbacks.length; i++)\n    {\n        if (this.animFrameCallbacks[i] == cb)\n        {\n            this.animFrameCallbacks.splice(i, 1);\n            return;\n        }\n    }\n};\n\nPatch.prototype.deleteOp = function (opid, tryRelink)\n{\n    for (var i in this.ops)\n    {\n        if (this.ops[i].id == opid)\n        {\n            var op = this.ops[i];\n            var reLinkP1 = null;\n            var reLinkP2 = null;\n\n            if (op)\n            {\n                if (tryRelink)\n                {\n                    if (this.ops[i].portsIn.length > 0 && this.ops[i].portsIn[0].isLinked() && (this.ops[i].portsOut.length > 0 && this.ops[i].portsOut[0].isLinked()))\n                    {\n                        if (this.ops[i].portsIn[0].getType() == this.ops[i].portsOut[0].getType())\n                        {\n                            reLinkP1 = this.ops[i].portsIn[0].links[0].getOtherPort(this.ops[i].portsIn[0]);\n                            reLinkP2 = this.ops[i].portsOut[0].links[0].getOtherPort(this.ops[i].portsOut[0]);\n                        }\n                    }\n                }\n\n                var opToDelete = this.ops[i];\n                opToDelete.removeLinks();\n\n                if (this.onDelete)\n                {\n                    // todo: remove\n                    console.log(\"deprecated this.onDelete\", this.onDelete);\n                    this.onDelete(opToDelete);\n                }\n\n                this.emitEvent(\"onOpDelete\", opToDelete);\n                this.ops.splice(i, 1);\n\n                if (opToDelete.onDelete) opToDelete.onDelete();\n                opToDelete.cleanUp();\n\n                if (reLinkP1 !== null && reLinkP2 !== null)\n                {\n                    this.link(reLinkP1.parent, reLinkP1.getName(), reLinkP2.parent, reLinkP2.getName());\n                }\n            }\n        }\n    }\n};\n\nPatch.prototype.getFrameNum = function ()\n{\n    return this._frameNum;\n};\n\nPatch.prototype.renderFrame = function (e)\n{\n    this.timer.update();\n    this.freeTimer.update();\n    var time = this.timer.getTime();\n\n    for (var i = 0; i < this.animFrameCallbacks.length; ++i)\n    {\n        if (this.animFrameCallbacks[i]) this.animFrameCallbacks[i](time, this._frameNum);\n    }\n\n    for (var i = 0; i < this.animFrameOps.length; ++i)\n    {\n        if (this.animFrameOps[i].onAnimFrame) this.animFrameOps[i].onAnimFrame(time);\n    }\n    this._frameNum++;\n    if (this._frameNum == 1)\n    {\n        if (this.config.onFirstFrameRendered) this.config.onFirstFrameRendered();\n    }\n};\n\nPatch.prototype.exec = function (e)\n{\n    if (!this._renderOneFrame && (this._paused || this.aborted)) return;\n\n    this.config.fpsLimit = this.config.fpsLimit || 0;\n    if (this.config.fpsLimit)\n    {\n        this._frameInterval = 1000 / this.config.fpsLimit;\n    }\n\n    var now = CABLES.now();\n    var frameDelta = now - this._frameNext;\n\n    if (this.isEditorMode())\n    {\n        if (!this._renderOneFrame)\n        {\n            if (now - this._lastFrameTime >= 500 && this._lastFrameTime !== 0 && !this._frameWasdelayed)\n            {\n                this._lastFrameTime = 0;\n                setTimeout(this.exec.bind(this), 500);\n                this.emitEvent(\"renderDelayStart\");\n                this._frameWasdelayed = true;\n                return;\n            }\n        }\n    }\n\n    if (this._renderOneFrame || this.config.fpsLimit === 0 || frameDelta > this._frameInterval || this._frameWasdelayed)\n    {\n        var startFrameTime = CABLES.now();\n        this.renderFrame();\n        this._perf._fpsMsCount += CABLES.now() - startFrameTime;\n\n        if (this._frameInterval) this._frameNext = now - (frameDelta % this._frameInterval);\n    }\n\n    if (this._frameWasdelayed)\n    {\n        this.emitEvent(\"renderDelayEnd\");\n        this._frameWasdelayed = false;\n    }\n\n    if (this._renderOneFrame && this.onOneFrameRendered)\n    {\n        this.onOneFrameRendered();\n        this._renderOneFrame = false;\n    }\n\n\n\n    // this._perf = {\n    //     fps: 0,\n    //     ms: 0,\n    //     _fpsFrameCount: 0,\n    //     _fpsMsCount: 0,\n    //     _fpsStart: 0,\n    // };\n\n    if (CABLES.now() - this._perf._fpsStart >= 1000)\n    {\n        if (this._perf.fps != this._perf._fpsFrameCount)\n        {\n            this._perf.fps = this._perf._fpsFrameCount;\n            this._perf.ms = Math.round(this._perf._fpsMsCount / this._perf._fpsFrameCount);\n            \n            this.emitEvent(\"performance\", this._perf);\n\n            this._perf._fpsFrameCount = 0;\n            this._perf._fpsMsCount = 0;\n            this._perf._fpsStart = CABLES.now();\n        }\n    }\n\n    this._perf._lastFrameTime = CABLES.now();\n    this._perf._fpsFrameCount++;\n\n    if (this.config.doRequestAnimation) requestAnimationFrame(this.exec.bind(this));\n};\n\n/**\n * link two ops/ports\n * @function link\n * @memberof Patch\n * @instance\n * @param {Op} op1\n * @param {String} portName1\n * @param {Op} op2\n * @param {String} portName2\n */\nPatch.prototype.link = function (op1, port1Name, op2, port2Name)\n{\n    if (!op1)\n    {\n        console.log(\"link: op1 is null \");\n        return;\n    }\n    if (!op2)\n    {\n        console.log(\"link: op2 is null\");\n        return;\n    }\n    var port1 = op1.getPort(port1Name);\n    var port2 = op2.getPort(port2Name);\n\n    if (!port1)\n    {\n        console.warn(\"port not found! \" + port1Name + \"(\" + op1.objName + \")\");\n        return;\n    }\n\n    if (!port2)\n    {\n        console.warn(\"port not found! \" + port2Name + \" of \" + op2.name + \"(\" + op2.objName + \")\");\n        return;\n    }\n\n    if (!port1.shouldLink(port1, port2) || !port2.shouldLink(port1, port2))\n    {\n        return false;\n    }\n\n    if (Link.canLink(port1, port2))\n    {\n        var link = new Link(this);\n        link.link(port1, port2);\n\n        this.emitEvent(\"onLink\", port1, port2, link);\n        return link;\n    }\n};\n\nPatch.prototype.serialize = function (asObj)\n{\n    var obj = {};\n\n    obj.ops = [];\n    obj.settings = this.settings;\n    for (var i in this.ops)\n    {\n        obj.ops.push(this.ops[i].getSerialized());\n    }\n\n    if (asObj) return obj;\n    return JSON.stringify(obj);\n};\n\nPatch.prototype.getOpById = function (opid)\n{\n    for (var i in this.ops)\n    {\n        if (this.ops[i].id == opid) return this.ops[i];\n    }\n};\n\nPatch.prototype.getOpsByName = function (name)\n{\n    var arr = [];\n    for (var i in this.ops)\n    {\n        if (this.ops[i].name == name) arr.push(this.ops[i]);\n    }\n    return arr;\n};\n\nPatch.prototype.getOpsByObjName = function (name)\n{\n    var arr = [];\n    for (var i in this.ops)\n    {\n        if (this.ops[i].objName == name) arr.push(this.ops[i]);\n    }\n    return arr;\n};\n\nPatch.prototype.loadLib = function (which)\n{\n    ajaxSync(\n        \"/ui/libs/\" + which + \".js\",\n        (err, res) =>\n        {\n            var se = document.createElement(\"script\");\n            se.type = \"text/javascript\";\n            se.text = res;\n            document.getElementsByTagName(\"head\")[0].appendChild(se);\n        },\n        \"GET\",\n    );\n    // open and send a synchronous request\n    // xhrObj.open('GET', '/ui/libs/'+which+'.js', false);\n    // xhrObj.send('');\n    // add the returned content to a newly created script tag\n};\n\nPatch.prototype.reloadOp = function (objName, cb)\n{\n    var count = 0;\n    var ops = [];\n    var oldOps = [];\n\n    for (var i in this.ops)\n    {\n        if (this.ops[i].objName == objName)\n        {\n            oldOps.push(this.ops[i]);\n        }\n    }\n\n    for (var i = 0; i < oldOps.length; i++)\n    {\n        // if (this.ops[i].objName == objName) {\n        count++;\n        var oldOp = oldOps[i];\n        oldOp.deleted = true;\n        var self = this;\n\n        var op = this.addOp(objName, oldOp.uiAttribs);\n        ops.push(op);\n\n        var j,\n            k,\n            l;\n        for (j in oldOp.portsIn)\n        {\n            if (oldOp.portsIn[j].links.length === 0)\n            {\n                var p = op.getPort(oldOp.portsIn[j].name);\n                if (!p) console.error(\"[reloadOp] could not set port \" + oldOp.portsIn[j].name + \", propably renamed port ?\");\n                else p.set(oldOp.portsIn[j].get());\n            }\n            else\n            {\n                while (oldOp.portsIn[j].links.length)\n                {\n                    var oldName = oldOp.portsIn[j].links[0].portIn.name;\n                    var oldOutName = oldOp.portsIn[j].links[0].portOut.name;\n                    var oldOutOp = oldOp.portsIn[j].links[0].portOut.parent;\n                    oldOp.portsIn[j].links[0].remove();\n\n                    l = self.link(op, oldName, oldOutOp, oldOutName);\n                    if (!l) console.log(\"[reloadOp] relink after op reload not successfull for port \" + oldOutName);\n                    else l.setValue();\n                }\n            }\n        }\n\n        for (j in oldOp.portsOut)\n        {\n            while (oldOp.portsOut[j].links.length)\n            {\n                var oldNewName = oldOp.portsOut[j].links[0].portOut.name;\n                var oldInName = oldOp.portsOut[j].links[0].portIn.name;\n                var oldInOp = oldOp.portsOut[j].links[0].portIn.parent;\n                oldOp.portsOut[j].links[0].remove();\n\n                l = self.link(op, oldNewName, oldInOp, oldInName);\n                if (!l) console.log(\"relink after op reload not successfull for port \" + oldInName);\n                else l.setValue();\n            }\n        }\n\n        this.deleteOp(oldOp.id);\n        // }\n    }\n    cb(count, ops);\n};\n\nPatch.prototype.getSubPatchOps = function (patchId)\n{\n    var ops = [];\n    for (var i in this.ops)\n    {\n        if (this.ops[i].uiAttribs && this.ops[i].uiAttribs.subPatch == patchId)\n        {\n            ops.push(this.ops[i]);\n        }\n    }\n    return ops;\n};\n\nPatch.prototype.getSubPatchOp = function (patchId, objName)\n{\n    for (var i in this.ops)\n    {\n        if (this.ops[i].uiAttribs && this.ops[i].uiAttribs.subPatch == patchId && this.ops[i].objName == objName)\n        {\n            return this.ops[i];\n        }\n    }\n    return false;\n};\n\nPatch.prototype.deSerialize = function (obj, genIds)\n{\n    if (this.aborted) return;\n\n    var loadingId = this.loading.start(\"core\", \"deserialize\");\n    if (this.onLoadStart) this.onLoadStart();\n\n    this.namespace = obj.namespace || \"\";\n    this.name = obj.name || \"\";\n\n    if (typeof obj === \"string\") obj = JSON.parse(obj);\n    var self = this;\n\n    this.settings = obj.settings;\n\n    function addLink(opinid, opoutid, inName, outName)\n    {\n        var found = false;\n        if (!found)\n        {\n            self.link(self.getOpById(opinid), inName, self.getOpById(opoutid), outName);\n        }\n    }\n\n    var reqs = new Requirements(this);\n\n    // console.log('add ops ',obj.ops);\n    // add ops...\n    for (var iop in obj.ops)\n    {\n        var start = CABLES.now();\n        var opData = obj.ops[iop];\n        var op = null;\n\n        try\n        {\n            if (opData.opId) op = this.addOp(opData.opId, opData.uiAttribs, opData.id);\n            else op = this.addOp(opData.objName, opData.uiAttribs, opData.id);\n        }\n        catch (e)\n        {\n            // console.warn(\"something gone wrong\");\n            console.warn(\"[instancing error] op data:\",opData);\n            throw \"instancing error: \"+opData.objName;\n        }\n\n        reqs.checkOp(op);\n\n        if (op)\n        {\n            if (genIds) op.id = uuid();\n            op.portsInData = opData.portsIn;\n            op._origData = opData;\n\n            for (var ipi in opData.portsIn)\n            {\n                var objPort = opData.portsIn[ipi];\n                var port = op.getPort(objPort.name);\n\n                if (port && (port.uiAttribs.display == \"bool\" || port.uiAttribs.type == \"bool\") && !isNaN(objPort.value)) objPort.value = objPort.value === true;\n                if (port && objPort.value !== undefined && port.type != CONSTANTS.OP.OP_PORT_TYPE_TEXTURE) port.set(objPort.value);\n                if (port && objPort && objPort.animated) port.setAnimated(objPort.animated);\n                if (port && objPort && objPort.anim)\n                {\n                    if (!port.anim) port.anim = new Anim();\n                    if (objPort.anim.loop) port.anim.loop = objPort.anim.loop;\n                    for (var ani in objPort.anim.keys)\n                    {\n                        port.anim.keys.push(new ANIM.Key(objPort.anim.keys[ani]));\n                    }\n                }\n            }\n\n            for (var ipo in opData.portsOut)\n            {\n                var port2 = op.getPort(opData.portsOut[ipo].name);\n                if (port2 && port2.type != CONSTANTS.OP.OP_PORT_TYPE_TEXTURE && opData.portsOut[ipo].hasOwnProperty(\"value\"))\n                {\n                    port2.set(obj.ops[iop].portsOut[ipo].value);\n                }\n            }\n        }\n\n        var timeused = Math.round(100 * (CABLES.now() - start)) / 100;\n        // if(!this.silent && timeused>10)console.warn('long op init ',obj.ops[iop].objName,timeused);\n        // else console.log('op time',obj.ops[iop].objName,timeused);\n    }\n\n    for (var i in this.ops)\n    {\n        if (this.ops[i].onLoadedValueSet)\n        {\n            this.ops[i].onLoadedValueSet(this.ops[i]._origData);\n            this.ops[i].onLoadedValueSet = null;\n            this.ops[i]._origData = null;\n        }\n    }\n\n    // create links...\n    if (obj.ops)\n    {\n        for (iop = 0; iop < obj.ops.length; iop++)\n        {\n            if (obj.ops[iop].portsIn)\n            {\n                for (var ipi2 = 0; ipi2 < obj.ops[iop].portsIn.length; ipi2++)\n                {\n                    if (obj.ops[iop].portsIn[ipi2].links)\n                    {\n                        for (var ili = 0; ili < obj.ops[iop].portsIn[ipi2].links.length; ili++)\n                        {\n                            if (obj.ops[iop].portsIn[ipi2].links[ili])\n                            {\n                                addLink(obj.ops[iop].portsIn[ipi2].links[ili].objIn, obj.ops[iop].portsIn[ipi2].links[ili].objOut, obj.ops[iop].portsIn[ipi2].links[ili].portIn, obj.ops[iop].portsIn[ipi2].links[ili].portOut);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    for (var i in this.ops)\n    {\n        if (this.ops[i].onLoaded)\n        {\n            // TODO: deprecate!!!\n            this.ops[i].onLoaded();\n            this.ops[i].onLoaded = null;\n        }\n    }\n\n    for (var i in this.ops)\n    {\n        if (this.ops[i].init)\n        {\n            this.ops[i].init();\n            this.ops[i].init = null;\n        }\n    }\n\n    if (this.config.variables)\n    {\n        for (var varName in this.config.variables)\n        {\n            this.setVarValue(varName, this.config.variables[varName]);\n            // this._variables = cfg.variables;\n        }\n    }\n\n    setTimeout(\n        () =>\n        {\n            this.loading.finished(loadingId);\n        },\n        100,\n    );\n    if (this.config.onPatchLoaded) this.config.onPatchLoaded();\n\n    if (this.onLoadEnd) this.onLoadEnd();\n};\n\nPatch.prototype.profile = function (enable)\n{\n    this.profiler = new Profiler();\n    for (var i in this.ops)\n    {\n        this.ops[i].profile(enable);\n    }\n};\n\n// ----------------------\n\n/**\n * @type {Object}\n * @name Variable\n * @param {String} name\n * @param {String|Number} value\n * @memberof Patch\n * @constructor\n */\nPatch.Variable = function (name, val)\n{\n    this._name = name;\n    this._changeListeners = [];\n    this.setValue(val);\n};\n\n/**\n * @function Variable.getValue\n * @memberof Patch.Variable\n * @returns {String|Number|Boolean}\n */\n\nPatch.Variable.prototype.getValue = function ()\n{\n    return this._v;\n};\n\n/**\n * @function getName\n * @memberof Patch.Variable\n * @instance\n * @returns {String|Number|Boolean}\n * @function\n */\nPatch.Variable.prototype.getName = function ()\n{\n    return this._name;\n};\n\n/**\n * @function setValue\n * @memberof Patch.Variable\n * @instance\n * @returns {String|Number|Boolean}\n * @function\n */\nPatch.Variable.prototype.setValue = function (v)\n{\n    this._v = v;\n    for (var i = 0; i < this._changeListeners.length; i++)\n    {\n        this._changeListeners[i](v);\n    }\n};\n\n/**\n * function will be called when value of variable is changed\n * @function addListener\n * @memberof Patch.Variable\n * @instance\n * @param {Function} callback\n */\nPatch.Variable.prototype.addListener = function (cb)\n{\n    this._changeListeners.push(cb);\n};\n\n/**\n * remove listener\n * @function removeListener\n * @memberof Patch.Variable\n * @instance\n * @param {Function} callback\n */\nPatch.Variable.prototype.removeListener = function (cb)\n{\n    var ind = this._changeListeners.indexOf(cb);\n    this._changeListeners.splice(ind, 1);\n};\n\n// ------------------\n\n// // old?\n// Patch.prototype.addVariableListener = function(cb) {\n//     this._variableListeners.push(cb);\n// };\n\n// // old?\n// Patch.prototype._callVariableListener = function(cb) {\n//     for (var i = 0; i < this._variableListeners.length; i++) {\n//         this._variableListeners[i]();\n//     }\n// };\n\n/**\n * set variable value\n * @function setVariable\n * @memberof Patch\n * @instance\n * @param {String} name of variable\n * @param {Number|String|Boolean} value\n */\nPatch.prototype.setVariable = function (name, val)\n{\n    if (this._variables.hasOwnProperty(name))\n    {\n        this._variables[name].setValue(val);\n    }\n    else\n    {\n        console.warn(\"variable \" + name + \" not found!\");\n    }\n};\n\n// used internally\nPatch.prototype.setVarValue = function (name, val)\n{\n    if (this._variables.hasOwnProperty(name))\n    {\n        this._variables[name].setValue(val);\n    }\n    else\n    {\n        this._variables[name] = new Patch.Variable(name, val);\n        this.emitEvent(\"variablesChanged\");\n    }\n    return this._variables[name];\n};\n// old?\nPatch.prototype.getVarValue = function (name, val)\n{\n    if (this._variables.hasOwnProperty(name)) return this._variables[name].getValue();\n};\n\n/**\n * @function getVar\n * @memberof Patch\n * @instance\n * @param {String} name\n * @return {Variable} variable\n */\nPatch.prototype.getVar = function (name)\n{\n    if (this._variables.hasOwnProperty(name)) return this._variables[name];\n};\n\n/**\n * @function\n * @memberof Patch\n * @instance\n */\nPatch.prototype.getVars = function ()\n{\n    return this._variables;\n};\n\n/**\n * @function getVars\n * @memberof Patch\n * @instance\n * @return {Array<Variable>} variables\n * @function\n */\nPatch.prototype.getVars = function ()\n{\n    return this._variables;\n};\n\nPatch.prototype.exitError = function (errorId, errorMessage)\n{\n    if (this && this.config && this.config.onError)\n    {\n        this.config.onError(errorId, errorMessage);\n        this.aborted = true;\n    }\n};\n\n/**\n * @function preRenderOps\n * @memberof Patch\n * @instance\n * @description invoke pre rendering of ops\n * @function\n */\nPatch.prototype.preRenderOps = function ()\n{\n    console.log(\"prerendering...\");\n    var stopwatch = null;\n    if (CABLES.StopWatch) stopwatch = new CABLES.StopWatch(\"prerendering\");\n\n    for (var i = 0; i < this.ops.length; i++)\n    {\n        if (this.ops[i].preRender)\n        {\n            this.ops[i].preRender();\n            console.log(\"prerender \" + this.ops[i].objName);\n        }\n    }\n\n    if (stopwatch) stopwatch.stop(\"prerendering\");\n};\n\n/**\n * @function dispose\n * @memberof Patch\n * @instance\n * @description stop, dispose and cleanup patch\n */\nPatch.prototype.dispose = function ()\n{\n    this.pause();\n    this.clear();\n};\n\n/**\n * remove an eventlistener\n * @instance\n * @function addEventListener\n * @param {String} name of event\n * @param {function} callback\n */\n\n/**\n * remove an eventlistener\n * @instance\n * @function removeEventListener\n * @param {String} name of event\n * @param {function} callback\n */\n\n/**\n * op added to patch event\n * @event onOpAdd\n *\n * @memberof Patch\n * @type {Object}\n * @property {Op} op new op\n */\n\n/**\n * op deleted from patch\n * @event onOpDelete\n * @memberof Patch\n * @type {Object}\n * @property {Op} op that will be deleted\n */\n\n/**\n * link event - two ports will be linked\n * @event onLink\n * @memberof Patch\n * @type {Object}\n * @property {Port} port1\n * @property {Port} port2\n */\n\n/**\n * unlink event - a link was deleted\n * @event onUnLink\n * @memberof Patch\n * @type {Object}\n */\n\n/**\n * variables has been changed / a variable has been added to the patch\n * @event variablesChanged\n * @memberof Patch\n * @type {Object}\n * @property {Port} port1\n * @property {Port} port2\n */\n\n/**\n * configuration object for loading a patch\n * @typedef {Object} PatchConfig\n * @hideconstructor\n * @property {String} [prefixAssetPath=''] path to assets\n * @property {String} [glCanvasId='glcanvas'] dom element id of canvas element\n * @property {Function} [onError=null] called when an error occurs\n * @property {Function} [onFinishedLoading=null] called when patch finished loading all assets\n * @property {Function} [onFirstFrameRendered=null] called when patch rendered it's first frame\n * @property {Boolean} [glCanvasResizeToWindow=false] resize canvas automatically to window size\n * @property {Boolean} [doRequestAnimation=true] do requestAnimationFrame set to false if you want to trigger exec() from outside (only do if you know what you are doing)\n * @property {Boolean} [clearCanvasColor=true] clear canvas in transparent color every frame\n * @property {Boolean} [clearCanvasDepth=true] clear depth every frame\n * @property {Boolean} [silent=false]\n * @property {Number} [fpsLimit=0] 0 for maximum possible frames per second\n * @property {String} [glslPrecision='mediump'] default precision for glsl shader\n *\n */\n\nexport default Patch;\n"
            },
            {
              "id": null,
              "identifier": "/home/tom/cables_dev/cables/src/core/embedding.js",
              "name": "./src/core/embedding.js",
              "index": 10,
              "index2": 32,
              "size": 1362,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
              ],
              "issuer": "/home/tom/cables_dev/cables/src/core/index.js",
              "issuerId": null,
              "issuerName": "./src/core/index.js",
              "issuerPath": [
                {
                  "id": 0,
                  "identifier": "multi /home/tom/cables_dev/cables/src/core/index.js",
                  "name": "multi ./src/core/index.js"
                },
                {
                  "id": null,
                  "identifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "name": "./src/core/index.js"
                }
              ],
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "assets": [
              ],
              "reasons": [
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "module": "./src/core/index.js",
                  "moduleName": "./src/core/index.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./embedding",
                  "loc": "8:0-36"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "module": "./src/core/index.js",
                  "moduleName": "./src/core/index.js",
                  "type": "harmony import specifier",
                  "userRequest": "./embedding",
                  "loc": "25:8-13"
                }
              ],
              "usedExports": [
                "EMBED"
              ],
              "providedExports": [
                "EMBED"
              ],
              "optimizationBailout": [
              ],
              "depth": 2,
              "source": "import Patch from \"./core_patch\";\nimport { generateUUID } from \"./utils\";\n\nconst EMBED = {};\n\n/**\n * add patch into html element (will create canvas and set size to fill containerElement)\n * @name CABLES.EMBED#addPatch\n * @param {object|string} containerElement dom element or id of element\n * @param {options} patch options\n * @function\n */\nEMBED.addPatch = function (_element, options)\n{\n    var el = _element;\n    var id = generateUUID();\n    if (typeof _element == \"string\")\n    {\n        id = _element;\n        el = document.getElementById(id);\n\n        if (!el)\n        {\n            console.error(id + \" Polyshape Container Element not found!\");\n            return;\n        }\n    }\n\n    var canvEl = document.createElement(\"canvas\");\n    canvEl.id = \"glcanvas_\" + id;\n    canvEl.width = el.clientWidth;\n    canvEl.height = el.clientHeight;\n\n    window.addEventListener(\n        \"resize\",\n        function ()\n        {\n            this.setAttribute(\"width\", el.clientWidth);\n            this.height = el.clientHeight;\n        }.bind(canvEl),\n    );\n\n    el.appendChild(canvEl);\n\n    options = options || {};\n    options.glCanvasId = canvEl.id;\n\n    if (!options.onError)\n    {\n        options.onError = function (err)\n        {\n            console.log(err);\n        };\n    }\n\n    CABLES.patch = new Patch(options);\n    return canvEl;\n};\n\nexport { EMBED };\n"
            },
            {
              "id": null,
              "identifier": "/home/tom/cables_dev/cables/src/core/glpatch.js",
              "name": "./src/core/glpatch.js",
              "index": 35,
              "index2": 33,
              "size": 8817,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
              ],
              "issuer": "/home/tom/cables_dev/cables/src/core/index.js",
              "issuerId": null,
              "issuerName": "./src/core/index.js",
              "issuerPath": [
                {
                  "id": 0,
                  "identifier": "multi /home/tom/cables_dev/cables/src/core/index.js",
                  "name": "multi ./src/core/index.js"
                },
                {
                  "id": null,
                  "identifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "name": "./src/core/index.js"
                }
              ],
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "assets": [
              ],
              "reasons": [
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "module": "./src/core/index.js",
                  "moduleName": "./src/core/index.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./glpatch",
                  "loc": "12:0-34"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "module": "./src/core/index.js",
                  "moduleName": "./src/core/index.js",
                  "type": "harmony import specifier",
                  "userRequest": "./glpatch",
                  "loc": "32:8-13"
                }
              ],
              "usedExports": [
                "GLGUI"
              ],
              "providedExports": [
                "GLGUI"
              ],
              "optimizationBailout": [
              ],
              "depth": 2,
              "source": "\n// SHOULD BE MOVED TO UI !!\nimport { Shader } from \"./cgl/cgl_shader\";\nimport { Uniform } from \"./cgl/cgl_shader_uniform\";\nimport { Geometry } from \"./cgl/cgl_geom\";\nimport { Mesh } from \"./cgl/cgl_mesh\";\n\nimport { CONSTANTS } from \"./constants\";\n\nconst GLGUI = {};\n\nGLGUI.LineDrawer=function(cgl,options)\n{\n    this._num=100000;\n    this._counter=0;\n\n    this._positions=new Float32Array(3*this._num);\n    this._colors=new Float32Array(4*this._num);\n}\n\n\n\n// ---------------------------------------------------------------\n\n\n\nGLGUI.RectInstancer=function(cgl,options)\n{\n    this._counter=0;\n    this._num=100000;\n    this._needsRebuild=true;\n\n    this._positions=new Float32Array(3*this._num);\n    this._colors=new Float32Array(4*this._num);\n    this._sizes=new Float32Array(2*this._num);\n\n    this._shader=new Shader(cgl,'rectinstancer');\n    this._shader.setSource(''\n        .endl()+'IN vec3 vPosition;'\n        .endl()+'IN vec3 instPos;'\n        .endl()+'IN vec4 instCol;'\n        .endl()+'IN vec2 instSize;'\n        .endl()+'OUT vec4 col;'\n        .endl()+'UNI float zoom,resX,resY,scrollX,scrollY;'\n\n        .endl()+'void main()'\n        .endl()+'{'\n        .endl()+'    vec3 pos=vPosition;'\n        .endl()+'    pos.xy*=instSize;'\n\n        .endl()+'    pos.x+=scrollX;'\n        .endl()+'    pos.y+=scrollY;'\n\n        .endl()+'    pos.x+=instPos.x;'\n        .endl()+'    pos.y+=instPos.y;'\n\n        .endl()+'    pos.y=0.0-pos.y;'\n\n        .endl()+'    col=instCol;'\n\n        .endl()+'    gl_Position = vec4(pos*(1.0/zoom),1.0);'\n        .endl()+'}'\n        , 'IN vec4 col;void main(){outColor=vec4(col.rgb,1.0);}');\n\n    this._uniZoom=new Uniform(this._shader,'f','zoom',0),\n    this._uniResX=new Uniform(this._shader,'f','resX',500),\n    this._uniResY=new Uniform(this._shader,'f','resY',500),\n    this._uniscrollX=new Uniform(this._shader,'f','scrollX',0),\n    this._uniscrollY=new Uniform(this._shader,'f','scrollY',0);\n\n    this._geom=new Geometry(\"rectinstancer\");\n    this._geom.vertices = new Float32Array([1,1,0, 0,1,0, 1,0,0, 0,0,0]);\n    this._geom.verticesIndices = new Float32Array([ 2, 1, 0,  3, 1, 2 ]);\n\n    this._mesh=new Mesh(cgl,this._geom);\n    this._mesh.numInstances=this._num;\n\n    var i=0;\n    for(i=0;i<2*this._num;i++) this._sizes[i]=0;//Math.random()*61;\n    for(i=0;i<3*this._num;i++) this._positions[i]=0;//Math.random()*60;\n    for(i=0;i<4*this._num;i++) this._colors[i]=1;//Math.random();\n}\n\nGLGUI.RectInstancer.prototype.dispose=function()\n{\n\n}\n\nGLGUI.RectInstancer.prototype.render=function(resX,resY,scrollX,scrollY,zoom)\n{\n    this._uniResX.set(resX);\n    this._uniResY.set(resY);\n    this._uniscrollX.set(scrollX);\n    this._uniscrollY.set(scrollY);\n    this._uniZoom.set(zoom);\n\n    if(this._needsRebuild)this.rebuild();\n\n    this._mesh.render(this._shader);\n}\n\nGLGUI.RectInstancer.prototype.rebuild=function()\n{\n    this._mesh.addAttribute('instPos',this._positions,3,{instanced:true});\n    this._mesh.addAttribute('instCol',this._colors,4,{instanced:true});\n    this._mesh.addAttribute('instSize',this._sizes,2,{instanced:true});\n    this._needsRebuild=false;\n}\n\nGLGUI.RectInstancer.prototype.getIndex=function()\n{\n    this._counter++;\n    // console.log(\"inst counter\",this._counter);\n    return this._counter;\n}\n\nGLGUI.RectInstancer.prototype.setPosition=function(idx,x,y)\n{\n    this._positions[idx*3+0]=x;\n    this._positions[idx*3+1]=y;\n    this._needsRebuild=true;\n}\n\nGLGUI.RectInstancer.prototype.setSize=function(idx,x,y)\n{\n    this._sizes[idx*2+0]=x;\n    this._sizes[idx*2+1]=y;\n    this._needsRebuild=true;\n}\n\nGLGUI.RectInstancer.prototype.setColor=function(idx,r,g,b)\n{\n    this._colors[idx*4+0]=r;\n    this._colors[idx*4+1]=g;\n    this._colors[idx*4+2]=b;\n    this._colors[idx*4+3]=1;\n    this._needsRebuild=true;\n}\n\n\n\n\n// ---------------------------------------\n\nGLGUI.GlRect=function(instancer,options)\n{\n    options=options||{};\n    this._rectInstancer=instancer;\n    this._attrIndex=instancer.getIndex();\n    this._parent=options.parent||null;\n    this.childs=[];\n}\n\nGLGUI.GlRect.prototype.addChild=function(c)\n{\n    this.childs.push(c);\n}\n\nGLGUI.GlRect.prototype.setSize=function(x,y)\n{\n    this._rectInstancer.setSize(this._attrIndex,x,y);\n}\n\nGLGUI.GlRect.prototype.setColor=function(r,g,b)\n{\n    this._rectInstancer.setColor(this._attrIndex,r,g,b);\n}\n\nGLGUI.GlRect.prototype.setPosition=function(_x,_y)\n{\n    this.x=_x;\n    this.y=_y;\n\n    var x=this.x;\n    var y=this.y;\n    if(this._parent)\n    {\n        x+=this._parent.x;\n        y+=this._parent.y;\n    }\n\n    this._rectInstancer.setPosition(this._attrIndex,x,y);\n\n    for(var i=0;i<this.childs.length;i++)\n        this.childs[i].setPosition(this.childs[i].x,this.childs[i].y);\n}\n\n\n\n\n\n\n\n// ------------------------------------\n\nGLGUI.OP_MIN_WIDTH=100;\n\nGLGUI.GlOp=function(instancer,op)\n{\n    this._op=op;\n    this._instancer=instancer;\n    this._glRectBg=new GLGUI.GlRect(instancer);\n    // this._glRectBg.setPosition(0,0);\n    this._glRectBg.setSize(100,30);\n    this._glRectBg.setColor(0.1,0.1,0.1);\n    this._portRects=[];\n\n    this.updatePosition();\n\n    for(var i=0;i<this._op.portsIn.length;i++)\n        this._setupPort(i,this._op.portsIn[i]);\n\n    for(var i=0;i<this._op.portsOut.length;i++)\n        this._setupPort(i,this._op.portsOut[i]);\n\n    const portsSize=Math.max(this._op.portsIn.length,this._op.portsOut.length)*10;\n\n    this._glRectBg.setSize(Math.max(GLGUI.OP_MIN_WIDTH,portsSize),30);\n}\n\nGLGUI.GlOp.prototype.dispose=function()\n{\n    if(this._glRectBg)\n    {\n        this._glRectBg.setSize(0,0);\n        this._glRectBg.setPosition(0,0);\n    }\n    for(var i=0;i<this._portRects.length;i++)\n    {\n        this._portRects[i].setSize(0,0);\n        this._portRects[i].setPosition(0,0);\n    }\n\n    this._op=null;\n    this._portRects.length=0;\n    this._glRectBg=null;\n    this._instancer=null;\n}\n\nGLGUI.GlOp.prototype._setupPort=function(i,p)\n{\n    var r=new GLGUI.GlRect(this._instancer,{\"parent\":this._glRectBg});\n    r.setSize(7,5);\n\n    if(p.type == CONSTANTS.OP.OP_PORT_TYPE_VALUE) r.setColor(0,1,0.7);\n        else if(p.type == CONSTANTS.OP.OP_PORT_TYPE_FUNCTION) r.setColor(1,1,0);\n        else if(p.type == CONSTANTS.OP.OP_PORT_TYPE_OBJECT) r.setColor(1,0,1);\n        else if(p.type == CONSTANTS.OP.OP_PORT_TYPE_ARRAY) r.setColor(0,0.3,1);\n        else if(p.type == CONSTANTS.OP.OP_PORT_TYPE_STRING) r.setColor(1,0.3,0);\n        else if(p.type == CONSTANTS.OP.OP_PORT_TYPE_DYNAMIC) r.setColor(1,1,1);\n\n    var y=0;\n    if(p.direction==1)y=30-5;\n    r.setPosition(i*10,y);\n    this._glRectBg.addChild(r);\n    this._portRects.push(r);\n}\n\n\n\nGLGUI.GlOp.prototype.updatePosition=function()\n{\n    if(!this._glRectBg)\n    {\n        console.log(\"no this._glRectBg\");\n        return;\n    }\n    this._glRectBg.setPosition(this._op.uiAttribs.translate.x,this._op.uiAttribs.translate.y);\n}\n\nGLGUI.GlOp.prototype.getOp=function()\n{\n    return this._op;\n}\n\nGLGUI.GlOp.prototype.update=function()\n{\n    this.updatePosition();\n}\n\n\n\n\n// ------------------------------------\n\n\n\n\n\nGLGUI.GlPatch=function(patch)\n{\n    this._patch=patch;\n    this._glOps=[];\n    this._rectInstancer=new GLGUI.RectInstancer(this._patch.cgl);\n    this._rectInstancer.rebuild();\n\n    patch.addEventListener(\"onOpAdd\",this.addOp.bind(this));\n    patch.addEventListener(\"onOpDelete\",this.deleteOp.bind(this));\n}\n\nGLGUI.GlPatch.prototype.getOpAt=function(x,y)\n{\n}\n\nGLGUI.GlPatch.prototype.deleteOp=function(op)\n{\n    for(var i=0;i<this._glOps.length;i++)\n    {\n        if(this._glOps[i].getOp()==op)\n        {\n            var delOp=this._glOps[i];\n            this._glOps[i].getOp().removeEventListener(\"onUiAttribsChange\",this._glOps[i].update);\n            this._glOps.slice(i,1);\n            delOp.dispose();\n            return;\n        }\n    }\n}\n\nGLGUI.GlPatch.prototype.addOp=function(op)\n{\n    console.log(\"OP ADDEDDDDDD\");\n    const glOp=new GLGUI.GlOp(this._rectInstancer,op);\n    this._glOps.push(glOp);\n\n    op.addEventListener(\"onUiAttribsChange\",glOp.update.bind(glOp));\n}\n\nGLGUI.GlPatch.prototype.render=function(resX,resY,scrollX,scrollY,zoom)\n{\n    this._rectInstancer.render(resX,resY,scrollX,scrollY,zoom);\n}\n\nGLGUI.GlPatch.prototype.dispose=function()\n{\n    while(this._glOps.length>0)\n    {\n        this._glOps[0].dispose();\n        this._glOps.splice(0,1);\n    }\n\n    if(this._rectInstancer)this._rectInstancer.dispose();\n}\n\nGLGUI.GlPatch.prototype.reset=function()\n{\n    this._rectInstancer=new GLGUI.RectInstancer(this._patch.cgl);\n    this._rectInstancer.rebuild();\n\n    this.dispose();\n\n    if(this._glOps.length==0)\n    {\n        for(var i=0;i<this._patch.ops.length;i++)\n        {\n            this.addOp(this._patch.ops[i]);\n        }\n    }\n\n    for(var i=0;i<this._glOps.length;i++)\n    {\n        this._glOps[i].updatePosition();\n    }\n\n    this._rectInstancer.rebuild();\n};\n\n\nexport { GLGUI };\n"
            },
            {
              "id": null,
              "identifier": "/home/tom/cables_dev/cables/src/core/webaudio.js",
              "name": "./src/core/webaudio.js",
              "index": 36,
              "index2": 34,
              "size": 16631,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
              ],
              "issuer": "/home/tom/cables_dev/cables/src/core/index.js",
              "issuerId": null,
              "issuerName": "./src/core/index.js",
              "issuerPath": [
                {
                  "id": 0,
                  "identifier": "multi /home/tom/cables_dev/cables/src/core/index.js",
                  "name": "multi ./src/core/index.js"
                },
                {
                  "id": null,
                  "identifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "name": "./src/core/index.js"
                }
              ],
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "assets": [
              ],
              "reasons": [
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "module": "./src/core/index.js",
                  "moduleName": "./src/core/index.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./webaudio",
                  "loc": "15:0-38"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "module": "./src/core/index.js",
                  "moduleName": "./src/core/index.js",
                  "type": "harmony import specifier",
                  "userRequest": "./webaudio",
                  "loc": "37:8-16"
                }
              ],
              "usedExports": [
                "WEBAUDIO"
              ],
              "providedExports": [
                "WEBAUDIO"
              ],
              "optimizationBailout": [
              ],
              "depth": 2,
              "source": "import { CONSTANTS } from \"./constants\";\n\nconst WEBAUDIO = {};\n\nWEBAUDIO.toneJsInitialized = false;\n\n/*\n * External JSDoc definitions\n */\n\n/**\n * Part of the Web Audio API, the AudioBuffer interface represents a short audio asset residing in memory.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/AudioBuffer}\n */\n\n/**\n * Part of the Web Audio API, the AudioNode interface is a generic interface for representing an audio processing module.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/AudioNode}\n */\n\n/**\n * The AudioContext interface represents an audio-processing graph built from audio modules linked together\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/AudioContext}\n */\n\n/**\n * Checks if a global audio context has been created and creates\n * it if necessary. This audio context can be used for native Web Audio as well as Tone.js ops.\n * Associates the audio context with Tone.js if it is being used\n * @param {CABLES.Op} op - The operator which needs the Audio Context\n */\nWEBAUDIO.createAudioContext = function (op)\n{\n    window.AudioContext = window.AudioContext || window.webkitAudioContext;\n    if (window.AudioContext)\n    {\n        if (!window.audioContext)\n        {\n            window.audioContext = new AudioContext();\n        }\n        // check if tone.js lib is being used\n        if (window.Tone && !WEBAUDIO.toneJsInitialized)\n        {\n            // set current audio context in tone.js\n            Tone.setContext(window.audioContext);\n            WEBAUDIO.toneJsInitialized = true;\n        }\n    }\n    else\n    {\n        op.patch.config.onError(\"NO_WEBAUDIO\", \"Web Audio is not supported in this browser.\");\n        return;\n    }\n    return window.audioContext;\n};\n\n/**\n * Returns the audio context.\n * Before `createAudioContext` must have been called at least once.\n * It most cases you should use `createAudioContext`, which just returns the audio context\n * when it has been created already.\n */\nWEBAUDIO.getAudioContext = function ()\n{\n    return window.audioContext;\n};\n\n/**\n * Creates an audio in port for the op with name `portName`\n * When disconnected it will disconnect the previous connected audio node\n * from the op's audio node.\n * @param {CABLES.Op} op - The operator to create the audio port in\n * @param {string} portName - The name of the port\n * @param {AudioNode} audioNode - The audionode incoming connections should connect to\n * @param {number} [inputChannelIndex=0] - If the audio node has multiple inputs, this is the index of the input channel to connect to\n * @returns {CABLES.Port|undefined} - The newly created audio in port or `undefined` if there was an error\n */\nWEBAUDIO.createAudioInPort = function (op, portName, audioNode, inputChannelIndex)\n{\n    if (!op || !portName || !audioNode)\n    {\n        var msg = \"ERROR: createAudioInPort needs three parameters, op, portName and audioNode\";\n        op.log(msg);\n        throw new Error(msg);\n        // return;\n    }\n    if (!inputChannelIndex)\n    {\n        inputChannelIndex = 0;\n    }\n    op.webAudio = op.webAudio || {};\n    op.webAudio.audioInPorts = op.webAudio.audioInPorts || [];\n    var port = op.inObject(portName);\n    port.webAudio = {};\n    port.webAudio.previousAudioInNode = null;\n    port.webAudio.audioNode = audioNode;\n\n    op.webAudio.audioInPorts[portName] = port;\n\n    port.onChange = function ()\n    {\n        var audioInNode = port.get();\n        // when port disconnected, disconnect audio nodes\n        if (!audioInNode)\n        {\n            if (port.webAudio.previousAudioInNode)\n            {\n                try\n                {\n                    port.webAudio.previousAudioInNode.disconnect(port.webAudio.audioNode, 0, inputChannelIndex);\n                }\n                catch (e)\n                {\n                    try\n                    {\n                        port.webAudio.previousAudioInNode.disconnect(port.webAudio.audioNode);\n                    }\n                    catch (e)\n                    {\n                        op.log(\n                            \"Disconnecting audio node with in/out port index, as well as without in/out-port-index did not work \",\n                            e,\n                        );\n                        if (e.printStackTrace)\n                        {\n                            e.printStackTrace();\n                        }\n                        throw e;\n                    }\n                }\n            }\n        }\n        else\n        {\n            try\n            {\n                audioInNode.connect(port.webAudio.audioNode, 0, inputChannelIndex);\n            }\n            catch (e)\n            {\n                op.log(\"Error: Failed to connect web audio node!\", e);\n                op.log(\"port.webAudio.audioNode\", port.webAudio.audioNode);\n                op.log(\"audioInNode: \", audioInNode);\n                op.log(\"inputChannelIndex:\", inputChannelIndex);\n                op.log(\"audioInNode.connect: \", audioInNode.connect);\n                throw e;\n            }\n        }\n        port.webAudio.previousAudioInNode = audioInNode;\n    };\n    // TODO: Maybe add subtype to audio-node-object?\n    return port;\n};\n\n/**\n * Sometimes it is necessary to replace a node of a port, if so all\n * connections to this node must be disconnected and connections to the new\n * node must be made.\n * Can be used for both Audio ports as well as AudioParam ports\n * if used with an AudioParam pass e.g. `synth.frequency` as newNode\n * @param {CABLES.Port} port - The port where the audio node needs to be replaced\n */\nWEBAUDIO.replaceNodeInPort = function (port, oldNode, newNode)\n{\n    var connectedNode = port.webAudio.previousAudioInNode;\n    // check if connected\n    if (connectedNode && connectedNode.disconnect)\n    {\n        try\n        {\n            connectedNode.disconnect(oldNode);\n        }\n        catch (e)\n        {\n            if (e.printStackTrace)\n            {\n                e.printStackTrace();\n            }\n            throw new Error(\"replaceNodeInPort: Could not disconnect old audio node. \" + e.name + \" \" + e.message);\n        }\n        port.webAudio.audioNode = newNode;\n        try\n        {\n            connectedNode.connect(newNode);\n        }\n        catch (e)\n        {\n            if (e.printStackTrace)\n            {\n                e.printStackTrace();\n            }\n            throw new Error(\"replaceNodeInPort: Could not connect to new node. \" + e.name + \" \" + e.message);\n        }\n    }\n};\n\n/**\n * Creates an audio out port which takes care of (dis-)connecting on it’s own\n * @param {CABLES.op} op - The op to create an audio out port for\n * @param {string} portName - The name of the port to be created\n * @param {AudioNode} audioNode - The audio node to link to the port\n * @returns {(CABLES.Port|undefined)} - The newly created audio out port or `undefined` if there was an error\n */\nWEBAUDIO.createAudioOutPort = function (op, portName, audioNode)\n{\n    if (!op || !portName || !audioNode)\n    {\n        var msg = \"ERROR: createAudioOutPort needs three parameters, op, portName and audioNode\";\n        op.log(msg);\n        throw new Error(msg);\n    }\n\n    var port = op.outObject(portName);\n    // TODO: Maybe add subtype to audio-node-object?\n    port.set(audioNode);\n    return port;\n};\n\n/**\n * Creates an audio param in port for the op with name portName.\n * The port accepts other audio nodes as signals as well as values (numbers)\n * When the port is disconnected it will disconnect the previous connected audio node\n * from the op's audio node and restore the number value set before.\n * @param {CABLES.Op} op - The operator to create an audio param input port for\n * @param {string} portName - The name of the port to create\n * @returns {(CABLES.Port|undefined)} - The newly created port, which takes care of (dis-)connecting on its own, or `undefined` if there was an error\n */\nWEBAUDIO.createAudioParamInPort = function (op, portName, audioNode, options, defaultValue)\n{\n    if (!op || !portName || !audioNode)\n    {\n        op.log(\"ERROR: createAudioParamInPort needs three parameters, op, portName and audioNode\");\n        if (op && op.name) op.log(\"opname: \", op.name);\n        op.log(\"portName\", portName);\n        op.log(\"audioNode: \", audioNode);\n        return;\n    }\n    op.webAudio = op.webAudio || {};\n    op.webAudio.audioInPorts = op.webAudio.audioInPorts || [];\n    // var port = op.inObject(portName);\n    var port = op.inDynamic(\n        portName,\n        [CONSTANTS.OP.OP_PORT_TYPE_VALUE, CONSTANTS.OP.OP_PORT_TYPE_OBJECT],\n        options,\n        defaultValue,\n    );\n    port.webAudio = {};\n    port.webAudio.previousAudioInNode = null;\n    port.webAudio.audioNode = audioNode;\n\n    op.webAudio.audioInPorts[portName] = port;\n\n    // port.onLinkChanged = function() {\n    //   op.log(\"onLinkChanged\");\n    //   if(port.isLinked()) {\n    //\n    //       if(port.links[0].portOut.type === CABLES.CONSTANTS.OP.OP_PORT_TYPE_) { // value\n    //\n    //       } else if(port.links[0].portOut.type === CABLES.CONSTANTS.OP.OP_PORT_TYPE_OBJECT) { // object\n    //\n    //       }\n    //   } else { // unlinked\n    //\n    //   }\n    // };\n\n    port.onChange = function ()\n    {\n        var audioInNode = port.get();\n        var node = port.webAudio.audioNode;\n        var audioCtx = WEBAUDIO.getAudioContext();\n\n        if (audioInNode != undefined)\n        {\n            if (typeof audioInNode === \"object\" && audioInNode.connect)\n            {\n                try\n                {\n                    audioInNode.connect(node);\n                }\n                catch (e)\n                {\n                    op.log(\"Could not connect audio node: \", e);\n                    if (e.printStackTrace)\n                    {\n                        e.printStackTrace();\n                    }\n                    throw e;\n                }\n                port.webAudio.previousAudioInNode = audioInNode;\n            }\n            else\n            {\n                // tone.js audio param\n                if (node._param && node._param.minValue && node._param.maxValue)\n                {\n                    if (audioInNode >= node._param.minValue && audioInNode <= node._param.maxValue)\n                    {\n                        try\n                        {\n                            if (node.setValueAtTime)\n                            {\n                                node.setValueAtTime(audioInNode, audioCtx.currentTime);\n                            }\n                            else\n                            {\n                                node.value = audioInNode;\n                            }\n                        }\n                        catch (e)\n                        {\n                            op.log(\"Possible AudioParam problem with tone.js op: \", e);\n                            if (e.printStackTrace)\n                            {\n                                e.printStackTrace();\n                            }\n                            throw e;\n                        }\n                    }\n                    else\n                    {\n                        op.log(\"Warning: The value for an audio parameter is out of range!\");\n                    }\n                } // native Web Audio param\n                else if (node.minValue && node.maxValue)\n                {\n                    if (audioInNode >= node.minValue && audioInNode <= node.maxValue)\n                    {\n                        try\n                        {\n                            if (node.setValueAtTime)\n                            {\n                                node.setValueAtTime(audioInNode, audioCtx.currentTime);\n                            }\n                            else\n                            {\n                                node.value = audioInNode;\n                            }\n                        }\n                        catch (e)\n                        {\n                            op.log(\n                                \"AudioParam has minValue / maxValue defined, and value is in range, but setting the value failed! \",\n                                e,\n                            );\n                            if (e.printStackTrace)\n                            {\n                                e.printStackTrace();\n                            }\n                            throw e;\n                        }\n                    }\n                    else\n                    {\n                        op.log(\"Warning: The value for an audio parameter is out of range!\");\n                    }\n                } // no min-max values, try anyway\n                else\n                {\n                    try\n                    {\n                        if (node.setValueAtTime)\n                        {\n                            node.setValueAtTime(audioInNode, audioCtx.currentTime);\n                        }\n                        else\n                        {\n                            node.value = audioInNode;\n                        }\n                    }\n                    catch (e)\n                    {\n                        op.log(\"Possible AudioParam problem (without minValue / maxValue): \", e);\n                        if (e.printStackTrace)\n                        {\n                            e.printStackTrace();\n                        }\n                        throw e;\n                    }\n                }\n\n                if (port.webAudio.previousAudioInNode && port.webAudio.previousAudioInNode.disconnect)\n                {\n                    try\n                    {\n                        port.webAudio.previousAudioInNode.disconnect(node);\n                    }\n                    catch (e)\n                    {\n                        op.log(\"Could not disconnect previous audio node: \", e);\n                        throw e;\n                    }\n                    port.webAudio.previousAudioInNode = undefined;\n                }\n            }\n        }\n        else\n        {\n            // disconnected\n            if (port.webAudio.previousAudioInNode)\n            {\n            }\n        }\n    };\n    return port;\n};\n\n/**\n * Callback when an audio file finished loading\n *\n * @callback loadAudioFileFinishedCallback\n */\n\n/**\n * Callback when a request to load an audio file did not succeed.\n *\n * @callback loadAudioFileErrorCallback\n * @param {string} err - The error which occured while loading the audio file\n */\n\n/**\n * Loads an audio file and updates the loading indicators when cables is run in the editor.\n * @param {CABLES.Patch} patch - The cables patch, when called from inside an op this is `op.patch`\n * @param {string} url - The url of the audio file to load\n * @param {loadAudioFileFinishedCallback} onFinished - The callback to be called when the loading is finished, passes the AudioBuffer\n * @param {loadAudioFileErrorCallback} onError - The callback when there was an error loading the file, the rror message is passed\n * @see {@link https://developer.mozilla.org/de/docs/Web/API/AudioContext/decodeAudioData}\n */\nWEBAUDIO.loadAudioFile = function (patch, url, onFinished, onError)\n{\n    var audioContext = WEBAUDIO.createAudioContext();\n    var loadingId = patch.loading.start(\"audio\", url);\n    if (CABLES.UI) gui.jobs().start({ id: \"loadaudio\" + loadingId, title: \" loading audio (\" + url + \")\" });\n    var request = new XMLHttpRequest();\n    if (!url)\n    {\n        return;\n    }\n    request.open(\"GET\", url, true);\n    request.responseType = \"arraybuffer\";\n    // TODO: maybe crossorigin stuff needed?\n    // Decode asynchronously\n    request.onload = function ()\n    {\n        patch.loading.finished(loadingId);\n        if (CABLES.UI) gui.jobs().finish(\"loadaudio\" + loadingId);\n        audioContext.decodeAudioData(request.response, onFinished, onError);\n    };\n    request.send();\n};\n\n/**\n * Checks if the passed time is a valid time to be used in any of the Tone.js ops.\n * @param {(string|number)} t - The time to check\n * @returns {boolean} - True if time is valid, false if not\n */\nWEBAUDIO.isValidToneTime = function (t)\n{\n    try\n    {\n        var time = new Tone.Time(t);\n    }\n    catch (e)\n    {\n        return false;\n    }\n    return true;\n};\n\n/**\n * Checks if the passed note is a valid note to be used with Tone.js\n * @param {string} note - The note to be checked, e.g. `\"C4\"`\n * @returns {boolean} - True if the note is a valid note, false otherwise\n */\nWEBAUDIO.isValidToneNote = function (note)\n{\n    try\n    {\n        Tone.Frequency(note);\n    }\n    catch (e)\n    {\n        return false;\n    }\n    return true;\n};\n\nexport { WEBAUDIO };\n"
            },
            {
              "id": null,
              "identifier": "/home/tom/cables_dev/cables/src/core/sessionvar.js",
              "name": "./src/core/sessionvar.js",
              "index": 37,
              "index2": 35,
              "size": 579,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
              ],
              "issuer": "/home/tom/cables_dev/cables/src/core/index.js",
              "issuerId": null,
              "issuerName": "./src/core/index.js",
              "issuerPath": [
                {
                  "id": 0,
                  "identifier": "multi /home/tom/cables_dev/cables/src/core/index.js",
                  "name": "multi ./src/core/index.js"
                },
                {
                  "id": null,
                  "identifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "name": "./src/core/index.js"
                }
              ],
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "assets": [
              ],
              "reasons": [
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "module": "./src/core/index.js",
                  "moduleName": "./src/core/index.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./sessionvar",
                  "loc": "16:0-40"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "module": "./src/core/index.js",
                  "moduleName": "./src/core/index.js",
                  "type": "harmony import specifier",
                  "userRequest": "./sessionvar",
                  "loc": "38:8-16"
                }
              ],
              "usedExports": [
                "Variable"
              ],
              "providedExports": [
                "Variable"
              ],
              "optimizationBailout": [
              ],
              "depth": 2,
              "source": "// todo: old... remove this from ops...\n\n// var CABLES=CABLES || {};\n\nconst Variable = function ()\n{\n    var value = null;\n    var changedCallbacks = [];\n\n    this.onChanged = function (f)\n    {\n        changedCallbacks.push(f);\n    };\n\n    this.getValue = function ()\n    {\n        return value;\n    };\n\n    this.setValue = function (v)\n    {\n        value = v;\n        emitChanged();\n    };\n\n    var emitChanged = function ()\n    {\n        for (var i = 0; i < changedCallbacks.length; i++)\n        {\n            changedCallbacks[i]();\n        }\n    };\n};\n\nexport { Variable };\n"
            },
            {
              "id": null,
              "identifier": "/home/tom/cables_dev/cables/src/core/patchConnection.js",
              "name": "./src/core/patchConnection.js",
              "index": 38,
              "index2": 36,
              "size": 5144,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
              ],
              "issuer": "/home/tom/cables_dev/cables/src/core/index.js",
              "issuerId": null,
              "issuerName": "./src/core/index.js",
              "issuerPath": [
                {
                  "id": 0,
                  "identifier": "multi /home/tom/cables_dev/cables/src/core/index.js",
                  "name": "multi ./src/core/index.js"
                },
                {
                  "id": null,
                  "identifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "name": "./src/core/index.js"
                }
              ],
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "assets": [
              ],
              "reasons": [
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "module": "./src/core/index.js",
                  "moduleName": "./src/core/index.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./patchConnection",
                  "loc": "18:0-54"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "module": "./src/core/index.js",
                  "moduleName": "./src/core/index.js",
                  "type": "harmony import specifier",
                  "userRequest": "./patchConnection",
                  "loc": "46:4-20"
                }
              ],
              "usedExports": true,
              "providedExports": [
                "togglePacoRenderer",
                "showPacoRenderer",
                "PatchConnectionReceiver",
                "PatchConnectionSender",
                "PatchConnectorBroadcastChannel"
              ],
              "optimizationBailout": [
              ],
              "depth": 2,
              "source": "import { CONSTANTS } from \"./constants\";\n\n// todo: this is optional?\n\nexport const togglePacoRenderer = function ()\n{\n    var show = CABLES.UI.userSettings.get(\"pacoRenderer\") || false;\n    CABLES.UI.userSettings.set(\"pacoRenderer\", !show);\n    document.location.reload();\n};\n\nexport const showPacoRenderer = function ()\n{\n    // if(CABLES.UI.userSettings.get(\"pacoRenderer\"))\n    // {\n    //     $('body').append('<iframe class=\"paco-iframe\" style=\"z-index:9999999;\" src=\"/renderer/\"></iframe>');\n    // }\n};\n\nconst PatchConnectionReceiver = function (patch, options, connector)\n{\n    this._patch = patch;\n\n    if (connector)\n    {\n        this.connector = connector;\n    }\n    else\n    {\n        this.connector = new PatchConnectorBroadcastChannel();\n    }\n    this.connector.receive(this);\n};\n\nPatchConnectionReceiver.prototype._receive = function (ev)\n{\n    var data = {};\n    if (ev.event) data = ev;\n    else data = JSON.parse(ev.data);\n\n    // console.log(data);\n\n    if (data.event == CONSTANTS.PACO.PACO_OP_CREATE)\n    {\n        console.log(\"op create: data.vars.objName\");\n        var op = this._patch.addOp(data.vars.objName);\n        op.id = data.vars.opId;\n    }\n    else if (data.event == CONSTANTS.PACO.PACO_LOAD)\n    {\n        console.log(\"load patch.....\");\n        this._patch.clear();\n        this._patch.deSerialize(data.vars.patch);\n    }\n    else if (data.event == CONSTANTS.PACO.PACO_CLEAR)\n    {\n        this._patch.clear();\n        console.log(\"clear\");\n    }\n    else if (data.event == CONSTANTS.PACO.PACO_OP_DELETE)\n    {\n        console.log(\"op delete\");\n        this._patch.deleteOp(data.vars.op, true);\n    }\n    else if (data.event == CONSTANTS.PACO.PACO_OP_ENABLE)\n    {\n        var op = this._patch.getOpById(data.vars.op);\n        if (op) op.enabled = true;\n    }\n    else if (data.event == CONSTANTS.PACO.PACO_OP_DISABLE)\n    {\n        var op = this._patch.getOpById(data.vars.op);\n        if (op) op.enabled = false;\n    }\n    else if (data.event == CONSTANTS.PACO.PACO_UNLINK)\n    {\n        var op1 = this._patch.getOpById(data.vars.op1);\n        var op2 = this._patch.getOpById(data.vars.op2);\n        var port1 = op1.getPort(data.vars.port1);\n        var port2 = op2.getPort(data.vars.port2);\n        port1.removeLinkTo(port2);\n    }\n    else if (data.event == CONSTANTS.PACO.PACO_LINK)\n    {\n        var op1 = this._patch.getOpById(data.vars.op1);\n        var op2 = this._patch.getOpById(data.vars.op2);\n        this._patch.link(op1, data.vars.port1, op2, data.vars.port2);\n    }\n    else if (data.event == CONSTANTS.PACO.PACO_VALUECHANGE)\n    {\n        var op = this._patch.getOpById(data.vars.op);\n        var p = op.getPort(data.vars.port);\n        p.set(data.vars.v);\n    }\n    else\n    {\n        console.log(\"unknown patchConnectionEvent!\", ev);\n    }\n};\n\nconst PatchConnectionSender = function (patch, options)\n{\n    this.connectors = [];\n    this.connectors.push(new PatchConnectorBroadcastChannel());\n};\n\nPatchConnectionSender.prototype.send = function (event, vars)\n{\n    for (var i = 0; i < this.connectors.length; i++)\n    {\n        this.connectors[i].send(event, vars);\n    }\n};\n\n// -------------\n\nconst PatchConnectorBroadcastChannel = function ()\n{\n    if (!window.BroadcastChannel) return;\n\n    this.bc = new BroadcastChannel(\"test_channel\");\n};\n\nPatchConnectorBroadcastChannel.prototype.receive = function (paco)\n{\n    if (!this.bc) return;\n    console.log(\"init\");\n    this.bc.onmessage = paco._receive.bind(paco);\n};\n\nPatchConnectorBroadcastChannel.prototype.send = function (event, vars)\n{\n    if (!this.bc) return;\n    var data = {};\n    data.event = event;\n    data.vars = vars;\n    this.bc.postMessage(JSON.stringify(data));\n    // console.log(data);\n};\n\n// -------------\n\n// const PatchConnectorSocketIO = function ()\n// {\n//     this._socket = io(\"localhost:5712\");\n//     console.log(\"socket io paco...\");\n//     this._socket.emit(\"channel\", { name: \"hund\" });\n\n//     this._socket.on(\"connect\", () =>\n//     {\n//         console.log(\"CONNECTED\");\n//         // connection.set(socket);\n//         // connected.set(true);\n//     });\n\n//     this._socket.on(\"reconnect_error\", () =>\n//     {\n//         console.log(\"reconnect_error\");\n//         // connected.set(false);\n//     });\n\n//     this._socket.on(\"connect_error\", () =>\n//     {\n//         console.log(\"connect_error\");\n//         // connected.set(false);\n//     });\n\n//     this._socket.on(\"error\", () =>\n//     {\n//         console.log(\"socket error\");\n//         // connected.set(false);\n//     });\n// };\n\n// PatchConnectorSocketIO.prototype.receive = function (paco)\n// {\n//     this._socket.on(\"event\", (r) =>\n//     {\n//         console.log(\"socket io receive\", r);\n//         paco._receive(r.data);\n//     });\n// };\n\n// PatchConnectorSocketIO.prototype.send = function (event, vars)\n// {\n//     console.log(\"send socketio\");\n//     var data = {};\n//     data.event = event;\n//     data.vars = vars;\n\n//     this._socket.emit(\"event\", {\n//         msg: \"paco event\",\n//         event,\n//         data,\n//     });\n// };\n\nexport {\n    PatchConnectionReceiver, PatchConnectionSender, PatchConnectorBroadcastChannel,\n};\n"
            },
            {
              "id": null,
              "identifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_geom.js",
              "name": "./src/core/cgl/cgl_geom.js",
              "index": 18,
              "index2": 12,
              "size": 25143,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
              ],
              "issuer": "/home/tom/cables_dev/cables/src/core/glpatch.js",
              "issuerId": null,
              "issuerName": "./src/core/glpatch.js",
              "issuerPath": [
                {
                  "id": 0,
                  "identifier": "multi /home/tom/cables_dev/cables/src/core/index.js",
                  "name": "multi ./src/core/index.js"
                },
                {
                  "id": null,
                  "identifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "name": "./src/core/index.js"
                },
                {
                  "id": null,
                  "identifier": "/home/tom/cables_dev/cables/src/core/glpatch.js",
                  "name": "./src/core/glpatch.js"
                }
              ],
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "assets": [
              ],
              "reasons": [
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_marker.js",
                  "module": "./src/core/cgl/cgl_marker.js",
                  "moduleName": "./src/core/cgl/cgl_marker.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./cgl_geom",
                  "loc": "2:0-38"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_simplerect.js",
                  "module": "./src/core/cgl/cgl_simplerect.js",
                  "moduleName": "./src/core/cgl/cgl_simplerect.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./cgl_geom",
                  "loc": "2:0-38"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/index.js",
                  "module": "./src/core/cgl/index.js",
                  "moduleName": "./src/core/cgl/index.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./cgl_geom",
                  "loc": "3:0-38"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/glpatch.js",
                  "module": "./src/core/glpatch.js",
                  "moduleName": "./src/core/glpatch.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./cgl/cgl_geom",
                  "loc": "5:0-42"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_marker.js",
                  "module": "./src/core/cgl/cgl_marker.js",
                  "moduleName": "./src/core/cgl/cgl_marker.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_geom",
                  "loc": "9:17-25"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_simplerect.js",
                  "module": "./src/core/cgl/cgl_simplerect.js",
                  "moduleName": "./src/core/cgl/cgl_simplerect.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_geom",
                  "loc": "9:19-27"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/index.js",
                  "module": "./src/core/cgl/index.js",
                  "moduleName": "./src/core/cgl/index.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_geom",
                  "loc": "29:8-16"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/glpatch.js",
                  "module": "./src/core/glpatch.js",
                  "moduleName": "./src/core/glpatch.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl/cgl_geom",
                  "loc": "71:19-27"
                }
              ],
              "usedExports": [
                "Geometry"
              ],
              "providedExports": [
                "Geometry"
              ],
              "optimizationBailout": [
              ],
              "depth": 3,
              "source": "// import { vec2, vec3 } from \"gl-matrix\";\nimport { UTILS } from \"../utils\";\nimport { b64decTypedArray } from \"../base64\";\n/**\n * a geometry contains all information about a mesh, vertices, texturecoordinates etc. etc.\n * @external CGL\n * @namespace Geometry\n * @param {String} name\n * @class\n * @example\n * // create a triangle with all attributes\n * const geom=new Geometry(\"triangle\"),\n *\n * geom.vertices = [\n *      0.0,           sizeH.get(),  0.0,\n *     -sizeW.get(),  -sizeH.get(),  0.0,\n *      sizeW.get(),  -sizeH.get(),  0.0 ];\n *\n * geom.vertexNormals = [\n *      0.0,  0.0,  1.0,\n *      0.0,  0.0,  1.0,\n *      0.0,  0.0,  1.0 ];\n *\n * geom.tangents = [\n *     1,0,0,\n *     1,0,0,\n *     1,0,0 ];\n *\n * geom.biTangents = [\n *     0,1,0,\n *     0,1,0,\n *     0,1,0 ];\n *\n * geom.texCoords = [\n *      0.5,  0.0,\n *      1.0,  1.0,\n *      0.0,  1.0, ];\n *\n * geom.verticesIndices = [\n *     0, 1, 2 ];\n *\n */\nconst Geometry = function (name)\n{\n    this.name = name;\n    this.faceVertCount = 3;\n    this._vertices = [];\n    this.verticesIndices = [];\n    this.texCoords = new Float32Array();\n    this.texCoordsIndices = [];\n    this.vertexNormals = [];\n    this.tangents = [];\n    this.biTangents = [];\n    this.barycentrics = [];\n    this.morphTargets = [];\n    this.vertexColors = [];\n    this._attributes = {};\n\n    Object.defineProperty(this, \"vertices\", {\n        get()\n        {\n            return this._vertices;\n        },\n        set(v)\n        {\n            this.setVertices(v);\n        },\n    });\n};\n\n/**\n * @function clear\n * @memberof Geometry\n * @instance\n * @description clear all buffers/set them to length 0\n */\nGeometry.prototype.clear = function ()\n{\n    this.vertices = new Float32Array([]);\n    this.verticesIndices.length = 0;\n    this.texCoords = new Float32Array([]);\n    this.texCoordsIndices.length = 0;\n    this.vertexNormals.length = 0;\n};\n\n/**\n * @function getAttributes\n   @memberof Geometry\n * @instance\n * @return {Array<Object>} returns array of attribute objects\n */\nGeometry.prototype.getAttributes = function ()\n{\n    return this._attributes;\n};\n\n/**\n * @function getAttribute\n * @memberof Geometry\n * @instance\n * @param {String} name\n * @return {Object}\n */\nGeometry.prototype.getAttribute = function (name)\n{\n    for (var i in this._attributes)\n    {\n        if (this._attributes[i].name == name) return this._attributes[i];\n    }\n    return null;\n};\n\n/**\n * @function setAttribute\n * @description create an attribute\n * @memberof Geometry\n * @instance\n * @param {String} name\n * @param {Array} data\n * @param {Number} itemsize\n */\nGeometry.prototype.setAttribute = function (name, arr, itemSize)\n{\n    var attrType = \"\";\n    if (itemSize == 1) attrType = \"float\";\n    else if (itemSize == 2) attrType = \"vec2\";\n    else if (itemSize == 3) attrType = \"vec3\";\n    else if (itemSize == 4) attrType = \"vec4\";\n\n    var attr = {\n        name,\n        data: arr,\n        itemSize,\n        type: attrType,\n    };\n\n    this._attributes[name] = attr;\n};\n\n/**\n * @function setVertices\n * @memberof Geometry\n * @instance\n * @description set vertices\n * @param {Array|Float32Array} data [x,y,z,x,y,z,...]\n */\nGeometry.prototype.setVertices = function (arr)\n{\n    if (arr instanceof Float32Array) this._vertices = arr;\n    else this._vertices = new Float32Array(arr);\n};\n\n/**\n * @function setTexCoords\n * @memberof Geometry\n * @instance\n * @description set texcoords\n * @param {Array|Float32Array} data [u,v,u,v,...]\n */\nGeometry.prototype.setTexCoords = function (arr)\n{\n    if (arr instanceof Float32Array) this.texCoords = arr;\n    else this.texCoords = new Float32Array(arr);\n};\n\n// Geometry.prototype.testIndices = function ()\n// {\n//     var foundError = false;\n//     for (var i = 0; i < this.verticesIndices.length; i++)\n//     {\n//         if (this.verticesIndices[i * 3 + 0] >= this._vertices.length / 3 || this.verticesIndices[i * 3 + 1] >= this._vertices.length / 3 || this.verticesIndices[i * 3 + 2] >= this._vertices.length / 3)\n//         {\n//             foundError = true;\n//             console.log(\"index error!\");\n//         }\n//     }\n// };\n\n// deprecated\nGeometry.prototype.calcNormals = function (smooth)\n{\n    var options = {};\n    if (!smooth) this.unIndex();\n\n    this.calculateNormals(options);\n};\n\nGeometry.prototype.setPointVertices = function (verts)\n{\n    if (verts.length % 3 !== 0)\n    {\n        console.error(\"CGL MESH : SetPointVertices: Array must be multiple of three.\");\n        return;\n    }\n\n    if (!(verts instanceof Float32Array)) this.vertices = new Float32Array(verts);\n    else this.vertices = verts;\n\n    if (!(this.texCoords instanceof Float32Array)) this.texCoords = new Float32Array((verts.length / 3) * 2);\n\n    // this.texCoords.length=verts.length/3*2;\n    this.verticesIndices.length = verts.length / 3;\n    // this.verticesIndices=[];\n\n    for (var i = 0; i < verts.length / 3; i++)\n    {\n        this.verticesIndices[i] = i;\n        this.texCoords[i * 2] = 0;\n        this.texCoords[i * 2 + 1] = 0;\n    }\n};\n\nGeometry.prototype.merge = function (geom)\n{\n    if (!geom) return;\n    var oldIndizesLength = this.verticesIndices.length;\n    var vertLength = this.vertices.length / 3;\n\n    this.verticesIndices.length = this.verticesIndices.length + geom.verticesIndices.length;\n    for (var i = 0; i < geom.verticesIndices.length; i++)\n    {\n        this.verticesIndices[oldIndizesLength + i] = geom.verticesIndices[i] + vertLength;\n    }\n\n    this.vertices = UTILS.float32Concat(this.vertices, geom.vertices);\n    this.texCoords = UTILS.float32Concat(this.texCoords, geom.texCoords);\n    this.vertexNormals = UTILS.float32Concat(this.vertexNormals, geom.vertexNormals);\n    this.tangents = UTILS.float32Concat(this.vertexNormals, geom.tangents);\n    this.bitangents = UTILS.float32Concat(this.vertexNormals, geom.bitangents);\n};\n\nGeometry.prototype.copy = function ()\n{\n    var i = 0;\n    var geom = new Geometry();\n    geom.faceVertCount = this.faceVertCount;\n\n    // geom.vertices.length=this.vertices.length;\n    // for(i=0;i<this.vertices.length;i++) geom.vertices[i]=this.vertices[i];\n    geom.setVertices(this._vertices.slice(0));\n\n    geom.verticesIndices.length = this.verticesIndices.length;\n    for (i = 0; i < this.verticesIndices.length; i++) geom.verticesIndices[i] = this.verticesIndices[i];\n\n    geom.texCoords = new Float32Array(this.texCoords.length);\n    for (i = 0; i < this.texCoords.length; i++) geom.texCoords[i] = this.texCoords[i];\n\n    geom.texCoordsIndices.length = this.texCoordsIndices.length;\n    for (i = 0; i < this.texCoordsIndices.length; i++) geom.texCoordsIndices[i] = this.texCoordsIndices[i];\n\n    geom.vertexNormals.length = this.vertexNormals.length;\n    for (i = 0; i < this.vertexNormals.length; i++) geom.vertexNormals[i] = this.vertexNormals[i];\n\n    if (this.tangents)\n    {\n        geom.tangents = [];\n        geom.tangents.length = this.tangents.length;\n        for (i = 0; i < this.tangents.length; i++) geom.tangents[i] = this.tangents[i];\n    }\n\n    if (this.biTangents)\n    {\n        geom.biTangents = [];\n        geom.biTangents.length = this.biTangents.length;\n        for (i = 0; i < this.biTangents.length; i++) geom.biTangents[i] = this.biTangents[i];\n    }\n\n    geom.barycentrics.length = this.barycentrics.length;\n    for (i = 0; i < this.barycentrics.length; i++) geom.barycentrics[i] = this.barycentrics[i];\n\n    geom.morphTargets.length = this.morphTargets.length;\n    for (i = 0; i < this.morphTargets.length; i++) geom.morphTargets[i] = this.morphTargets[i];\n\n    geom.vertexColors.length = this.vertexColors.length;\n    for (i = 0; i < this.vertexColors.length; i++) geom.vertexColors[i] = this.vertexColors[i];\n\n    return geom;\n};\n\nGeometry.prototype.calculateNormals = function (options)\n{\n    var u = vec3.create();\n    var v = vec3.create();\n    var n = vec3.create();\n    var i = 0;\n\n    function calcNormal(triangle)\n    {\n        vec3.subtract(u, triangle[0], triangle[1]);\n        vec3.subtract(v, triangle[0], triangle[2]);\n        vec3.cross(n, u, v);\n        vec3.normalize(n, n);\n\n        if (options && options.forceZUp)\n        {\n            if (n[2] < 0)\n            {\n                n[0] *= -1;\n                n[1] *= -1;\n                n[2] *= -1;\n            }\n        }\n        return n;\n    }\n\n    this.getVertexVec = function (which)\n    {\n        var vec = [0, 0, 0];\n        vec[0] = this.vertices[which * 3 + 0];\n        vec[1] = this.vertices[which * 3 + 1];\n        vec[2] = this.vertices[which * 3 + 2];\n        return vec;\n    };\n\n    if (!(this.vertexNormals instanceof Float32Array) || this.vertexNormals.length != this.vertices.length) this.vertexNormals = new Float32Array(this.vertices.length);\n\n    for (i = 0; i < this.vertices.length; i++)\n    {\n        this.vertexNormals[i] = 0;\n    }\n\n    if (!this.isIndexed())\n    {\n        var norms = [];\n        for (i = 0; i < this.vertices.length; i += 9)\n        {\n            var triangle = [[this.vertices[i + 0], this.vertices[i + 1], this.vertices[i + 2]], [this.vertices[i + 3], this.vertices[i + 4], this.vertices[i + 5]], [this.vertices[i + 6], this.vertices[i + 7], this.vertices[i + 8]]];\n\n            var n = calcNormal(triangle);\n            norms.push(n[0], n[1], n[2], n[0], n[1], n[2], n[0], n[1], n[2]);\n        }\n        this.vertexNormals = norms;\n    }\n    else\n    {\n        var faceNormals = [];\n        faceNormals.length = this.verticesIndices.length / 3;\n\n        for (i = 0; i < this.verticesIndices.length; i += 3)\n        {\n            var triangle = [this.getVertexVec(this.verticesIndices[i + 0]), this.getVertexVec(this.verticesIndices[i + 1]), this.getVertexVec(this.verticesIndices[i + 2])];\n\n            faceNormals[i / 3] = calcNormal(triangle);\n\n            this.vertexNormals[this.verticesIndices[i + 0] * 3 + 0] += faceNormals[i / 3][0];\n            this.vertexNormals[this.verticesIndices[i + 0] * 3 + 1] += faceNormals[i / 3][1];\n            this.vertexNormals[this.verticesIndices[i + 0] * 3 + 2] += faceNormals[i / 3][2];\n\n            this.vertexNormals[this.verticesIndices[i + 1] * 3 + 0] += faceNormals[i / 3][0];\n            this.vertexNormals[this.verticesIndices[i + 1] * 3 + 1] += faceNormals[i / 3][1];\n            this.vertexNormals[this.verticesIndices[i + 1] * 3 + 2] += faceNormals[i / 3][2];\n\n            this.vertexNormals[this.verticesIndices[i + 2] * 3 + 0] += faceNormals[i / 3][0];\n            this.vertexNormals[this.verticesIndices[i + 2] * 3 + 1] += faceNormals[i / 3][1];\n            this.vertexNormals[this.verticesIndices[i + 2] * 3 + 2] += faceNormals[i / 3][2];\n        }\n\n        for (\n            i = 0;\n            i < this.verticesIndices.length;\n            i += 3 // faces\n        )\n        {\n            for (\n                var k = 0;\n                k < 3;\n                k++ // triangles\n            )\n            {\n                var vv = [this.vertexNormals[this.verticesIndices[i + k] * 3 + 0], this.vertexNormals[this.verticesIndices[i + k] * 3 + 1], this.vertexNormals[this.verticesIndices[i + k] * 3 + 2]];\n                vec3.normalize(vv, vv);\n                this.vertexNormals[this.verticesIndices[i + k] * 3 + 0] = vv[0];\n                this.vertexNormals[this.verticesIndices[i + k] * 3 + 1] = vv[1];\n                this.vertexNormals[this.verticesIndices[i + k] * 3 + 2] = vv[2];\n            }\n        }\n    }\n};\n\n/**\n * Calculates tangents & bitangents with the help of uv-coordinates. Adapted from\n * Lengyel, Eric. “Computing Tangent Space Basis Vectors for an Arbitrary Mesh”.\n * Terathon Software 3D Graphics Library.\n * https://fenix.tecnico.ulisboa.pt/downloadFile/845043405449073/Tangent%20Space%20Calculation.pdf\n *\n * @function calcTangentsBitangents\n * @memberof Geometry\n * @instance\n */\nGeometry.prototype.calcTangentsBitangents = function ()\n{\n    if (!this.vertices.length)\n    {\n        throw new Error(\"Cannot calculate tangents/bitangents without vertices.\");\n    }\n    if (!this.vertexNormals.length)\n    {\n        throw new Error(\"Cannot calculate tangents/bitangents without normals.\");\n    }\n    if (!this.texCoords.length)\n    {\n        throw new Error(\"Cannot calculate tangents/bitangents without texture coordinates.\");\n    }\n    if (!this.verticesIndices.length)\n    {\n        throw new Error(\"Cannot calculate tangents/bitangents without vertex indices.\");\n    }\n    // this code assumes that we have three indices per triangle\n    if (this.verticesIndices.length % 3 !== 0) throw new Error(\"Vertex indices mismatch!\");\n\n    const triangleCount = this.verticesIndices.length / 3;\n    const vertexCount = this.vertices.length / 3;\n\n    this.tangents = new Float32Array(this.vertexNormals.length);\n    this.biTangents = new Float32Array(this.vertexNormals.length);\n\n    // temporary buffers\n    var tempVertices = [];\n    tempVertices.length = vertexCount * 2;\n\n    const v1 = vec3.create();\n    const v2 = vec3.create();\n    const v3 = vec3.create();\n\n    const w1 = vec2.create();\n    const w2 = vec2.create();\n    const w3 = vec2.create();\n\n    const sdir = vec3.create();\n    const tdir = vec3.create();\n\n    // for details on calculation, see article referenced above\n    for (var tri = 0; tri < triangleCount; tri += 1)\n    {\n        // indices of the three vertices for a triangle\n        const i1 = this.verticesIndices[tri * 3];\n        const i2 = this.verticesIndices[tri * 3 + 1];\n        const i3 = this.verticesIndices[tri * 3 + 2];\n\n        // vertex position as vec3\n        vec3.set(v1, this.vertices[i1 * 3], this.vertices[i1 * 3 + 1], this.vertices[i1 * 3 + 2]);\n        vec3.set(v2, this.vertices[i2 * 3], this.vertices[i2 * 3 + 1], this.vertices[i2 * 3 + 2]);\n        vec3.set(v3, this.vertices[i3 * 3], this.vertices[i3 * 3 + 1], this.vertices[i3 * 3 + 2]);\n\n        // texture coordinate as vec2\n        vec2.set(w1, this.texCoords[i1 * 2], this.texCoords[i1 * 2 + 1]);\n        vec2.set(w2, this.texCoords[i2 * 2], this.texCoords[i2 * 2 + 1]);\n        vec2.set(w3, this.texCoords[i3 * 2], this.texCoords[i3 * 2 + 1]);\n\n        const x1 = v2[0] - v1[0];\n        const x2 = v3[0] - v1[0];\n        const y1 = v2[1] - v1[1];\n        const y2 = v3[1] - v1[1];\n        const z1 = v2[2] - v1[2];\n        const z2 = v3[2] - v1[2];\n\n        const s1 = w2[0] - w1[0];\n        const s2 = w3[0] - w1[0];\n        const t1 = w2[1] - w1[1];\n        const t2 = w3[1] - w1[1];\n\n        const r = 1.0 / (s1 * t2 - s2 * t1);\n\n        vec3.set(sdir, (t2 * x1 - t1 * x2) * r, (t2 * y1 - t1 * y2) * r, (t2 * z1 - t1 * z2) * r);\n\n        vec3.set(tdir, (s1 * x2 - s2 * x1) * r, (s1 * y2 - s2 * y1) * r, (s1 * z2 - s2 * z1) * r);\n\n        tempVertices[i1] = sdir;\n        tempVertices[i2] = sdir;\n        tempVertices[i3] = sdir;\n\n        tempVertices[i1 + vertexCount] = tdir;\n        tempVertices[i2 + vertexCount] = tdir;\n        tempVertices[i3 + vertexCount] = tdir;\n    }\n\n    const normal = vec3.create();\n    const tempVert = vec3.create();\n    const tan = vec3.create();\n    const bitan = vec3.create();\n    const temp1 = vec3.create();\n    const temp2 = vec3.create();\n    const crossPd = vec3.create();\n    const normalized = vec3.create();\n\n    for (var vert = 0; vert < vertexCount; vert += 1)\n    {\n        vec3.set(normal, this.vertexNormals[vert * 3], this.vertexNormals[vert * 3 + 1], this.vertexNormals[vert * 3 + 2]);\n        vec3.set(tempVert, tempVertices[vert][0], tempVertices[vert][1], tempVertices[vert][2]);\n\n        // Gram-Schmidt orthagonalize\n        const _dp = vec3.dot(normal, tempVert);\n        vec3.scale(temp1, normal, _dp);\n        vec3.subtract(temp2, tempVert, temp1);\n\n        vec3.normalize(normalized, temp2);\n\n        vec3.cross(crossPd, normal, tempVert);\n\n        const intermDot = vec3.dot(crossPd, tempVertices[vert + vertexCount]);\n\n        const w = intermDot < 0.0 ? -1.0 : 1.0;\n\n        vec3.scale(tan, normalized, 1 / w);\n        vec3.cross(bitan, normal, tan);\n\n        this.tangents[vert * 3 + 0] = tan[0];\n        this.tangents[vert * 3 + 1] = tan[1];\n        this.tangents[vert * 3 + 2] = tan[2];\n        this.biTangents[vert * 3 + 0] = bitan[0];\n        this.biTangents[vert * 3 + 1] = bitan[1];\n        this.biTangents[vert * 3 + 2] = bitan[2];\n    }\n};\n\nGeometry.prototype.isIndexed = function ()\n{\n    return this.verticesIndices.length != 0;\n};\n\n/**\n * @function unIndex\n * @memberof Geometry\n * @instance\n * @param {Boolean}\n * @description remove all vertex indizes, vertices array will contain 3*XYZ for every triangle\n */\nGeometry.prototype.unIndex = function (reIndex)\n{\n    var newVerts = [];\n    var newIndizes = [];\n    var newTexCoords = [];\n    var newNormals = [];\n    var count = 0;\n    var i = 0;\n    this.vertexNormals.length = 0;\n\n    for (i = 0; i < this.verticesIndices.length; i += 3)\n    {\n        newVerts.push(this.vertices[this.verticesIndices[i + 0] * 3 + 0]);\n        newVerts.push(this.vertices[this.verticesIndices[i + 0] * 3 + 1]);\n        newVerts.push(this.vertices[this.verticesIndices[i + 0] * 3 + 2]);\n\n        newNormals.push(this.vertexNormals[this.verticesIndices[i + 0] * 3 + 0]);\n        newNormals.push(this.vertexNormals[this.verticesIndices[i + 0] * 3 + 1]);\n        newNormals.push(this.vertexNormals[this.verticesIndices[i + 0] * 3 + 2]);\n\n        if (!this.texCoords)\n        {\n            newTexCoords.push(0);\n            newTexCoords.push(0);\n        }\n        else\n        {\n            newTexCoords.push(this.texCoords[this.verticesIndices[i + 0] * 2 + 0]);\n            newTexCoords.push(this.texCoords[this.verticesIndices[i + 0] * 2 + 1]);\n        }\n\n        newIndizes.push(count);\n        count++;\n\n        newVerts.push(this.vertices[this.verticesIndices[i + 1] * 3 + 0]);\n        newVerts.push(this.vertices[this.verticesIndices[i + 1] * 3 + 1]);\n        newVerts.push(this.vertices[this.verticesIndices[i + 1] * 3 + 2]);\n\n        newNormals.push(this.vertexNormals[this.verticesIndices[i + 1] * 3 + 0]);\n        newNormals.push(this.vertexNormals[this.verticesIndices[i + 1] * 3 + 1]);\n        newNormals.push(this.vertexNormals[this.verticesIndices[i + 1] * 3 + 2]);\n\n        if (!this.texCoords)\n        {\n            newTexCoords.push(0);\n            newTexCoords.push(0);\n        }\n        else\n        {\n            newTexCoords.push(this.texCoords[this.verticesIndices[i + 1] * 2 + 0]);\n            newTexCoords.push(this.texCoords[this.verticesIndices[i + 1] * 2 + 1]);\n        }\n\n        newIndizes.push(count);\n        count++;\n\n        newVerts.push(this.vertices[this.verticesIndices[i + 2] * 3 + 0]);\n        newVerts.push(this.vertices[this.verticesIndices[i + 2] * 3 + 1]);\n        newVerts.push(this.vertices[this.verticesIndices[i + 2] * 3 + 2]);\n\n        newNormals.push(this.vertexNormals[this.verticesIndices[i + 2] * 3 + 0]);\n        newNormals.push(this.vertexNormals[this.verticesIndices[i + 2] * 3 + 1]);\n        newNormals.push(this.vertexNormals[this.verticesIndices[i + 2] * 3 + 2]);\n\n        if (!this.texCoords)\n        {\n            newTexCoords.push(0);\n            newTexCoords.push(0);\n        }\n        else\n        {\n            newTexCoords.push(this.texCoords[this.verticesIndices[i + 2] * 2 + 0]);\n            newTexCoords.push(this.texCoords[this.verticesIndices[i + 2] * 2 + 1]);\n        }\n\n        newIndizes.push(count);\n        count++;\n    }\n\n    this.vertices = newVerts;\n    this.texCoords = newTexCoords;\n    this.vertexNormals = newNormals;\n    this.verticesIndices.length = 0;\n    if (reIndex) this.verticesIndices = newIndizes;\n    this.calculateNormals();\n};\n\nGeometry.prototype.calcBarycentric = function ()\n{\n    this.barycentrics.length = this.vertices.length;\n    var i = 0;\n    for (i = 0; i < this.vertices.length; i++) this.barycentrics[i] = 0;\n\n    var count = 0;\n    for (i = 0; i < this.vertices.length; i += 3)\n    {\n        this.barycentrics[i + count] = 1;\n        count++;\n        if (count == 3) count = 0;\n    }\n};\n\nGeometry.prototype.getBounds = function ()\n{\n    var i = 0;\n    var bounds = {\n        maxX: -Number.MAX_VALUE,\n        maxY: -Number.MAX_VALUE,\n        maxZ: -Number.MAX_VALUE,\n        minX: Number.MAX_VALUE,\n        minY: Number.MAX_VALUE,\n        minZ: Number.MAX_VALUE,\n    };\n\n    for (i = 0; i < this.vertices.length; i += 3)\n    {\n        if (this.vertices[i + 0] == this.vertices[i + 0])\n        {\n            bounds.maxX = Math.max(bounds.maxX, this.vertices[i + 0]);\n            bounds.maxY = Math.max(bounds.maxY, this.vertices[i + 1]);\n            bounds.maxZ = Math.max(bounds.maxZ, this.vertices[i + 2]);\n\n            bounds.minX = Math.min(bounds.minX, this.vertices[i + 0]);\n            bounds.minY = Math.min(bounds.minY, this.vertices[i + 1]);\n            bounds.minZ = Math.min(bounds.minZ, this.vertices[i + 2]);\n        }\n    }\n\n    bounds.x = Math.abs(bounds.maxX) + Math.abs(bounds.minX);\n    bounds.y = Math.abs(bounds.maxY) + Math.abs(bounds.minY);\n    bounds.z = Math.abs(bounds.maxZ) + Math.abs(bounds.minZ);\n\n    bounds.maxAxis = Math.max(bounds.z, Math.max(bounds.x, bounds.y));\n\n    return bounds;\n};\n\nGeometry.prototype.center = function (x, y, z)\n{\n    if (x === undefined)\n    {\n        x = true;\n        y = true;\n        z = true;\n    }\n\n    var i = 0;\n    const bounds = this.getBounds();\n    const offset = [bounds.minX + (bounds.maxX - bounds.minX) / 2, bounds.minY + (bounds.maxY - bounds.minY) / 2, bounds.minZ + (bounds.maxZ - bounds.minZ) / 2];\n\n    for (i = 0; i < this.vertices.length; i += 3)\n    {\n        if (this.vertices[i + 0] == this.vertices[i + 0])\n        {\n            if (x) this.vertices[i + 0] -= offset[0];\n            if (y) this.vertices[i + 1] -= offset[1];\n            if (z) this.vertices[i + 2] -= offset[2];\n        }\n    }\n\n    return offset;\n};\n\nGeometry.prototype.mapTexCoords2d = function ()\n{\n    var bounds = this.getBounds();\n    var num = this.vertices.length / 3;\n\n    this.texCoords = new Float32Array((length = num * 2));\n\n    for (var i = 0; i < num; i++)\n    {\n        var vertX = this.vertices[i * 3 + 0];\n        var vertY = this.vertices[i * 3 + 1];\n        this.texCoords[i * 2 + 0] = vertX / (bounds.maxX - bounds.minX) + 0.5;\n        this.texCoords[i * 2 + 1] = 1.0 - vertY / (bounds.maxY - bounds.minY) + 0.5;\n    }\n};\n\n// -----------------\n\n// TODO : move this into \"old\" circle op\nGeometry.buildFromFaces = function (arr)\n{\n    var vertices = [];\n    var verticesIndices = [];\n\n    for (var i = 0; i < arr.length; i += 3)\n    {\n        var a = arr[i + 0];\n        var b = arr[i + 1];\n        var c = arr[i + 2];\n        var face = [-1, -1, -1];\n\n        for (var iv = 0; iv < vertices; iv += 3)\n        {\n            if (vertices[iv + 0] == a[0] && vertices[iv + 1] == a[1] && vertices[iv + 2] == a[2]) face[0] = iv / 3;\n\n            if (vertices[iv + 0] == b[0] && vertices[iv + 1] == b[1] && vertices[iv + 2] == b[2]) face[1] = iv / 3;\n\n            if (vertices[iv + 0] == c[0] && vertices[iv + 1] == c[1] && vertices[iv + 2] == c[2]) face[2] = iv / 3;\n        }\n\n        if (face[0] == -1)\n        {\n            vertices.push(a[0], a[1], a[2]);\n            face[0] = (vertices.length - 1) / 3;\n        }\n\n        if (face[1] == -1)\n        {\n            vertices.push(b[0], b[1], b[2]);\n            face[1] = (vertices.length - 1) / 3;\n        }\n\n        if (face[2] == -1)\n        {\n            vertices.push(c[0], c[1], c[2]);\n            face[2] = (vertices.length - 1) / 3;\n        }\n\n        verticesIndices.push(parseInt(face[0], 10));\n        verticesIndices.push(parseInt(face[1], 10));\n        verticesIndices.push(parseInt(face[2], 10));\n    }\n\n    var geom = new Geometry();\n    geom.vertices = vertices;\n    geom.verticesIndices = verticesIndices;\n\n    return geom;\n};\n\nGeometry.json2geom = function (jsonMesh)\n{\n    var geom = new Geometry();\n    geom.verticesIndices = [];\n\n    geom.vertices = jsonMesh.vertices || [];\n    geom.vertexNormals = jsonMesh.normals || [];\n    geom.vertexColors = jsonMesh.colors || [];\n    geom.tangents = jsonMesh.tangents || [];\n    geom.biTangents = jsonMesh.bitangents || [];\n    if (jsonMesh.texturecoords) geom.setTexCoords(jsonMesh.texturecoords[0]);\n\n    if (jsonMesh.vertices_b64) geom.vertices = new Float32Array(b64decTypedArray(jsonMesh.vertices_b64));\n    if (jsonMesh.normals_b64) geom.vertexNormals = new Float32Array(b64decTypedArray(jsonMesh.normals_b64));\n    if (jsonMesh.tangents_b64) geom.tangents = new Float32Array(b64decTypedArray(jsonMesh.tangents_b64));\n    if (jsonMesh.bitangents_b64) geom.biTangents = new Float32Array(b64decTypedArray(jsonMesh.bitangents_b64));\n    if (jsonMesh.texturecoords_b64) geom.setTexCoords(new Float32Array(b64decTypedArray(jsonMesh.texturecoords_b64[0])));\n\n    if (jsonMesh.faces_b64)\n    {\n        geom.verticesIndices = new Uint32Array(b64decTypedArray(jsonMesh.faces_b64));\n    }\n    else\n    {\n        geom.verticesIndices.length = jsonMesh.faces.length * 3;\n        for (var i = 0; i < jsonMesh.faces.length; i++)\n        {\n            geom.verticesIndices[i * 3] = jsonMesh.faces[i][0];\n            geom.verticesIndices[i * 3 + 1] = jsonMesh.faces[i][1];\n            geom.verticesIndices[i * 3 + 2] = jsonMesh.faces[i][2];\n        }\n    }\n\n    return geom;\n};\n\nexport { Geometry };\n"
            },
            {
              "id": null,
              "identifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_shader_uniform.js",
              "name": "./src/core/cgl/cgl_shader_uniform.js",
              "index": 21,
              "index2": 13,
              "size": 9663,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
              ],
              "issuer": "/home/tom/cables_dev/cables/src/core/glpatch.js",
              "issuerId": null,
              "issuerName": "./src/core/glpatch.js",
              "issuerPath": [
                {
                  "id": 0,
                  "identifier": "multi /home/tom/cables_dev/cables/src/core/index.js",
                  "name": "multi ./src/core/index.js"
                },
                {
                  "id": null,
                  "identifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "name": "./src/core/index.js"
                },
                {
                  "id": null,
                  "identifier": "/home/tom/cables_dev/cables/src/core/glpatch.js",
                  "name": "./src/core/glpatch.js"
                }
              ],
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "assets": [
              ],
              "reasons": [
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_mesh.js",
                  "module": "./src/core/cgl/cgl_mesh.js",
                  "moduleName": "./src/core/cgl/cgl_mesh.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./cgl_shader_uniform",
                  "loc": "1:0-47"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_shader_lib.js",
                  "module": "./src/core/cgl/cgl_shader_lib.js",
                  "moduleName": "./src/core/cgl/cgl_shader_lib.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./cgl_shader_uniform",
                  "loc": "1:0-47"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/glpatch.js",
                  "module": "./src/core/glpatch.js",
                  "moduleName": "./src/core/glpatch.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./cgl/cgl_shader_uniform",
                  "loc": "4:0-51"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/index.js",
                  "module": "./src/core/cgl/index.js",
                  "moduleName": "./src/core/cgl/index.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./cgl_shader_uniform",
                  "loc": "7:0-47"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/index.js",
                  "module": "./src/core/cgl/index.js",
                  "moduleName": "./src/core/cgl/index.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_shader_uniform",
                  "loc": "38:8-15"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_shader_lib.js",
                  "module": "./src/core/cgl/cgl_shader_lib.js",
                  "moduleName": "./src/core/cgl/cgl_shader_lib.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_shader_uniform",
                  "loc": "59:24-31"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/glpatch.js",
                  "module": "./src/core/glpatch.js",
                  "moduleName": "./src/core/glpatch.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl/cgl_shader_uniform",
                  "loc": "65:22-29"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/glpatch.js",
                  "module": "./src/core/glpatch.js",
                  "moduleName": "./src/core/glpatch.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl/cgl_shader_uniform",
                  "loc": "66:22-29"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/glpatch.js",
                  "module": "./src/core/glpatch.js",
                  "moduleName": "./src/core/glpatch.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl/cgl_shader_uniform",
                  "loc": "67:22-29"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/glpatch.js",
                  "module": "./src/core/glpatch.js",
                  "moduleName": "./src/core/glpatch.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl/cgl_shader_uniform",
                  "loc": "68:25-32"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/glpatch.js",
                  "module": "./src/core/glpatch.js",
                  "moduleName": "./src/core/glpatch.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl/cgl_shader_uniform",
                  "loc": "69:25-32"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_mesh.js",
                  "module": "./src/core/cgl/cgl_mesh.js",
                  "moduleName": "./src/core/cgl/cgl_mesh.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_shader_uniform",
                  "loc": "217:76-83"
                }
              ],
              "usedExports": [
                "Uniform"
              ],
              "providedExports": [
                "Uniform"
              ],
              "optimizationBailout": [
              ],
              "depth": 3,
              "source": "import { profileData } from \"./cgl_profiledata\";\nimport { Port } from \"../core_port\";\n\n/**\n * Shader uniforms\n *\n * types:\n * <pre>\n * f    - float\n * 2f   - vec2\n * 3f   - vec3\n * 4f   - vec4\n * i    - integer\n * t    - texture\n * m4   - mat4, 4x4 float matrix\n * f[]  - array of floats\n * 3f[] - array of float triplets\n * </pre>\n *\n * @external CGL\n * @namespace Uniform\n * @class\n * @param {Shader} shader\n * @param {String} [type=f]\n * @param {String} name\n * @param {Number|Port} value  can be a Number,Matrix or Port\n * @example\n * // bind float uniform called myfloat and initialize with value 1.0\n * const unir=new CGL.Uniform(shader,'f','myfloat',1.0);\n * unir.setValue(1.0);\n *\n * // bind float uniform called myfloat and automatically set it to input port value\n * const myPort=op.inFloat(\"input\");\n * const pv=new CGL.Uniform(shader,'f','myfloat',myPort);\n *\n */\nexport const Uniform = function (__shader, __type, __name, _value)\n{\n    this._loc = -1;\n    this._type = __type;\n    this._name = __name;\n    this._shader = __shader;\n    this._value = 0.00001;\n    this._oldValue = null;\n    this._port = null;\n    this._shader.addUniform(this);\n    this.needsUpdate = true;\n\n    if (__type == \"f\")\n    {\n        this.set = this.setValue = this.setValueF.bind(this);\n        this.updateValue = this.updateValueF.bind(this);\n    }\n    else if (__type == \"f[]\")\n    {\n        this.set = this.setValue = this.setValueArrayF.bind(this);\n        this.updateValue = this.updateValueArrayF.bind(this);\n    }\n    else if (__type == \"3f[]\")\n    {\n        this.set = this.setValue = this.setValueArray3F.bind(this);\n        this.updateValue = this.updateValueArray3F.bind(this);\n    }\n    else if (__type == \"i\")\n    {\n        this.set = this.setValue = this.setValueI.bind(this);\n        this.updateValue = this.updateValueI.bind(this);\n    }\n    else if (__type == \"b\")\n    {\n        this.set = this.setValue = this.setValueBool.bind(this);\n        this.updateValue = this.updateValueBool.bind(this);\n    }\n    else if (__type == \"4f\")\n    {\n        this.set = this.setValue = this.setValue4F.bind(this);\n        this.updateValue = this.updateValue4F.bind(this);\n    }\n    else if (__type == \"3f\")\n    {\n        this.set = this.setValue = this.setValue3F.bind(this);\n        this.updateValue = this.updateValue3F.bind(this);\n    }\n    else if (__type == \"2f\")\n    {\n        this.set = this.setValue = this.setValue2F.bind(this);\n        this.updateValue = this.updateValue2F.bind(this);\n    }\n    else if (__type == \"t\")\n    {\n        this.set = this.setValue = this.setValueT.bind(this);\n        this.updateValue = this.updateValueT.bind(this);\n    }\n    else if (__type == \"m4\")\n    {\n        this.set = this.setValue = this.setValueM4.bind(this);\n        this.updateValue = this.updateValueM4.bind(this);\n    }\n    else throw new Error(\"Unknown uniform type\");\n\n    if (typeof _value == \"object\" && _value instanceof Port)\n    {\n        this._port = _value;\n        this._value = this._port.get();\n        this._port.onValueChanged = this.updateFromPort.bind(this);\n    }\n    else this._value = _value;\n\n    this.setValue(this._value);\n    this.needsUpdate = true;\n};\n\nUniform.prototype.getType = function ()\n{\n    return this._type;\n};\nUniform.prototype.getName = function ()\n{\n    return this._name;\n};\nUniform.prototype.getValue = function ()\n{\n    return this._value;\n};\nUniform.prototype.resetLoc = function ()\n{\n    this._loc = -1;\n    this.needsUpdate = true;\n};\n\nUniform.prototype.bindTextures = function ()\n{\n    return this._value;\n};\nUniform.prototype.resetLoc = function ()\n{\n    this._loc = -1;\n    this.needsUpdate = true;\n};\n\nUniform.prototype.bindTextures = function () {};\n\nUniform.prototype.getLoc = function ()\n{\n    return this._loc;\n};\n\nUniform.prototype.updateFromPort = function ()\n{\n    this.setValue(this._port.get());\n};\n\nUniform.prototype.updateValueF = function ()\n{\n    if (this._loc == -1) this._loc = this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(), this._name);\n    else this.needsUpdate = false;\n\n    this._shader.getCgl().gl.uniform1f(this._loc, this._value);\n    profileData.profileUniformCount++;\n};\n\nUniform.prototype.setValueF = function (v)\n{\n    if (v != this._value)\n    {\n        this.needsUpdate = true;\n        this._value = v;\n    }\n};\n\nUniform.prototype.updateValueI = function ()\n{\n    if (this._loc == -1) this._loc = this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(), this._name);\n    else this.needsUpdate = false;\n\n    this._shader.getCgl().gl.uniform1i(this._loc, this._value);\n    profileData.UniformCount++;\n};\n\nUniform.prototype.setValueI = function (v)\n{\n    if (v != this._value)\n    {\n        this.needsUpdate = true;\n        this._value = v;\n    }\n};\n\nUniform.prototype.updateValueBool = function ()\n{\n    if (this._loc == -1) this._loc = this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(), this._name);\n    else this.needsUpdate = false;\n    this._shader.getCgl().gl.uniform1i(this._loc, this._value ? 1 : 0);\n\n    profileData.UniformCount++;\n};\n\nUniform.prototype.setValueBool = function (v)\n{\n    if (v != this._value)\n    {\n        this.needsUpdate = true;\n        this._value = v;\n    }\n};\n\nUniform.prototype.setValueArray3F = function (v)\n{\n    this.needsUpdate = true;\n    this._value = v;\n};\n\nUniform.prototype.updateValueArray3F = function ()\n{\n    if (this._loc == -1) this._loc = this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(), this._name);\n    else this.needsUpdate = false;\n\n    if (!this._value) return;\n    this._shader.getCgl().gl.uniform3fv(this._loc, this._value);\n    profileData.UniformCount++;\n};\n\nUniform.prototype.setValueArrayF = function (v)\n{\n    this.needsUpdate = true;\n    this._value = v;\n};\n\nUniform.prototype.updateValueArrayF = function ()\n{\n    if (this._loc == -1) this._loc = this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(), this._name);\n    else this.needsUpdate = false;\n\n    if (!this._value) return;\n    this._shader.getCgl().gl.uniform1fv(this._loc, this._value);\n    profileData.UniformCount++;\n};\n\nUniform.prototype.updateValue3F = function ()\n{\n    if (!this._value)\n    {\n        return;\n    }\n    if (this._loc == -1)\n    {\n        this._loc = this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(), this._name);\n        profileData.ShaderGetUniform++;\n        profileData.ShaderGetUniformName = this._name;\n    }\n\n    this._shader.getCgl().gl.uniform3f(this._loc, this._value[0], this._value[1], this._value[2]);\n    this.needsUpdate = false;\n    profileData.UniformCount++;\n};\n\nUniform.prototype.setValue3F = function (v)\n{\n    if (!v) return;\n    if (!this._oldValue)\n    {\n        this._oldValue = [v[0] - 1, 1, 2];\n        this.needsUpdate = true;\n    }\n    else if (v[0] != this._oldValue[0] || v[1] != this._oldValue[1] || v[2] != this._oldValue[2])\n    {\n        this._oldValue[0] = v[0];\n        this._oldValue[1] = v[1];\n        this._oldValue[2] = v[2];\n        this.needsUpdate = true;\n    }\n\n    this._value = v;\n};\n\nUniform.prototype.updateValue2F = function ()\n{\n    if (!this._value) return;\n\n    if (this._loc == -1)\n    {\n        this._loc = this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(), this._name);\n        profileData.ShaderGetUniform++;\n        profileData.ShaderGetUniformName = this._name;\n    }\n\n    this._shader.getCgl().gl.uniform2f(this._loc, this._value[0], this._value[1]);\n    this.needsUpdate = false;\n    profileData.UniformCount++;\n};\n\nUniform.prototype.setValue2F = function (v)\n{\n    if (!v) return;\n    if (!this._oldValue)\n    {\n        this._oldValue = [v[0] - 1, 1];\n        this.needsUpdate = true;\n    }\n    else if (v[0] != this._oldValue[0] || v[1] != this._oldValue[1])\n    {\n        this._oldValue[0] = v[0];\n        this._oldValue[1] = v[1];\n        this.needsUpdate = true;\n    }\n\n    this._value = v;\n};\n\nUniform.prototype.updateValueT = function ()\n{\n    if (this._loc == -1)\n    {\n        this._loc = this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(), this._name);\n        profileData.ShaderGetUniform++;\n        profileData.ShaderGetUniformName = this._name;\n        if (this._loc == -1) console.log(\"texture this._loc unknown!!\");\n    }\n    profileData.UniformCount++;\n\n    this._shader.getCgl().gl.uniform1i(this._loc, this._value);\n    this.needsUpdate = false;\n};\n\nUniform.prototype.setValueT = function (v)\n{\n    this.needsUpdate = true;\n    this._value = v;\n};\n\nUniform.prototype.updateValue4F = function ()\n{\n    if (this._loc == -1)\n    {\n        this._loc = this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(), this._name);\n        profileData.ShaderGetUniform++;\n        profileData.ShaderGetUniformName = this._name;\n    }\n    this._shader.getCgl().gl.uniform4f(this._loc, this._value[0], this._value[1], this._value[2], this._value[3]);\n    profileData.UniformCount++;\n};\n\nUniform.prototype.setValue4F = function (v)\n{\n    this.needsUpdate = true;\n    this._value = v;\n};\n\nUniform.prototype.updateValueM4 = function ()\n{\n    if (this._loc == -1)\n    {\n        this._loc = this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(), this._name);\n        profileData.ShaderGetUniform++;\n        profileData.ShaderGetUniformName = this._name;\n    }\n    this._shader.getCgl().gl.uniformMatrix4fv(this._loc, false, this._value);\n    profileData.UniformCount++;\n};\n\nUniform.prototype.setValueM4 = function (v)\n{\n    this.needsUpdate = true;\n    this._value = v;\n};\n\n/**\n * @function setValue\n * @memberof Uniform\n * @instance\n * @param {Number|Array|Matrix|Texture} value\n */\n\n// export { Uniform };\n"
            },
            {
              "id": null,
              "identifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_mesh.js",
              "name": "./src/core/cgl/cgl_mesh.js",
              "index": 20,
              "index2": 16,
              "size": 17751,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
              ],
              "issuer": "/home/tom/cables_dev/cables/src/core/glpatch.js",
              "issuerId": null,
              "issuerName": "./src/core/glpatch.js",
              "issuerPath": [
                {
                  "id": 0,
                  "identifier": "multi /home/tom/cables_dev/cables/src/core/index.js",
                  "name": "multi ./src/core/index.js"
                },
                {
                  "id": null,
                  "identifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "name": "./src/core/index.js"
                },
                {
                  "id": null,
                  "identifier": "/home/tom/cables_dev/cables/src/core/glpatch.js",
                  "name": "./src/core/glpatch.js"
                }
              ],
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "assets": [
              ],
              "reasons": [
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_simplerect.js",
                  "module": "./src/core/cgl/cgl_simplerect.js",
                  "moduleName": "./src/core/cgl/cgl_simplerect.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./cgl_mesh",
                  "loc": "1:0-34"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_marker.js",
                  "module": "./src/core/cgl/cgl_marker.js",
                  "moduleName": "./src/core/cgl/cgl_marker.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./cgl_mesh",
                  "loc": "3:0-34"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_shader.js",
                  "module": "./src/core/cgl/cgl_shader.js",
                  "moduleName": "./src/core/cgl/cgl_shader.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./cgl_mesh",
                  "loc": "4:0-34"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/index.js",
                  "module": "./src/core/cgl/index.js",
                  "moduleName": "./src/core/cgl/index.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./cgl_mesh",
                  "loc": "6:0-40"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/glpatch.js",
                  "module": "./src/core/glpatch.js",
                  "moduleName": "./src/core/glpatch.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./cgl/cgl_mesh",
                  "loc": "6:0-38"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_marker.js",
                  "module": "./src/core/cgl/cgl_marker.js",
                  "moduleName": "./src/core/cgl/cgl_marker.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_mesh",
                  "loc": "16:17-21"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_simplerect.js",
                  "module": "./src/core/cgl/cgl_simplerect.js",
                  "moduleName": "./src/core/cgl/cgl_simplerect.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_mesh",
                  "loc": "17:15-19"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/index.js",
                  "module": "./src/core/cgl/index.js",
                  "moduleName": "./src/core/cgl/index.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_mesh",
                  "loc": "34:8-12"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/index.js",
                  "module": "./src/core/cgl/index.js",
                  "moduleName": "./src/core/cgl/index.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_mesh",
                  "loc": "35:8-12"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/glpatch.js",
                  "module": "./src/core/glpatch.js",
                  "moduleName": "./src/core/glpatch.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl/cgl_mesh",
                  "loc": "75:19-23"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_shader.js",
                  "module": "./src/core/cgl/cgl_shader.js",
                  "moduleName": "./src/core/cgl/cgl_shader.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_mesh",
                  "loc": "385:4-8"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_shader.js",
                  "module": "./src/core/cgl/cgl_shader.js",
                  "moduleName": "./src/core/cgl/cgl_shader.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_mesh",
                  "loc": "386:4-8"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_shader.js",
                  "module": "./src/core/cgl/cgl_shader.js",
                  "moduleName": "./src/core/cgl/cgl_shader.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_mesh",
                  "loc": "395:4-8"
                }
              ],
              "usedExports": [
                "Mesh",
                "MESH"
              ],
              "providedExports": [
                "Mesh",
                "MESH"
              ],
              "optimizationBailout": [
              ],
              "depth": 3,
              "source": "import { Uniform } from \"./cgl_shader_uniform\";\nimport { CONSTANTS } from \"./constants\";\nimport { profileData } from \"./cgl_profiledata\";\nimport { extendMeshWithFeedback } from \"./cgl_mesh_feedback\";\n\nconst MESH = {};\nMESH.lastMesh = null;\n\n/**\n * webgl renderable 3d object\n * @external CGL\n * @namespace Mesh\n * @hideconstructor\n * @param {Context} cgl\n * @param {Geometry} geometry\n * @param {Number} [glPrimitive]\n * @class\n * @example\n * const cgl=op.patch.cgl\n * const mesh=new CGL.Mesh(cgl, geometry);\n *\n * function render()\n * {\n *   mesh.render(cgl.getShader());\n * }\n */\nconst Mesh = function (_cgl, __geom, glPrimitive)\n{\n    this._cgl = _cgl;\n    this._bufVertexAttrib = null;\n    this._bufVerticesIndizes = this._cgl.gl.createBuffer();\n    this._attributes = [];\n    this._attribLocs = {};\n    this._geom = null;\n    this._lastShader = null;\n    this._numInstances = 0;\n    this._glPrimitive = glPrimitive;\n    this._preWireframeGeom = null;\n    this.addVertexNumbers = false;\n    this.feedBackAttributes = [];\n    this.setGeom(__geom);\n\n    this._feedBacks = [];\n    this._feedBacksChanged = false;\n    this._transformFeedBackLoc = -1;\n    this._lastAttrUpdate = 0;\n\n    Object.defineProperty(this, \"numInstances\", {\n        get()\n        {\n            return this._numInstances;\n        },\n        set(v)\n        {\n            this.setNumInstances(v);\n        },\n    });\n};\n\n/**\n * @function updateVertices\n * @memberof Mesh\n * @instance\n * @description update vertices only from a geometry\n * @param {Geometry} geometry\n */\nMesh.prototype.updateVertices = function (geom)\n{\n    this.setAttribute(CONSTANTS.SHADER.SHADERVAR_VERTEX_POSITION, geom.vertices, 3);\n};\n\nMesh.prototype.setAttributePointer = function (attrName, name, stride, offset)\n{\n    for (var i = 0; i < this._attributes.length; i++)\n    {\n        if (this._attributes[i].name == attrName)\n        {\n            if (!this._attributes[i].pointer) this._attributes[i].pointer = [];\n            this._attributes[i].pointer.push({\n                loc: -1,\n                name,\n                stride,\n                offset,\n                instanced: attrName == CONSTANTS.SHADER.SHADERVAR_INSTANCE_MMATRIX,\n            });\n        }\n    }\n};\n\nMesh.prototype.getAttribute = function (name)\n{\n    for (var i = 0; i < this._attributes.length; i++) if (this._attributes[i].name == name) return this._attributes[i];\n};\n\n/**\n * @function setAttribute\n * @description update attribute\n * @memberof Mesh\n * @instance\n * @param {String} attribute name\n * @param {Array} data\n * @param {Number} itemSize\n * @param {Object} options\n */\nMesh.prototype.addAttribute = Mesh.prototype.updateAttribute = Mesh.prototype.setAttribute = function (name, array, itemSize, options)\n{\n    var floatArray = null;\n    var cb = null;\n    var instanced = false;\n    var i = 0;\n    var numItems = array.length / itemSize;\n\n    if (numItems === 0) console.warn(\"CGL_MESH: num items in attribute \" + name + \" is ZERO\");\n\n    if (typeof options == \"function\")\n    {\n        cb = options;\n    }\n\n    if (typeof options == \"object\")\n    {\n        if (options.cb) cb = options.cb;\n        if (options.instanced) instanced = options.instanced;\n    }\n\n    if (name == CONSTANTS.SHADER.SHADERVAR_INSTANCE_MMATRIX) instanced = true;\n\n    if (!(array instanceof Float32Array))\n    {\n        floatArray = new Float32Array(array);\n        profileData.profileNonTypedAttrib++;\n        profileData.profileNonTypedAttribNames = this._geom.name + \" \" + name;\n    }\n    else floatArray = array;\n\n    for (i = 0; i < this._attributes.length; i++)\n    {\n        if (this._attributes[i].name == name)\n        {\n            this._attributes[i].numItems = numItems;\n            this._cgl.gl.bindBuffer(this._cgl.gl.ARRAY_BUFFER, this._attributes[i].buffer);\n            this._cgl.gl.bufferData(this._cgl.gl.ARRAY_BUFFER, floatArray, this._cgl.gl.DYNAMIC_DRAW);\n\n            return this._attributes[i];\n        }\n    }\n\n    var buffer = this._cgl.gl.createBuffer();\n\n    this._cgl.gl.bindBuffer(this._cgl.gl.ARRAY_BUFFER, buffer);\n    this._cgl.gl.bufferData(this._cgl.gl.ARRAY_BUFFER, floatArray, this._cgl.gl.DYNAMIC_DRAW);\n\n    var type = this._cgl.gl.FLOAT;\n    if (options && options.type) type = options.type;\n    var attr = {\n        buffer,\n        name,\n        cb,\n        itemSize,\n        numItems,\n        startItem: 0,\n        instanced,\n        type,\n    };\n\n    if (name == CONSTANTS.SHADER.SHADERVAR_VERTEX_POSITION) this._bufVertexAttrib = attr;\n    this._attributes.push(attr);\n\n    this._attribLocs = {};\n    // for(var at in this._attribLocs)\n    //     for(i=0;i<this._attributes.length;i++)\n    //     {\n    //         this._attribLocs[at].length=0;\n    //         // this._attributes[i].loc=-1;\n    //     }\n\n    return attr;\n};\n\nMesh.prototype.getAttributes = function ()\n{\n    return this._attributes;\n};\n\n/**\n * @function updateTexCoords\n * @description update texture coordinates only from a geometry\n * @memberof Mesh\n * @instance\n * @param {Geometry} geometry\n */\nMesh.prototype.updateTexCoords = function (geom)\n{\n    if (geom.texCoords && geom.texCoords.length > 0)\n    {\n        this.setAttribute(CONSTANTS.SHADER.SHADERVAR_VERTEX_TEXCOORD, geom.texCoords, 2);\n    }\n    else\n    {\n        var tcBuff = new Float32Array(Math.round((geom.vertices.length / 3) * 2));\n        this.setAttribute(CONSTANTS.SHADER.SHADERVAR_VERTEX_TEXCOORD, tcBuff, 2);\n    }\n};\n\nMesh.prototype._setVertexNumbers = function ()\n{\n    var numVerts = this._geom.vertices.length / 3;\n\n    if (!this._verticesNumbers || this._verticesNumbers.length != numVerts)\n    {\n        this._verticesNumbers = new Float32Array(numVerts);\n\n        for (var i = 0; i < numVerts; i++) this._verticesNumbers[i] = i;\n\n        this.setAttribute(CONSTANTS.SHADER.SHADERVAR_VERTEX_NUMBER, this._verticesNumbers, 1, (attr, geom, shader) =>\n        {\n            if (!shader.uniformNumVertices) shader.uniformNumVertices = new Uniform(shader, \"f\", \"numVertices\", numVerts);\n            shader.uniformNumVertices.setValue(numVerts);\n        });\n    }\n};\n\nMesh.prototype.setVertexIndices = function (vertIndices)\n{\n    if (vertIndices.length > 0)\n    {\n        for (var i = 0; i < vertIndices.length; i++)\n        {\n            if (vertIndices[i] >= this._geom.vertices.length / 3)\n            {\n                console.warn(\"invalid index in \" + this._geom.name);\n                return;\n            }\n        }\n\n        this._cgl.gl.bindBuffer(this._cgl.gl.ELEMENT_ARRAY_BUFFER, this._bufVerticesIndizes);\n\n        // todo cache this ?\n        // if(!this.vertIndicesTyped || this.vertIndicesTyped.length!=this._geom.verticesIndices.length)\n\n        if (!(vertIndices instanceof Uint16Array)) this.vertIndicesTyped = new Uint16Array(vertIndices);\n        else this.vertIndicesTyped = vertIndices;\n\n        this._cgl.gl.bufferData(this._cgl.gl.ELEMENT_ARRAY_BUFFER, this.vertIndicesTyped, this._cgl.gl.DYNAMIC_DRAW);\n        this._bufVerticesIndizes.itemSize = 1;\n        this._bufVerticesIndizes.numItems = vertIndices.length;\n    }\n    else this._bufVerticesIndizes.numItems = 0;\n};\n\n/**\n * @function setGeom\n * @memberof Mesh\n * @instance\n * @description set geometry for mesh\n * @param {Geometry} geometry\n */\nMesh.prototype.setGeom = function (geom)\n{\n    this._geom = geom;\n\n    MESH.lastMesh = null;\n    profileData.profileMeshSetGeom++;\n\n    this._disposeAttributes();\n    this.updateVertices(this._geom);\n    this.setVertexIndices(this._geom.verticesIndices);\n\n    if (this._geom.vertexNormals.length > 0) this.setAttribute(\"attrVertNormal\", this._geom.vertexNormals, 3);\n\n    this.updateTexCoords(this._geom);\n\n    if (this._geom.hasOwnProperty(\"tangents\") && this._geom.tangents && this._geom.tangents.length > 0) this.setAttribute(\"attrTangent\", this._geom.tangents, 3);\n    if (this._geom.hasOwnProperty(\"biTangents\") && this._geom.biTangents && this._geom.biTangents.length > 0) this.setAttribute(\"attrBiTangent\", this._geom.biTangents, 3);\n    if (this._geom.vertexColors.length > 0) this.setAttribute(\"attrVertColor\", this._geom.vertexColors, 4);\n\n    if (this.addVertexNumbers) this._setVertexNumbers();\n\n    var geomAttribs = this._geom.getAttributes();\n    for (var index in geomAttribs)\n    {\n        this.setAttribute(index, geomAttribs[index].data, geomAttribs[index].itemSize);\n    }\n};\n\nMesh.prototype._preBind = function (shader)\n{\n    for (var i = 0; i < this._attributes.length; i++)\n    {\n        if (this._attributes[i].cb)\n        {\n            this._attributes[i].cb(this._attributes[i], this._geom, shader);\n        }\n    }\n};\n\nMesh.prototype._bind = function (shader)\n{\n    if (shader != this._lastShader) this.unBind();\n    var attrLocs = [];\n    if (this._attribLocs[shader.id]) attrLocs = this._attribLocs[shader.id];\n    else this._attribLocs[shader.id] = attrLocs;\n\n    this._lastShader = shader;\n    var i = 0;\n    if (shader.lastCompile > this._lastAttrUpdate || attrLocs.length != this._attributes.length)\n    {\n        this._lastAttrUpdate = shader.lastCompile;\n        for (i = 0; i < this._attributes.length; i++) attrLocs[i] = -1;\n    }\n\n    for (i = 0; i < this._attributes.length; i++)\n    {\n        var attribute = this._attributes[i];\n        if (attrLocs[i] == -1)\n        {\n            if (attribute._attrLocationLastShaderTime != shader.lastCompile)\n            {\n                attribute._attrLocationLastShaderTime = shader.lastCompile;\n                attrLocs[i] = this._cgl.glGetAttribLocation(shader.getProgram(), attribute.name);\n                profileData.profileAttrLoc++;\n            }\n        }\n\n        if (attrLocs[i] != -1)\n        {\n            this._cgl.gl.enableVertexAttribArray(attrLocs[i]);\n            this._cgl.gl.bindBuffer(this._cgl.gl.ARRAY_BUFFER, attribute.buffer);\n\n            if (attribute.instanced)\n            {\n                // todo: easier way to fill mat4 attribs...\n                if (attribute.itemSize <= 4)\n                {\n                    if (!attribute.itemSize || attribute.itemSize == 0) console.log(\"instanced attrib itemsize error\", this._geom.name, attribute);\n\n                    this._cgl.gl.vertexAttribPointer(attrLocs[i], attribute.itemSize, attribute.type, false, attribute.itemSize * 4, 0);\n                    this._cgl.gl.vertexAttribDivisor(attrLocs[i], 1);\n                }\n                else if (attribute.itemSize == 16)\n                {\n                    const stride = 16 * 4;\n\n                    this._cgl.gl.vertexAttribPointer(attrLocs[i], 4, attribute.type, false, stride, 0);\n                    this._cgl.gl.enableVertexAttribArray(attrLocs[i] + 1);\n                    this._cgl.gl.vertexAttribPointer(attrLocs[i] + 1, 4, attribute.type, false, stride, 4 * 4 * 1);\n                    this._cgl.gl.enableVertexAttribArray(attrLocs[i] + 2);\n                    this._cgl.gl.vertexAttribPointer(attrLocs[i] + 2, 4, attribute.type, false, stride, 4 * 4 * 2);\n                    this._cgl.gl.enableVertexAttribArray(attrLocs[i] + 3);\n                    this._cgl.gl.vertexAttribPointer(attrLocs[i] + 3, 4, attribute.type, false, stride, 4 * 4 * 3);\n\n                    this._cgl.gl.vertexAttribDivisor(attrLocs[i], 1);\n                    this._cgl.gl.vertexAttribDivisor(attrLocs[i] + 1, 1);\n                    this._cgl.gl.vertexAttribDivisor(attrLocs[i] + 2, 1);\n                    this._cgl.gl.vertexAttribDivisor(attrLocs[i] + 3, 1);\n                }\n                else\n                {\n                    console.log(\"unknown instance attrib size\", attribute.name);\n                }\n            }\n            else\n            {\n                if (!attribute.itemSize || attribute.itemSize == 0) console.log(\"attrib itemsize error\", this._geom.name, attribute);\n                this._cgl.gl.vertexAttribPointer(attrLocs[i], attribute.itemSize, attribute.type, false, attribute.itemSize * 4, 0);\n\n                if (attribute.pointer)\n                {\n                    for (var ip = 0; ip < attribute.pointer.length; ip++)\n                    {\n                        var pointer = attribute.pointer[ip];\n\n                        if (pointer.loc == -1) pointer.loc = this._cgl.glGetAttribLocation(shader.getProgram(), pointer.name);\n                        profileData.profileAttrLoc++;\n\n                        this._cgl.gl.enableVertexAttribArray(pointer.loc);\n                        // this._cgl.gl.bindBuffer(this._cgl.gl.ARRAY_BUFFER, attribute.buffer);\n                        this._cgl.gl.vertexAttribPointer(pointer.loc, attribute.itemSize, attribute.type, false, pointer.stride, pointer.offset);\n                    }\n                }\n                this.bindFeedback(attribute);\n            }\n        }\n    }\n\n    if (this._bufVerticesIndizes.numItems !== 0) this._cgl.gl.bindBuffer(this._cgl.gl.ELEMENT_ARRAY_BUFFER, this._bufVerticesIndizes);\n};\n\nMesh.prototype.unBind = function ()\n{\n    var shader = this._lastShader;\n    this._lastShader = null;\n    if (!shader) return;\n\n    var attrLocs = [];\n    if (this._attribLocs[shader.id]) attrLocs = this._attribLocs[shader.id];\n    else this._attribLocs[shader.id] = attrLocs;\n\n    MESH.lastMesh = null;\n\n    for (var i = 0; i < this._attributes.length; i++)\n    {\n        if (this._attributes[i].instanced)\n        {\n            // todo: easier way to fill mat4 attribs...\n            if (this._attributes[i].itemSize <= 4)\n            {\n                if (attrLocs[i] != -1) this._cgl.gl.vertexAttribDivisor(attrLocs[i], 0);\n                if (attrLocs[i] >= 0) this._cgl.gl.disableVertexAttribArray(attrLocs[i]);\n            }\n            else\n            {\n                this._cgl.gl.vertexAttribDivisor(attrLocs[i], 0);\n                this._cgl.gl.vertexAttribDivisor(attrLocs[i] + 1, 0);\n                this._cgl.gl.vertexAttribDivisor(attrLocs[i] + 2, 0);\n                this._cgl.gl.vertexAttribDivisor(attrLocs[i] + 3, 0);\n                this._cgl.gl.disableVertexAttribArray(attrLocs[i] + 1);\n                this._cgl.gl.disableVertexAttribArray(attrLocs[i] + 2);\n                this._cgl.gl.disableVertexAttribArray(attrLocs[i] + 3);\n            }\n        }\n\n        if (attrLocs[i] != -1) this._cgl.gl.disableVertexAttribArray(attrLocs[i]);\n    }\n};\n\nMesh.prototype.meshChanged = function ()\n{\n    return this._cgl.lastMesh && this._cgl.lastMesh != this;\n};\n\nMesh.prototype.printDebug = function (shader)\n{\n    console.log(\"--attributes\");\n    for (i = 0; i < this._attributes.length; i++)\n    {\n\n        console.log(\"attribute \" + i + \" \" + this._attributes[i].name);\n    }\n};\n\nMesh.prototype.setNumVertices = function (num)\n{\n    this._bufVertexAttrib.numItems = num;\n};\n\n/**\n * @function render\n * @memberof Mesh\n * @instance\n * @description draw mesh to screen\n * @param {Shader} shader\n */\nMesh.prototype.render = function (shader)\n{\n    // TODO: enable/disablevertex only if the mesh has changed... think drawing 10000x the same mesh\n\n    if (!shader) return;\n    var i = 0;\n\n    if (!shader.wireframe && !this._geom.isIndexed() && this._preWireframeGeom) this.setGeom(this._preWireframeGeom);\n    if (shader.wireframe && this._geom.isIndexed())\n    {\n        this._preWireframeGeom = this._geom;\n        this._geom = this._geom.copy();\n        this._geom.unIndex();\n        this._geom.calcBarycentric();\n        this.setGeom(this._geom);\n        this.setAttribute(\"attrBarycentric\", this._geom.barycentrics, 3);\n    }\n\n    var needsBind = false;\n    if (MESH.lastMesh != this)\n    {\n        if (MESH.lastMesh) MESH.lastMesh.unBind();\n        needsBind = true;\n    }\n\n    // var needsBind=false;\n    //     {\n    //     needsBind=true;\n    //         }\n    if (needsBind) this._preBind(shader);\n\n    shader.bind();\n\n    if (shader.bindTextures) shader.bindTextures();\n\n    // if(needsBind)\n    this._bind(shader);\n    if (this.addVertexNumbers) this._setVertexNumbers();\n\n    MESH.lastMesh = this;\n\n    var prim = this._cgl.gl.TRIANGLES;\n    if (this._glPrimitive !== undefined) prim = this._glPrimitive;\n    if (shader.glPrimitive !== null) prim = shader.glPrimitive;\n\n\n    if (this.hasFeedbacks())\n    {\n        this.drawFeedbacks(shader, prim);\n    }\n    else if (this._bufVerticesIndizes.numItems === 0)\n    {\n        if (this._numInstances === 0) this._cgl.gl.drawArrays(prim, this._bufVertexAttrib.startItem, this._bufVertexAttrib.numItems - this._bufVertexAttrib.startItem);\n        else this._cgl.gl.drawArraysInstanced(prim, this._bufVertexAttrib.startItem, this._bufVertexAttrib.numItems, this._numInstances);\n    }\n    else\n    if (this._numInstances === 0) this._cgl.gl.drawElements(prim, this._bufVerticesIndizes.numItems, this._cgl.gl.UNSIGNED_SHORT, 0);\n    else this._cgl.gl.drawElementsInstanced(prim, this._bufVerticesIndizes.numItems, this._cgl.gl.UNSIGNED_SHORT, 0, this._numInstances);\n};\n\nMesh.prototype.setNumInstances = function (n)\n{\n    this._numInstances = n;\n    if (n > 0)\n    {\n        var indexArr = new Float32Array(n);\n        for (var i = 0; i < n; i++) indexArr[i] = i;\n        this.setAttribute(\"instanceIndex\", indexArr, 1, { instanced: true });\n    }\n};\n\nMesh.prototype._disposeAttributes = function ()\n{\n    if (!this._attributes) return;\n\n    for (var i = 0; i < this._attributes.length; i++)\n    {\n        if (this._attributes[i].buffer)\n        {\n            this._cgl.gl.deleteBuffer(this._attributes[i].buffer);\n            this._attributes[i].buffer = null;\n        }\n    }\n    this._attributes.length = 0;\n};\n\nMesh.prototype.dispose = function ()\n{\n    if (this._bufVertexAttrib && this._bufVertexAttrib.buffer) this._cgl.gl.deleteBuffer(this._bufVertexAttrib.buffer);\n    if (this._bufVerticesIndizes) this._cgl.gl.deleteBuffer(this._bufVerticesIndizes);\n\n    this._disposeAttributes();\n};\n\nextendMeshWithFeedback(Mesh);\n\nexport { Mesh, MESH };\n"
            },
            {
              "id": null,
              "identifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_shader.js",
              "name": "./src/core/cgl/cgl_shader.js",
              "index": 24,
              "index2": 21,
              "size": 28643,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
              ],
              "issuer": "/home/tom/cables_dev/cables/src/core/glpatch.js",
              "issuerId": null,
              "issuerName": "./src/core/glpatch.js",
              "issuerPath": [
                {
                  "id": 0,
                  "identifier": "multi /home/tom/cables_dev/cables/src/core/index.js",
                  "name": "multi ./src/core/index.js"
                },
                {
                  "id": null,
                  "identifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "name": "./src/core/index.js"
                },
                {
                  "id": null,
                  "identifier": "/home/tom/cables_dev/cables/src/core/glpatch.js",
                  "name": "./src/core/glpatch.js"
                }
              ],
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "assets": [
              ],
              "reasons": [
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/glpatch.js",
                  "module": "./src/core/glpatch.js",
                  "moduleName": "./src/core/glpatch.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./cgl/cgl_shader",
                  "loc": "3:0-42"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_state.js",
                  "module": "./src/core/cgl/cgl_state.js",
                  "moduleName": "./src/core/cgl/cgl_state.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./cgl_shader",
                  "loc": "3:0-38"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_marker.js",
                  "module": "./src/core/cgl/cgl_marker.js",
                  "moduleName": "./src/core/cgl/cgl_marker.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./cgl_shader",
                  "loc": "4:0-38"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/index.js",
                  "module": "./src/core/cgl/index.js",
                  "moduleName": "./src/core/cgl/index.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./cgl_shader",
                  "loc": "10:0-38"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_marker.js",
                  "module": "./src/core/cgl/cgl_marker.js",
                  "moduleName": "./src/core/cgl/cgl_marker.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_shader",
                  "loc": "19:19-25"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/index.js",
                  "module": "./src/core/cgl/index.js",
                  "moduleName": "./src/core/cgl/index.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_shader",
                  "loc": "37:8-14"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/glpatch.js",
                  "module": "./src/core/glpatch.js",
                  "moduleName": "./src/core/glpatch.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl/cgl_shader",
                  "loc": "37:21-27"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_state.js",
                  "module": "./src/core/cgl/cgl_state.js",
                  "moduleName": "./src/core/cgl/cgl_state.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_shader",
                  "loc": "76:27-33"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_state.js",
                  "module": "./src/core/cgl/cgl_state.js",
                  "moduleName": "./src/core/cgl/cgl_state.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_shader",
                  "loc": "79:27-33"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_state.js",
                  "module": "./src/core/cgl/cgl_state.js",
                  "moduleName": "./src/core/cgl/cgl_state.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_shader",
                  "loc": "79:60-66"
                }
              ],
              "usedExports": [
                "Shader"
              ],
              "providedExports": [
                "SHADER_VARS",
                "Shader"
              ],
              "optimizationBailout": [
              ],
              "depth": 3,
              "source": "import { ShaderLibMods } from \"./cgl_shader_lib\";\nimport { now } from \"../timer\";\nimport { simpleId, generateUUID } from \"../utils\";\nimport { MESH } from \"./cgl_mesh\";\n// import { CGL } from \"./index\";\nimport { profileData } from \"./cgl_profiledata\";\nimport{ CONSTANTS } from \"./constants\";\n\n// ---------------------------------------------------------------------------\nexport const SHADER_VARS = {\nprofileShaderBinds: 0,\n// profileUniformCount: 0,\nprofileShaderCompiles: 0,\nprofileVideosPlaying: 0,\nprofileMVPMatrixCount: 0,\n\n// default attributes\nSHADERVAR_VERTEX_POSITION: 'vPosition',\nSHADERVAR_VERTEX_NUMBER: 'attrVertIndex',\nSHADERVAR_VERTEX_TEXCOORD: 'attrTexCoord',\nSHADERVAR_INSTANCE_MMATRIX: 'instMat',\n\n// default uniforms\nSHADERVAR_UNI_PROJMAT: \"projMatrix\",\nSHADERVAR_UNI_VIEWMAT: \"viewMatrix\",\nSHADERVAR_UNI_MODELMAT: \"modelMatrix\",\nSHADERVAR_UNI_NORMALMAT: \"normalMatrix\",\nSHADERVAR_UNI_INVVIEWMAT: \"inverseViewMatrix\",\nSHADERVAR_UNI_VIEWPOS: \"camPos\",\n}\n// ---------------------------------------------------------------------------\n\n/**\n * @class\n * @external CGL\n * @namespace Shader\n * @hideconstructor\n * @example\n * var shader=new CGL.Shader(cgl,'MinimalMaterial');\n * shader.setSource(attachments.shader_vert,attachments.shader_frag);\n */\nconst Shader = function(_cgl, _name) {\n    if (!_cgl) throw \"shader constructed without cgl\";\n\n    this._cgl = _cgl;\n    this._name = _name || 'unknown';\n    this.glslVersion = 0;\n    if(_cgl.glVersion>1)this.glslVersion=300;\n\n    this.id=simpleId();\n    this._program = null;\n    this._uniforms = [];\n    this._drawBuffers=[true];\n    this._defines = [];\n    this._needsRecompile = true;\n\n    this._projMatrixUniform = null;\n    this._mvMatrixUniform = null;\n    this._mMatrixUniform = null;\n    this._vMatrixUniform = null;\n    this._camPosUniform = null;\n    this._normalMatrixUniform = null;\n    this._inverseViewMatrixUniform = null;\n\n    this._attrVertexPos = -1;\n    this.precision = _cgl.patch.config.glslPrecision||'highp';\n\n    this._pMatrixState =-1;\n    this._vMatrixState =-1;\n\n    this._modGroupCount = 0;\n    this._feedBackNames = [];\n    this._attributes = [];\n\n    this.glPrimitive = null;\n    this.offScreenPass = false;\n    this._extensions = [];\n    this.srcVert = this.getDefaultVertexShader();\n    this.srcFrag = this.getDefaultFragmentShader();\n    this.lastCompile = 0;\n\n    this._moduleNames = [];\n    this._modules = [];\n    this._moduleNumId = 0;\n\n    this._libs=[];\n\n    this._tempNormalMatrix=mat4.create();\n    this._tempCamPosMatrix = mat4.create();\n    this._tempInverseViewMatrix = mat4.create();\n\n    this.setModules(['MODULE_VERTEX_POSITION','MODULE_COLOR','MODULE_BEGIN_FRAG']);\n};\n\nShader.prototype.getCgl = function() {\n    return this._cgl;\n};\n\nShader.prototype.getName=function(){\n    return this._name;\n}\n\nShader.prototype.enableExtension = function(name) {\n    this.setWhyCompile(\"enable extension \"+name);\n    this._needsRecompile = true;\n    this._extensions.push(name);\n};\n\nShader.prototype.getAttrVertexPos = function() {\n    return this._attrVertexPos;\n};\n\nShader.prototype.hasTextureUniforms = function() {\n    for (var i = 0; i < this._uniforms.length; i++)\n        if (this._uniforms[i].getType() == 't') return true;\n    return false;\n};\n\nShader.prototype.setWhyCompile=function(why)\n{\n    // console.log('recompile because '+why);\n};\n\nShader.prototype.setSource = function(srcVert, srcFrag) {\n    this.srcVert = srcVert;\n    this.srcFrag = srcFrag;\n    this.setWhyCompile(\"Source changed\");\n    this._needsRecompile = true;\n};\n\n\nShader.prototype._addLibs=function(src)\n{\n    for(var id in ShaderLibMods)\n    {\n        if(src.indexOf(id)>-1)\n        {\n            var lib=new ShaderLibMods[id]();\n            src = src.replace('{{'+id+'}}', lib.srcHeadFrag);\n            this._libs.push(lib);\n            if(lib.initUniforms)lib.initUniforms(this);\n        }\n    }\n\n    return src;\n}\n\n\n\nShader.prototype.compile = function() {\n    profileData.profileShaderCompiles++;\n    profileData.profileShaderCompileName = this._name;\n\n    var extensionString = '';\n    if (this._extensions)\n        for (i = 0; i < this._extensions.length; i++)\n            extensionString += '#extension '+this._extensions[i]+' : enable'.endl();\n\n    var definesStr = '';\n    var i = 0;\n    for (i = 0; i < this._defines.length; i++)\n        definesStr += '#define ' + this._defines[i][0] + ' ' + this._defines[i][1] + ''.endl();\n\n    if(this._uniforms)\n        for (i = 0; i < this._uniforms.length; i++)\n            this._uniforms[i].resetLoc();\n\n    if (this.hasTextureUniforms()) definesStr += '#define HAS_TEXTURES'.endl();\n\n    var vs = '';\n    var fs = '';\n\n    if (this.glslVersion == 300)\n    {\n        var drawBufferStr = '';\n        var count=0;\n\n        if(this.srcFrag.indexOf(\"outColor0\")>-1)this._drawBuffers[0]=true;\n        if(this.srcFrag.indexOf(\"outColor1\")>-1)this._drawBuffers[1]=true;\n        if(this.srcFrag.indexOf(\"outColor2\")>-1)this._drawBuffers[2]=true;\n        if(this.srcFrag.indexOf(\"outColor3\")>-1)this._drawBuffers[3]=true;\n\n        if(this._drawBuffers.length==1)\n        {\n            // drawBufferStr+='#define gl_FragColor outColor'+i+''.endl();\n            drawBufferStr='out vec4 outColor;'.endl();\n            drawBufferStr+='#define gl_FragColor outColor'.endl();\n        }\n        else\n        {\n            var count=0;\n            drawBufferStr+='vec4 outColor;'.endl();\n\n\n            for(var i=0;i<this._drawBuffers.length;i++)\n            {\n                // if(this._drawBuffers[i])\n                {\n                    if(count==0)\n                    {\n                        drawBufferStr+='#define gl_FragColor outColor'+i+''.endl();\n                        // drawBufferStr+='#define outColor outColor'+i+''.endl();\n                    }\n                    drawBufferStr+='layout(location = '+i+') out vec4 outColor'+i+';'.endl();\n                }\n                count++;\n            }\n\n        }\n\n\n        vs = '#version 300 es'\n            .endl() + '// '\n            .endl() + '// vertex shader '+this._name\n            .endl() + '// '\n            .endl() + 'precision ' + this.precision+' float;'\n            .endl() + ''\n            .endl() + '#define WEBGL2'\n            .endl() + '#define texture2D texture'\n            .endl() + '#define UNI uniform'\n            .endl() + '#define IN in'\n            .endl() + '#define OUT out'\n            .endl();\n\n        fs = '#version 300 es'\n            .endl() + '// '\n            .endl() + '// fragment shader '+this._name\n            .endl() + '// '\n            .endl() + 'precision ' + this.precision+' float;'\n            .endl() + ''\n            .endl() + '#define WEBGL2'\n            .endl() + '#define texture2D texture'\n            .endl() + '#define IN in'\n            .endl() + '#define UNI uniform'\n            .endl() + drawBufferStr\n\n            .endl();\n\n    } else {\n        fs = ''\n            .endl() + '// '\n            .endl() + '// fragment shader '+this._name\n            .endl() + '// '\n            .endl() + '#define WEBGL1'\n            .endl() + '#define texture texture2D'\n            .endl() + '#define outColor gl_FragColor'\n            .endl() + '#define IN varying'\n            .endl() + '#define UNI uniform'\n            .endl();\n\n        vs = ''\n            .endl() + '// '\n            .endl() + '// vertex shader '+this._name\n            .endl() + '// '\n            .endl() + '#define WEBGL1'\n            .endl() + '#define texture texture2D'\n            .endl() + '#define OUT varying'\n            .endl() + '#define IN attribute'\n            .endl() + '#define UNI uniform'\n            .endl();\n        }\n\n    if (fs.indexOf(\"precision\") == -1) fs = 'precision ' + this.precision+' float;'.endl() + fs;\n    if (vs.indexOf(\"precision\") == -1) vs = 'precision ' + this.precision+' float;'.endl() + vs;\n\n    if( /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) )\n    {\n        fs+='#define MOBILE'.endl();\n        vs+='#define MOBILE'.endl();\n    }\n\n    vs = extensionString + vs + definesStr + this.srcVert;\n    fs = extensionString + fs + definesStr + this.srcFrag;\n\n    var srcHeadVert = '';\n    var srcHeadFrag = '';\n\n    this._modules.sort(function(a, b) {\n        return a.group - b.group;\n    });\n\n    this._modules.sort(function(a, b) {\n        return a.priority||0 - b.priority||0;\n    });\n\n    var addedAttributes=false;\n\n    for (i = 0; i < this._moduleNames.length; i++) {\n        var srcVert = '';\n        var srcFrag = '';\n\n        for (var j = 0; j < this._modules.length; j++) {\n            if (this._modules[j].name == this._moduleNames[i]) {\n\n                srcHeadVert+='\\n//---- MOD: '+this._modules[j].group+': '+j+' - '+this._modules[j].title+' ------\\n';\n                srcHeadFrag+='\\n//---- MOD: '+this._modules[j].group+': '+j+' - '+this._modules[j].title+' ------\\n';\n\n                srcVert+='\\n\\n//---- MOD: '+this._modules[j].title+' ------\\n';\n                srcFrag+='\\n\\n//---- MOD: '+this._modules[j].title+' ------\\n';\n\n                if(!addedAttributes)\n                {\n                    addedAttributes=true;\n\n                    for(var k=0;k<this._attributes.length;k++)\n                    {\n                        if(this._attributes[k].name && this._attributes[k].type)\n                        {\n                            srcHeadVert+=''\n                                .endl()+'#ifndef ATTRIB_'+this._attributes[k].name\n                                .endl()+'  #define ATTRIB_'+this._attributes[k].name\n                                .endl()+'  IN '+this._attributes[k].type+' '+this._attributes[k].name+';'\n                                .endl()+'#endif';\n\n                            if(this._attributes[k].nameFrag)\n                            {\n                                srcHeadVert+=''\n                                    .endl()+'#ifndef ATTRIB_'+this._attributes[k].nameFrag\n                                    .endl()+'  #define ATTRIB_'+this._attributes[k].nameFrag\n                                    .endl()+'  OUT '+this._attributes[k].type+' '+this._attributes[k].nameFrag+';'\n                                    .endl()+'#endif';\n\n                                srcVert+=''\n                                    .endl()+this._attributes[k].nameFrag+'='+this._attributes[k].name+';';\n                            }\n\n                            srcHeadFrag+=''\n                                .endl()+'#ifndef ATTRIB_'+this._attributes[k].nameFrag\n                                .endl()+'  #define ATTRIB_'+this._attributes[k].nameFrag\n                                .endl()+'  IN '+this._attributes[k].type+' '+this._attributes[k].nameFrag+';'\n                                .endl()+'#endif';\n                        }\n                    }\n                }\n\n                srcHeadVert += this._modules[j].srcHeadVert || '';\n                srcHeadFrag += this._modules[j].srcHeadFrag || '';\n                srcVert += this._modules[j].srcBodyVert || '';\n                srcFrag += this._modules[j].srcBodyFrag || '';\n\n                srcHeadVert+='\\n//---- end mod ------\\n';\n                srcHeadFrag+='\\n//---- end mod ------\\n';\n\n                srcVert+='\\n//---- end mod ------\\n';\n                srcFrag+='\\n//---- end mod ------\\n';\n\n                srcVert = srcVert.replace(/{{mod}}/g, this._modules[j].prefix);\n                srcFrag = srcFrag.replace(/{{mod}}/g, this._modules[j].prefix);\n                srcHeadVert = srcHeadVert.replace(/{{mod}}/g, this._modules[j].prefix);\n                srcHeadFrag = srcHeadFrag.replace(/{{mod}}/g, this._modules[j].prefix);\n\n                srcVert = srcVert.replace(/MOD_/g, this._modules[j].prefix);\n                srcFrag = srcFrag.replace(/MOD_/g, this._modules[j].prefix);\n                srcHeadVert = srcHeadVert.replace(/MOD_/g, this._modules[j].prefix);\n                srcHeadFrag = srcHeadFrag.replace(/MOD_/g, this._modules[j].prefix);\n            }\n        }\n\n\n        vs = vs.replace('{{' + this._moduleNames[i] + '}}', srcVert);\n        fs = fs.replace('{{' + this._moduleNames[i] + '}}', srcFrag);\n    }\n    vs = vs.replace('{{MODULES_HEAD}}', srcHeadVert);\n    fs = fs.replace('{{MODULES_HEAD}}', srcHeadFrag);\n\n    vs=this._addLibs(vs);\n    fs=this._addLibs(fs);\n\n    if (!this._program) {\n        this._program = this._createProgram(vs, fs);\n    } else {\n        // this.vshader=createShader(vs, gl.VERTEX_SHADER, this.vshader );\n        // this.fshader=createShader(fs, gl.FRAGMENT_SHADER, this.fshader );\n        // linkProgram(program);\n        this._program = this._createProgram(vs, fs);\n\n        this._projMatrixUniform = null;\n\n        for (i = 0; i < this._uniforms.length; i++) this._uniforms[i].resetLoc();\n    }\n\n    this.finalShaderFrag = fs;\n    this.finalShaderVert = vs;\n\n    MESH.lastMesh = null;\n    MESH.lastShader = null;\n\n    this._needsRecompile = false;\n    this.lastCompile = now();\n};\n\nShader.prototype.bind = function()\n{\n    var i = 0;\n    MESH.lastShader = this;\n\n    if (!this._program || this._needsRecompile) this.compile();\n\n    if (!this._projMatrixUniform) {\n        this._attrVertexPos = this._cgl.glGetAttribLocation(this._program, CONSTANTS.SHADER.SHADERVAR_VERTEX_POSITION);\n        this._projMatrixUniform = this._cgl.gl.getUniformLocation(this._program, CONSTANTS.SHADER.SHADERVAR_UNI_PROJMAT);\n        this._mvMatrixUniform = this._cgl.gl.getUniformLocation(this._program, \"mvMatrix\");\n        this._vMatrixUniform = this._cgl.gl.getUniformLocation(this._program, CONSTANTS.SHADER.SHADERVAR_UNI_VIEWMAT);\n        this._mMatrixUniform = this._cgl.gl.getUniformLocation(this._program, CONSTANTS.SHADER.SHADERVAR_UNI_MODELMAT);\n        this._camPosUniform = this._cgl.gl.getUniformLocation(this._program, CONSTANTS.SHADER.SHADERVAR_UNI_VIEWPOS);\n        this._normalMatrixUniform = this._cgl.gl.getUniformLocation(this._program, CONSTANTS.SHADER.SHADERVAR_UNI_NORMALMAT);\n        this._inverseViewMatrixUniform = this._cgl.gl.getUniformLocation(this._program, CONSTANTS.SHADER.SHADERVAR_UNI_INVVIEWMAT);\n        for (i = 0; i < this._uniforms.length; i++) this._uniforms[i].needsUpdate = true;\n    }\n\n    if (this._cgl.currentProgram != this._program) {\n        profileData.profileShaderBinds++;\n        this._cgl.gl.useProgram(this._program);\n        this._cgl.currentProgram = this._program;\n    }\n\n    for (i = 0; i < this._uniforms.length; i++)\n        if (this._uniforms[i].needsUpdate) this._uniforms[i].updateValue();\n\n    if(this._pMatrixState!=this._cgl.getProjectionMatrixStateCount())\n    {\n        this._pMatrixState=this._cgl.getProjectionMatrixStateCount();\n        this._cgl.gl.uniformMatrix4fv(this._projMatrixUniform, false, this._cgl.pMatrix);\n        profileData.profileMVPMatrixCount++;\n    }\n\n    if (this._vMatrixUniform)\n    {\n        if(this._vMatrixState!=this._cgl.getViewMatrixStateCount())\n        {\n            this._cgl.gl.uniformMatrix4fv(this._vMatrixUniform, false, this._cgl.vMatrix);\n            profileData.profileMVPMatrixCount++;\n            this._vMatrixState=this._cgl.getViewMatrixStateCount();\n\n            if (this._inverseViewMatrixUniform)\n            {\n                mat4.invert(this._tempInverseViewMatrix, this._cgl.vMatrix);\n                this._cgl.gl.uniformMatrix4fv(this._inverseViewMatrixUniform, false, this._tempInverseViewMatrix);\n                profileData.profileMVPMatrixCount++;\n            }\n        }\n        this._cgl.gl.uniformMatrix4fv(this._mMatrixUniform, false, this._cgl.mMatrix);\n        profileData.profileMVPMatrixCount++;\n\n        if(this._camPosUniform)\n        {\n            mat4.invert(this._tempCamPosMatrix, this._cgl.vMatrix);\n            this._cgl.gl.uniform3f(this._camPosUniform, this._tempCamPosMatrix[12], this._tempCamPosMatrix[13], this._tempCamPosMatrix[14]);\n            profileData.profileMVPMatrixCount++;\n        }\n    }\n    else\n    {\n        // mvmatrix deprecated....\n        var tempmv=mat4.create();\n\n        mat4.mul(tempmv, this._cgl.vMatrix, this._cgl.mMatrix);\n        this._cgl.gl.uniformMatrix4fv(this._mvMatrixUniform, false, tempmv);\n        profileData.profileMVPMatrixCount++;\n    }\n\n    if (this._normalMatrixUniform)\n    {\n        mat4.mul(this._tempNormalMatrix, this._cgl.vMatrix, this._cgl.mMatrix);\n\n        // this._tempNormalMatrix[3]=0;\n        // this._tempNormalMatrix[6]=0;\n        // this._tempNormalMatrix[9]=0;\n        // this._tempNormalMatrix[12]=0;\n        // this._tempNormalMatrix[13]=0;\n        // this._tempNormalMatrix[14]=0;\n        // this._tempNormalMatrix[15]=1;\n\n        mat4.invert(this._tempNormalMatrix, this._tempNormalMatrix);\n        mat4.transpose(this._tempNormalMatrix, this._tempNormalMatrix);\n\n        this._cgl.gl.uniformMatrix4fv(this._normalMatrixUniform, false, this._tempNormalMatrix);\n        profileData.profileMVPMatrixCount++;\n    }\n\n    for(var i=0;i<this._libs.length;i++)\n    {\n        if(this._libs[i].onBind)this._libs[i].onBind.bind(this._libs[i])(this._cgl,this);\n    }\n};\n\n\n/**\n * easily enable/disable a define without a value\n * @function toggleDefine\n * @memberof Shader\n * @instance\n * @param {name} name\n */\nShader.prototype.toggleDefine = function(name, enabled)\n{\n    if(enabled) this.define(name);\n        else this.removeDefine(name);\n};\n\n/**\n * add a define to a shader, e.g.  #define DO_THIS_THAT 1\n * @function define\n * @memberof Shader\n * @instance\n * @param {String} name\n * @param {Any} value (can be empty)\n\n */\nShader.prototype.define = function(name, value)\n{\n    if (!value) value = '';\n    for (var i = 0; i < this._defines.length; i++)\n    {\n        if (this._defines[i][0] == name && this._defines[i][1] == value) return;\n        if (this._defines[i][0] == name) {\n            this._defines[i][1] = value;\n            this._needsRecompile = true;\n            return;\n        }\n    }\n\n    this._defines.push([name, value]);\n    this._needsRecompile = true;\n    this.setWhyCompile(\"define \"+name+\" \"+value);\n};\n\nShader.prototype.getDefines=function()\n{\n    return this._defines;\n};\n\nShader.prototype.getDefine = function(name) {\n    for (var i = 0; i < this._defines.length; i++)\n        if (this._defines[i][0] == name) return this._defines[i][1];\n    return null;\n};\n\nShader.prototype.hasDefine = function(name) {\n    for (var i = 0; i < this._defines.length; i++)\n        if (this._defines[i][0] == name) return true;\n};\n\n/**\n * remove a define from a shader\n * @param {name} name\n * @function removeDefine\n * @memberof Shader\n * @instance\n */\nShader.prototype.removeDefine = function(name) {\n    for (var i = 0; i < this._defines.length; i++) {\n        if (this._defines[i][0] == name) {\n            this._defines.splice(i, 1);\n            this._needsRecompile = true;\n            return;\n        }\n    }\n};\n\n\n\n\n\n\n\n/**\n * remove a module from shader\n * @function removeModule\n * @memberof Shader\n * @instance\n * @param {shaderModule} module the module to be removed\n */\nShader.prototype.removeModule = function(mod)\n{\n    for (var i = 0; i < this._modules.length; i++)\n    {\n        if(mod && mod.id)\n        {\n            if (this._modules[i].id == mod.id || !this._modules[i])\n            {\n                var found=true;\n                while(found)\n                {\n                    found=false;\n                    for(var j=0;j<this._uniforms.length;j++)\n                    {\n                        if(this._uniforms[j].getName().indexOf(mod.prefix)==0)\n                        {\n                            this._uniforms.splice(j, 1);\n                            found=true;\n                            continue;\n                        }\n                    }\n                }\n\n                this._needsRecompile = true;\n                this.setWhyCompile(\"remove module \"+mod.title);\n                this._modules.splice(i, 1);\n                break;\n            }\n        }\n    }\n};\n\n\nShader.prototype.getNumModules = function() {\n    return this._modules.length;\n};\n\n\nShader.prototype.getCurrentModules=function(){return this._modules;};\n\n\n/**\n * add a module\n * @function addModule\n * @memberof Shader\n * @instance\n * @param {shaderModule} module the module to be added\n * @param {shaderModule} [sibling] sibling module, new module will share the same group\n */\nShader.prototype.addModule = function(mod, sibling) {\n    if(!mod.id) mod.id = generateUUID();\n    if(!mod.numId) mod.numId = this._moduleNumId;\n    if(!mod.num)mod.num = this._modules.length;\n\n    if(sibling) mod.group = sibling.group;\n        else mod.group = this._modGroupCount++;\n\n    mod.prefix = 'mod' + mod.group;\n\n    this._modules.push(mod);\n    this._needsRecompile = true;\n    this.setWhyCompile(\"add module \"+mod.title);\n    this._moduleNumId++;\n\n    return mod;\n};\n\nShader.prototype.setModules = function(names) {\n    this._moduleNames = names;\n};\n\nShader.prototype.dispose=function()\n{\n    this._cgl.gl.deleteProgram(this._program);\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nShader.prototype.setDrawBuffers = function(arr) {\n    this._drawBuffers=arr;\n    this._needsRecompile=true;\n};\n\nShader.prototype.getUniforms = function() {\n    return this._uniforms;\n};\n\nShader.prototype.getUniform = function(name) {\n    for (var i = 0; i < this._uniforms.length; i++)\n        if (this._uniforms[i].getName() == name)\n            return this._uniforms[i];\n    return null;\n};\n\nShader.prototype.removeUniform = function(name) {\n    for (var i = 0; i < this._uniforms.length; i++) {\n        if (this._uniforms[i].getName() == name) {\n            this._uniforms.splice(i, 1);\n        }\n    }\n    this._needsRecompile = true;\n    this.setWhyCompile(\"remove uniform \"+name);\n};\n\n/**\n * add a uniform to the shader\n * @param {Uniform} uniform\n * @memberof Shader\n * @instance\n * @function\n */\nShader.prototype.addUniform = function(uni) {\n    this._uniforms.push(uni);\n    this.setWhyCompile(\"add uniform \"+name);\n    this._needsRecompile = true;\n};\n\nShader.prototype._createProgram = function(vstr, fstr) {\n    var program = this._cgl.gl.createProgram();\n    this.vshader = Shader.createShader(this._cgl, vstr, this._cgl.gl.VERTEX_SHADER, this);\n    this.fshader = Shader.createShader(this._cgl, fstr, this._cgl.gl.FRAGMENT_SHADER, this);\n\n    this._cgl.gl.attachShader(program, this.vshader);\n    this._cgl.gl.attachShader(program, this.fshader);\n\n    this._linkProgram(program);\n    return program;\n};\n\nShader.prototype.hasErrors = function()\n{\n    return this._hasErrors;\n}\n\nShader.prototype._linkProgram = function(program)\n{\n    if (this._feedBackNames.length > 0) {\n        this._cgl.gl.transformFeedbackVaryings(program, this._feedBackNames, this._cgl.gl.SEPARATE_ATTRIBS);\n        // INTERLEAVED_ATTRIBS\n        //SEPARATE_ATTRIBS\n    }\n\n    this._cgl.gl.linkProgram(program);\n    this._cgl.gl.validateProgram(program);\n\n    // var infoLog = this._cgl.gl.getProgramInfoLog(program);\n    // if (infoLog) {\n    //     // console.log(name+' link programinfo: ',this._cgl.gl.getProgramInfoLog(program));\n    // }\n\n    if (!this._cgl.gl.getProgramParameter(program, this._cgl.gl.LINK_STATUS)) {\n\n\n        // todo print shaderinfolog!!!!\n\n        console.warn(this._cgl.gl.getShaderInfoLog(this.fshader));\n        console.warn(this._cgl.gl.getShaderInfoLog(this.vshader));\n\n        console.error(name + \" shader linking fail...\");\n        console.log('srcFrag',this.srcFrag);\n        console.log('srcVert',this.srcVert);\n        console.log(name + ' programinfo: ', this._cgl.gl.getProgramInfoLog(program));\n\n        console.log('--------------------------------------');\n        console.log(this);\n        console.log('--------------------------------------');\n\n        name = \"errorshader\";\n        this.setSource(Shader.getDefaultVertexShader(), Shader.getErrorFragmentShader());\n    }\n    else\n    {\n\n    }\n\n    // var error = this._cgl.gl.getError();\n    // if (error == this._cgl.gl.NO_ERROR )\n    // console.log('no error: ',error);\n    // else\n    //   console.log('get error: ',error);\n    // if(this._feedBackNames.length>0)\n    //    this._cgl.gl.transformFeedbackVaryings( program, [], this._cgl.gl.SEPARATE_ATTRIBS );\n\n};\n\nShader.prototype.getProgram = function() {\n    return this._program;\n};\n\nShader.prototype.setFeedbackNames = function(names) {\n    this._needsRecompile = true;\n    this._feedBackNames = names;\n};\n\nShader.prototype.getDefaultVertexShader = Shader.getDefaultVertexShader = function() {\n    return ''\n        .endl() + '{{MODULES_HEAD}}'\n        .endl() + 'IN vec3 vPosition;'\n        .endl() + 'IN vec2 attrTexCoord;'\n        .endl() + 'IN vec3 attrVertNormal;'\n        .endl() + 'IN float attrVertIndex;'\n\n        .endl() + 'OUT vec2 texCoord;'\n        .endl() + 'OUT vec3 norm;'\n        .endl() + 'UNI mat4 projMatrix;'\n        .endl() + 'UNI mat4 viewMatrix;'\n        .endl() + 'UNI mat4 modelMatrix;'\n\n        .endl() + 'void main()'\n        .endl() + '{'\n        .endl() + '   texCoord=attrTexCoord;'\n        .endl() + '   norm=attrVertNormal;'\n        .endl() + '   vec4 pos=vec4(vPosition,  1.0);'\n        .endl() + '   mat4 mMatrix=modelMatrix;'\n        .endl() + '   {{MODULE_VERTEX_POSITION}}'\n        .endl() + '   gl_Position = projMatrix * (viewMatrix*mMatrix) * pos;'\n        .endl() + '}';\n};\n\nShader.prototype.getDefaultFragmentShader = Shader.getDefaultFragmentShader = function(r,g,b)\n{\n    if(r==undefined)\n    {\n        r=0.5;\n        g=0.5;\n        b=0.5;\n    }\n    return ''\n        .endl()+'IN vec2 texCoord;'\n        .endl()+'{{MODULES_HEAD}}'\n        .endl()+'void main()'\n        .endl()+'{'\n        .endl()+'    vec4 col=vec4('+r+','+g+','+b+',1.0);'\n        .endl()+'    {{MODULE_COLOR}}'\n        .endl()+'    outColor = col;'\n        .endl()+'}';\n};\n\n/**\n  * adds attribute definition to shader header without colliding with other shader modules...\n * when attrFrag is defined, vertex shader will output this attribute to the fragment shader\n * @function\n * @memberof Shader\n * @instance\n * @param {Object} attribObject {type:x,name:x,[nameFrag:x]}\n * @return {Object}\n */\nShader.prototype.addAttribute = function(attr) {\n    for(var i=0;i<this._attributes.length;i++)\n    {\n        if(this._attributes[i].name==attr.name && this._attributes[i].nameFrag==attr.nameFrag)return;\n    }\n    this._attributes.push(attr);\n    this._needsRecompile = true;\n};\n\n// --------------------------\n\nShader.getErrorFragmentShader = function() {\n    return ''\n        .endl() + 'void main()'\n        .endl() + '{'\n        .endl() + '   float g=mod((gl_FragCoord.y+gl_FragCoord.x),50.0)/50.0;'\n        .endl() + '   g= step(0.1,g);'\n        .endl() + '   outColor = vec4( g+0.5, 0.0, 0.0, 1.0);'\n        .endl() + '}';\n};\n\nShader.createShader = function(cgl, str, type, cglShader) {\n    function getBadLines(infoLog) {\n        var basLines = [];\n        var lines = infoLog.split('\\n');\n        for (var i in lines) {\n            var divide = lines[i].split(':');\n            if (parseInt(divide[2], 10)) basLines.push(parseInt(divide[2], 10));\n        }\n        return basLines;\n    }\n\n    var shader = cgl.gl.createShader(type);\n    cgl.gl.shaderSource(shader, str);\n    cgl.gl.compileShader(shader);\n\n    if (!cgl.gl.getShaderParameter(shader, cgl.gl.COMPILE_STATUS)) {\n        console.log('compile status: ');\n\n        if (type == cgl.gl.VERTEX_SHADER) console.log('VERTEX_SHADER');\n        if (type == cgl.gl.FRAGMENT_SHADER) console.log('FRAGMENT_SHADER');\n\n        console.warn(cgl.gl.getShaderInfoLog(shader));\n\n        var infoLog = cgl.gl.getShaderInfoLog(shader);\n        var badLines = getBadLines(infoLog);\n        var htmlWarning = '<div class=\"shaderErrorCode\">';\n        var lines = str.match(/^.*((\\r\\n|\\n|\\r)|$)/gm);\n\n        for (var i in lines) {\n            var j = parseInt(i, 10) + 1;\n            var line = j + ': ' + lines[i];\n            console.log(line);\n\n            var isBadLine = false;\n            for (var bj in badLines)\n                if (badLines[bj] == j) isBadLine = true;\n\n            if (isBadLine) htmlWarning += '<span class=\"error\">';\n            htmlWarning += line;\n            if (isBadLine) htmlWarning += '</span>';\n        }\n\n        console.warn(infoLog);\n\n        infoLog = infoLog.replace(/\\n/g, '<br/>');\n\n        htmlWarning = infoLog + '<br/>' + htmlWarning + '<br/><br/>';\n\n        cgl.patch.emitEvent(\"criticalError\",'Shader error ' + name, htmlWarning);\n        if(cgl.patch.isEditorMode())console.log('Shader error ' + name, htmlWarning);\n\n        htmlWarning += '</div>';\n\n        name = \"errorshader\";\n        cglShader.setSource(Shader.getDefaultVertexShader(), Shader.getErrorFragmentShader());\n    } else {\n        // console.log(name+' shader compiled...');\n    }\n    return shader;\n};\n\nexport { Shader };\n"
            },
            {
              "id": null,
              "identifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_state.js",
              "name": "./src/core/cgl/cgl_state.js",
              "index": 31,
              "index2": 25,
              "size": 26902,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
              ],
              "issuer": "/home/tom/cables_dev/cables/src/core/core_patch.js",
              "issuerId": null,
              "issuerName": "./src/core/core_patch.js",
              "issuerPath": [
                {
                  "id": 0,
                  "identifier": "multi /home/tom/cables_dev/cables/src/core/index.js",
                  "name": "multi ./src/core/index.js"
                },
                {
                  "id": null,
                  "identifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "name": "./src/core/index.js"
                },
                {
                  "id": null,
                  "identifier": "/home/tom/cables_dev/cables/src/core/core_patch.js",
                  "name": "./src/core/core_patch.js"
                }
              ],
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "assets": [
              ],
              "reasons": [
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_patch.js",
                  "module": "./src/core/core_patch.js",
                  "moduleName": "./src/core/core_patch.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./cgl/cgl_state",
                  "loc": "8:0-42"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/index.js",
                  "module": "./src/core/cgl/index.js",
                  "moduleName": "./src/core/cgl/index.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./cgl_state",
                  "loc": "12:0-38"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/index.js",
                  "module": "./src/core/cgl/index.js",
                  "moduleName": "./src/core/cgl/index.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_state",
                  "loc": "40:8-15"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/core_patch.js",
                  "module": "./src/core/core_patch.js",
                  "moduleName": "./src/core/core_patch.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl/cgl_state",
                  "loc": "100:19-26"
                }
              ],
              "usedExports": [
                "Context"
              ],
              "providedExports": [
                "BLENDS",
                "Context"
              ],
              "optimizationBailout": [
              ],
              "depth": 3,
              "source": "// import { vec3, mat4 } from \"gl-matrix\";\nimport { CONSTANTS } from \"./constants\";\nimport { Shader } from \"./cgl_shader\";\nimport { MatrixStack } from \"./cgl_matrixstack\";\n\n/**\n * cables gl context/state manager\n * @external CGL\n * @namespace Context\n * @class\n * @hideconstructor\n */\nconst Context = function (_patch)\n{\n    var self = this;\n    var viewPort = [0, 0, 0, 0];\n    this.glVersion = 0;\n    this.glUseHalfFloatTex = false;\n    this.clearCanvasTransparent = true;\n    this.clearCanvasDepth = true;\n    this.patch = _patch;\n\n    this.temporaryTexture = null;\n    this.frameStore = {};\n    this.gl = null;\n\n    /**\n     * Current projection matrix\n     * @member pMatrix\n     * @memberof Context\n     * @instance\n     * @type {mat4}\n     */\n    this.pMatrix = mat4.create();\n    /**\n     * Current model matrix\n     * @member pMatrix\n     * @memberof Context\n     * @instance\n     * @type {mat4}\n     */\n    this.mMatrix = mat4.create();\n    /**\n     * Current view matrix\n     * @member vMatrix\n     * @memberof Context\n     * @instance\n     * @type {mat4}\n     */\n    this.vMatrix = mat4.create();\n    this._textureslots = [];\n\n    this._pMatrixStack = new MatrixStack();\n    this._mMatrixStack = new MatrixStack();\n    this._vMatrixStack = new MatrixStack();\n    this._glFrameBufferStack = [];\n    this._frameBufferStack = [];\n    this._shaderStack = [];\n\n    Object.defineProperty(this, \"mvMatrix\", {\n        get()\n        {\n            return this.mMatrix;\n        },\n        set(m)\n        {\n            this.mMatrix = m;\n        },\n    }); // todo: deprecated\n\n    this.canvas = null;\n    this.pixelDensity = 1;\n    mat4.identity(this.mMatrix);\n    mat4.identity(this.vMatrix);\n\n    var simpleShader = new Shader(this, \"simpleshader\");\n\n    simpleShader.setModules([\"MODULE_VERTEX_POSITION\", \"MODULE_COLOR\", \"MODULE_BEGIN_FRAG\"]);\n    simpleShader.setSource(Shader.getDefaultVertexShader(), Shader.getDefaultFragmentShader());\n\n    var currentShader = simpleShader;\n    var aborted = false;\n    var cbResize = [];\n\n    this.addEventListener = function (event, cb)\n    {\n        if (event == \"resize\") cbResize.push(cb);\n    };\n\n    this.removeEventListener = function (event, cb)\n    {\n        if (event == \"resize\")\n        {\n            for (var i in cbResize)\n            {\n                if (cbResize[i] == cb)\n                {\n                    cbResize.splice(i, 1);\n                    return;\n                }\n            }\n        }\n    };\n\n    this.exitError = function (msgId, msg)\n    {\n        this.patch.exitError(msgId, msg);\n        this.aborted = true;\n    };\n\n    this.setCanvas = function (canv)\n    {\n        // CGL.TextureEffectMesh = CGL.TextureEffectMesh || null;\n\n        if (typeof canv === \"string\") this.canvas = document.getElementById(canv);\n        else this.canvas = canv;\n\n        if (!this.patch.config.canvas) this.patch.config.canvas = {};\n\n        if (!this.patch.config.canvas.hasOwnProperty(\"preserveDrawingBuffer\")) this.patch.config.canvas.preserveDrawingBuffer = false;\n        if (!this.patch.config.canvas.hasOwnProperty(\"premultipliedAlpha\")) this.patch.config.canvas.premultipliedAlpha = false;\n        if (!this.patch.config.canvas.hasOwnProperty(\"alpha\")) this.patch.config.canvas.alpha = false;\n\n        if (this.patch.config.hasOwnProperty(\"clearCanvasColor\")) this.clearCanvasTransparent = this.patch.config.clearCanvasColor;\n        if (this.patch.config.hasOwnProperty(\"clearCanvasDepth\")) this.clearCanvasDepth = this.patch.config.clearCanvasDepth;\n\n        this.gl = this.canvas.getContext(\"webgl2\", this.patch.config.canvas);\n        if (this.gl)\n        {\n            this.glVersion = 2;\n        }\n        else\n        {\n            this.gl = this.canvas.getContext(\"webgl\", this.patch.config.canvas) || this.canvas.getContext(\"experimental-webgl\", this.patch.config.canvas);\n            this.glVersion = 1;\n\n            // safari\n            if (/^((?!chrome|android).)*safari/i.test(navigator.userAgent))\n            {\n                this.glUseHalfFloatTex = true;\n            }\n\n            // ios\n            if (/iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream)\n            {\n                if (!this.patch.config.canvas.hasOwnProperty(\"powerPreference\")) this.patch.config.canvas.powerPreference = \"high-performance\";\n            }\n        }\n\n        if (!this.gl)\n        {\n            this.exitError(\"NO_WEBGL\", \"sorry, could not initialize WebGL. Please check if your Browser supports WebGL.\");\n            return;\n        }\n        var derivativeExt = this.gl.getExtension(\"GL_OES_standard_derivatives\");\n        var instancingExt = this.gl.getExtension(\"ANGLE_instanced_arrays\") || this.gl;\n\n        if (instancingExt.vertexAttribDivisorANGLE)\n        {\n            this.gl.vertexAttribDivisor = instancingExt.vertexAttribDivisorANGLE.bind(instancingExt);\n            this.gl.drawElementsInstanced = instancingExt.drawElementsInstancedANGLE.bind(instancingExt);\n        }\n        self.updateSize();\n    };\n\n    this.updateSize = function ()\n    {\n        this.canvas.width = this.canvasWidth = this.canvas.clientWidth * this.pixelDensity;\n        this.canvas.height = this.canvasHeight = this.canvas.clientHeight * this.pixelDensity;\n    };\n\n    this.canvasWidth = -1;\n    this.canvasHeight = -1;\n    this.canvasScale = 1;\n    var oldCanvasWidth = -1;\n    var oldCanvasHeight = -1;\n\n    /**\n     * @function getViewPort\n     * @memberof Context\n     * @instance\n     * @description get current gl viewport\n     * @returns {Array} array [x,y,w,h]\n     */\n    this.getViewPort = function ()\n    {\n        return viewPort;\n    };\n\n    this.resetViewPort = function ()\n    {\n        this.gl.viewport(viewPort[0], viewPort[1], viewPort[2], viewPort[3]);\n    };\n\n    /**\n     * @function setViewPort\n     * @memberof Context\n     * @instance\n     * @description set current gl viewport\n     * @param {Number} x\n     * @param {Number} y\n     * @param {Number} w\n     * @param {Number} h\n     */\n    this.setViewPort = function (x, y, w, h)\n    {\n        viewPort[0] = Math.round(x);\n        viewPort[1] = Math.round(y);\n        viewPort[2] = Math.round(w);\n        viewPort[3] = Math.round(h);\n        this.gl.viewport(viewPort[0], viewPort[1], viewPort[2], viewPort[3]);\n    };\n\n    this.beginFrame = function ()\n    {\n        if (CABLES.UI)\n        {\n            gui.metaTexturePreviewer.render();\n            if (CABLES.UI.patchPreviewer) CABLES.UI.patchPreviewer.render();\n        }\n\n        self.setShader(simpleShader);\n    };\n\n    this.screenShot = function (cb, doScreenshotClearAlpha)\n    {\n        if (doScreenshotClearAlpha)\n        {\n            this.gl.clearColor(1, 1, 1, 1);\n            this.gl.colorMask(false, false, false, true);\n            this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n            this.gl.colorMask(true, true, true, true);\n        }\n\n        if (this.canvas && this.canvas.toBlob)\n        {\n            this.canvas.toBlob((blob) =>\n            {\n                if (cb) cb(blob);\n                else console.log(\"no screenshot callback...\");\n            });\n        }\n    };\n\n    this.endFrame = function ()\n    {\n        if (CABLES.UI) CABLES.GL_MARKER.drawMarkerLayer(this);\n\n        self.setPreviousShader();\n        if (this._vMatrixStack.length() > 0) console.warn(\"view matrix stack length !=0 at end of rendering...\");\n        if (this._mMatrixStack.length() > 0) console.warn(\"mvmatrix stack length !=0 at end of rendering...\");\n        if (this._pMatrixStack.length() > 0) console.warn(\"pmatrix stack length !=0 at end of rendering...\");\n        if (this._glFrameBufferStack.length > 0) console.warn(\"glFrameBuffer stack length !=0 at end of rendering...\");\n        if (this._stackDepthTest.length > 0) console.warn(\"depthtest stack length !=0 at end of rendering...\");\n        if (this._stackDepthWrite.length > 0) console.warn(\"depthwrite stack length !=0 at end of rendering...\");\n        if (this._stackDepthFunc.length > 0) console.warn(\"depthfunc stack length !=0 at end of rendering...\");\n        if (this._stackBlend.length > 0) console.warn(\"blend stack length !=0 at end of rendering...\");\n        if (this._stackBlendMode.length > 0) console.warn(\"blendMode stack length !=0 at end of rendering...\");\n        if (this._shaderStack.length > 0) console.warn(\"this._shaderStack length !=0 at end of rendering...\");\n\n        if (oldCanvasWidth != self.canvasWidth || oldCanvasHeight != self.canvasHeight)\n        {\n            oldCanvasWidth = self.canvasWidth;\n            oldCanvasHeight = self.canvasHeight;\n            this.setSize(self.canvasWidth / this.pixelDensity, self.canvasHeight / this.pixelDensity);\n            this.updateSize();\n\n            for (var i = 0; i < cbResize.length; i++) cbResize[i]();\n        }\n    };\n\n    // shader stack\n    this.getShader = function ()\n    {\n        if (currentShader) if (!this.frameStore || ((this.frameStore.renderOffscreen === true) == currentShader.offScreenPass) === true) return currentShader;\n\n        for (var i = this._shaderStack.length - 1; i >= 0; i--) if (this._shaderStack[i]) if (this.frameStore.renderOffscreen == this._shaderStack[i].offScreenPass) return this._shaderStack[i];\n    };\n\n    this.getDefaultShader = function ()\n    {\n        return simpleShader;\n    };\n\n    this.setShader = function (shader)\n    {\n        this._shaderStack.push(shader);\n        currentShader = shader;\n    };\n\n    this.setPreviousShader = function ()\n    {\n        if (this._shaderStack.length === 0) throw \"Invalid shader stack pop!\";\n        this._shaderStack.pop();\n        currentShader = this._shaderStack[this._shaderStack.length - 1];\n    };\n\n    /**\n     * push a framebuffer to the framebuffer stack\n     * @function pushGlFrameBuffer\n     * @memberof Context\n     * @instance\n     * @param {Object} framebuffer\n     * @function\n     */\n    this.pushGlFrameBuffer = function (fb)\n    {\n        this._glFrameBufferStack.push(fb);\n    };\n\n    /**\n     * pop framebuffer stack\n     * @function popGlFrameBuffer\n     * @memberof Context\n     * @instance\n     * @returns {Object} current framebuffer or null\n     */\n    this.popGlFrameBuffer = function ()\n    {\n        if (this._glFrameBufferStack.length == 0) return null;\n        this._glFrameBufferStack.pop();\n        return this._glFrameBufferStack[this._glFrameBufferStack.length - 1];\n    };\n\n    /**\n     * get current framebuffer\n     * @function getCurrentFrameBuffer\n     * @memberof Context\n     * @instance\n     * @returns {Object} current framebuffer or null\n     */\n    this.getCurrentGlFrameBuffer = function ()\n    {\n        if (this._glFrameBufferStack.length === 0) return null;\n        return this._glFrameBufferStack[this._glFrameBufferStack.length - 1];\n    };\n\n    /**\n     * push a framebuffer to the framebuffer stack\n     * @function pushGlFrameBuffer\n     * @memberof Context\n     * @instance\n     * @param {Framebuffer} framebuffer\n     */\n    this.pushFrameBuffer = function (fb)\n    {\n        this._frameBufferStack.push(fb);\n    };\n\n    /**\n     * pop framebuffer stack\n     * @function popFrameBuffer\n     * @memberof Context\n     * @instance\n     * @returns {Framebuffer} current framebuffer or null\n     */\n    this.popFrameBuffer = function ()\n    {\n        if (this._frameBufferStack.length == 0) return null;\n        this._frameBufferStack.pop();\n        return this._frameBufferStack[this._frameBufferStack.length - 1];\n    };\n\n    /**\n     * get current framebuffer\n     * @function getCurrentFrameBuffer\n     * @memberof Context\n     * @instance\n     * @returns {Framebuffer} current framebuffer or null\n     */\n    this.getCurrentFrameBuffer = function ()\n    {\n        if (this._frameBufferStack.length === 0) return null;\n        return this._frameBufferStack[this._frameBufferStack.length - 1];\n    };\n\n    var identView = vec3.create();\n    vec3.set(identView, 0, 0, 2);\n    var ident = vec3.create();\n    vec3.set(ident, 0, 0, 0);\n\n    this.renderStart = function (cgl, identTranslate, identTranslateView)\n    {\n        if (!identTranslate) identTranslate = ident;\n        if (!identTranslateView) identTranslateView = identView;\n\n        this.pushDepthTest(true);\n        this.pushDepthWrite(true);\n        this.pushDepthFunc(cgl.gl.LEQUAL);\n\n        if (this.clearCanvasTransparent)\n        {\n            cgl.gl.clearColor(0, 0, 0, 0);\n            cgl.gl.clear(cgl.gl.COLOR_BUFFER_BIT);\n        }\n        if (this.clearCanvasDepth) cgl.gl.clear(cgl.gl.DEPTH_BUFFER_BIT);\n\n        cgl.setViewPort(0, 0, cgl.canvasWidth, cgl.canvasHeight);\n\n        mat4.perspective(cgl.pMatrix, 45, cgl.canvasWidth / cgl.canvasHeight, 0.1, 1000.0);\n        mat4.identity(cgl.mMatrix);\n        mat4.identity(cgl.vMatrix);\n        mat4.translate(cgl.mMatrix, cgl.mMatrix, identTranslate);\n        mat4.translate(cgl.vMatrix, cgl.vMatrix, identTranslateView);\n\n        cgl.pushPMatrix();\n        cgl.pushModelMatrix();\n        cgl.pushViewMatrix();\n\n        cgl.pushBlendMode(CONSTANTS.BLEND_MODES.BLEND_NORMAL, false);\n\n        for (var i = 0; i < this._textureslots.length; i++) this._textureslots[i] = null;\n\n        cgl.beginFrame();\n    };\n\n    this.renderEnd = function (cgl, identTranslate)\n    {\n        cgl.popViewMatrix();\n        cgl.popModelMatrix();\n        cgl.popPMatrix();\n\n        this.popDepthTest();\n        this.popDepthWrite();\n        this.popDepthFunc();\n        this.popBlend();\n        this.popBlendMode();\n\n        cgl.endFrame();\n    };\n\n    this.getTexture = function (slot)\n    {\n        return this._textureslots[slot];\n    };\n\n    this.setTexture = function (slot, t, type)\n    {\n        if (this._textureslots[slot] != t)\n        {\n            this.gl.activeTexture(this.gl.TEXTURE0 + slot);\n            this.gl.bindTexture(type || this.gl.TEXTURE_2D, t);\n            this._textureslots[slot] = t;\n        }\n    };\n\n    this.fullScreen = function ()\n    {\n        if (this.canvas.requestFullscreen) this.canvas.requestFullscreen();\n        else if (this.canvas.mozRequestFullScreen) this.canvas.mozRequestFullScreen();\n        else if (this.canvas.webkitRequestFullscreen) this.canvas.webkitRequestFullscreen();\n        else if (this.canvas.msRequestFullscreen) this.canvas.msRequestFullscreen();\n    };\n\n    this.setSize = function (w, h)\n    {\n        this.canvas.style.width = w + \"px\";\n        this.canvas.style.height = h + \"px\";\n\n        this.canvas.width = w * this.pixelDensity;\n        this.canvas.height = h * this.pixelDensity;\n\n        this.updateSize();\n    };\n\n    this._resizeToWindowSize = function ()\n    {\n        this.setSize(window.innerWidth, window.innerHeight);\n        this.updateSize();\n    };\n\n    this._resizeToParentSize = function ()\n    {\n        console.log(\"_resizeToParentSize\");\n        var p = this.canvas.parentElement;\n        if (!p)\n        {\n            console.error(\"cables: can not resize to container element\");\n            return;\n        }\n        this.setSize(p.clientWidth, p.clientHeight);\n        console.log(\"_resizeToParentSize\", p.clientWidth, p.clientHeight);\n\n        this.updateSize();\n    };\n\n    this.setAutoResize = function (parent)\n    {\n        window.removeEventListener(\"resize\", this._resizeToWindowSize.bind(this));\n        window.removeEventListener(\"resize\", this._resizeToParentSize.bind(this));\n\n        if (parent == \"window\")\n        {\n            window.addEventListener(\"resize\", this._resizeToWindowSize.bind(this));\n            window.addEventListener(\"orientationchange\", this._resizeToWindowSize.bind(this));\n            this._resizeToWindowSize();\n        }\n        if (parent == \"parent\")\n        {\n            window.addEventListener(\"resize\", this._resizeToParentSize.bind(this));\n            this._resizeToParentSize();\n        }\n    };\n\n    this.printError = function (str)\n    {\n        var error = this.gl.getError();\n        if (error != this.gl.NO_ERROR)\n        {\n            var errStr = \"\";\n            if (error == this.gl.OUT_OF_MEMORY) errStr = \"OUT_OF_MEMORY\";\n            if (error == this.gl.INVALID_ENUM) errStr = \"INVALID_ENUM\";\n            if (error == this.gl.INVALID_OPERATION) errStr = \"INVALID_OPERATION\";\n            if (error == this.gl.INVALID_FRAMEBUFFER_OPERATION) errStr = \"INVALID_FRAMEBUFFER_OPERATION\";\n            if (error == this.gl.INVALID_VALUE) errStr = \"INVALID_VALUE\";\n            if (error == this.gl.CONTEXT_LOST_WEBGL) errStr = \"CONTEXT_LOST_WEBGL\";\n            if (error == this.gl.NO_ERROR) errStr = \"NO_ERROR\";\n\n            console.log(\"gl error: \", str, error, errStr);\n        }\n    };\n\n    this.saveScreenshot = function (filename, cb, pw, ph)\n    {\n        this.patch.renderOneFrame();\n\n        var w = this.canvas.clientWidth;\n        var h = this.canvas.clientHeight;\n\n        if (pw)\n        {\n            this.canvas.width = pw;\n            w = pw;\n        }\n        if (ph)\n        {\n            this.canvas.height = ph;\n            h = ph;\n        }\n\n        function padLeft(nr, n, str)\n        {\n            return Array(n - String(nr).length + 1).join(str || \"0\") + nr;\n        }\n\n        var d = new Date();\n\n        var dateStr = \"\".concat(String(d.getFullYear()) + String(d.getMonth() + 1) + String(d.getDate()), \"_\").concat(padLeft(d.getHours(), 2)).concat(padLeft(d.getMinutes(), 2)).concat(padLeft(d.getSeconds(), 2));\n\n        if (!filename) filename = \"cables_\" + dateStr + \".png\";\n        else filename += \".png\";\n\n        this.patch.cgl.screenShot((blob) =>\n        {\n            this.canvas.width = w;\n            this.canvas.height = h;\n            if (blob)\n            {\n                var anchor = document.createElement(\"a\");\n\n                anchor.download = filename;\n                anchor.href = URL.createObjectURL(blob);\n                document.body.appendChild(anchor);\n\n                anchor.click();\n                if (cb) cb(blob);\n                anchor.remove();\n            }\n            else\n            {\n                console.log(\"screenshot: no blob\");\n            }\n        }, true);\n    };\n};\n\n/**\n * push a matrix to the view matrix stack\n * @function pushviewMatrix\n * @memberof Context\n * @instance\n * @param {mat4} viewmatrix\n */\nContext.prototype.pushViewMatrix = function ()\n{\n    this.vMatrix = this._vMatrixStack.push(this.vMatrix);\n};\n\n/**\n * pop view matrix stack\n * @function popViewMatrix\n * @memberof Context\n * @instance\n * @returns {mat4} current viewmatrix\n * @function\n */\nContext.prototype.popViewMatrix = function ()\n{\n    this.vMatrix = this._vMatrixStack.pop();\n};\n\nContext.prototype.getViewMatrixStateCount = function ()\n{\n    return this._vMatrixStack.stateCounter;\n};\n\n/**\n * push a matrix to the projection matrix stack\n * @function pushPMatrix\n * @memberof Context\n * @instance\n * @param {mat4} projectionmatrix\n */\nContext.prototype.pushPMatrix = function ()\n{\n    this.pMatrix = this._pMatrixStack.push(this.pMatrix);\n};\n\n/**\n * pop projection matrix stack\n * @function popPMatrix\n * @memberof Context\n * @instance\n * @returns {mat4} current projectionmatrix\n */\nContext.prototype.popPMatrix = function ()\n{\n    this.pMatrix = this._pMatrixStack.pop();\n    return this.pMatrix;\n};\n\nContext.prototype.getProjectionMatrixStateCount = function ()\n{\n    return this._pMatrixStack.stateCounter;\n};\n\n/**\n * push a matrix to the model matrix stack\n * @function pushModelMatrix\n * @memberof Context\n * @instance\n * @param {mat4} modelmatrix\n * @example\n * // see source code of translate op:\n * cgl.pushModelMatrix();\n * mat4.translate(cgl.mMatrix,cgl.mMatrix, vec);\n * trigger.trigger();\n * cgl.popModelMatrix();\n */\nContext.prototype.pushMvMatrix = Context.prototype.pushModelMatrix = function ()\n{\n    // deprecated\n    // var copy = mat4.clone(this.mMatrix);\n    this.mMatrix = this._mMatrixStack.push(this.mMatrix);\n};\n\n/**\n * pop model matrix stack\n * @function popModelMatrix\n * @memberof Context\n * @instance\n * @returns {mat4} current modelmatrix\n */\nContext.prototype.popMvMatrix = Context.prototype.popmMatrix = Context.prototype.popModelMatrix = function ()\n{\n    // todo: DEPRECATE\n    // if (this._mMatrixStack.length === 0) throw \"Invalid modelview popMatrix!\";\n    this.mMatrix = this._mMatrixStack.pop();\n    return this.mMatrix;\n};\n\n/**\n * get model matrix\n * @function modelMatrix\n * @memberof Context\n * @instance\n * @returns {mat4} current modelmatrix\n */\nContext.prototype.modelMatrix = function ()\n{\n    return this.mMatrix;\n};\n\n// state depthtest\n\nContext.prototype._stackDepthTest = [];\nContext.prototype.pushDepthTest = function (b)\n{\n    this._stackDepthTest.push(b);\n    if (!b) this.gl.disable(this.gl.DEPTH_TEST);\n    else this.gl.enable(this.gl.DEPTH_TEST);\n};\n\nContext.prototype.stateDepthTest = function ()\n{\n    return this._stackDepthTest[this._stackDepthTest.length - 1];\n};\n\nContext.prototype.popDepthTest = function ()\n{\n    this._stackDepthTest.pop();\n\n    if (!this._stackDepthTest[this._stackDepthTest.length - 1]) this.gl.disable(this.gl.DEPTH_TEST);\n    else this.gl.enable(this.gl.DEPTH_TEST);\n};\n\n// state depthwrite\n\nContext.prototype._stackDepthWrite = [];\nContext.prototype.pushDepthWrite = function (b)\n{\n    this._stackDepthWrite.push(b);\n    this.gl.depthMask(b);\n};\n\nContext.prototype.stateDepthWrite = function ()\n{\n    return this._stackDepthWrite[this._stackDepthWrite.length - 1];\n};\n\nContext.prototype.popDepthWrite = function ()\n{\n    this._stackDepthWrite.pop();\n    this.gl.depthMask(this._stackDepthWrite[this._stackDepthWrite.length - 1]);\n};\n\n// state depthfunc\n\nContext.prototype._stackDepthFunc = [];\n\n/**\n * enable / disable depth testing\n * like `gl.depthFunc(boolean);`\n * @function pushDepthFunc\n * @memberof Context\n * @instance\n * @param {Boolean} depthtesting\n */\nContext.prototype.pushDepthFunc = function (f)\n{\n    this._stackDepthFunc.push(f);\n    this.gl.depthFunc(f);\n};\n\n/**\n * current state of blend\n * @function stateDepthFunc\n * @memberof Context\n * @instance\n * @returns {Boolean} depth testing enabled/disabled\n */\nContext.prototype.stateDepthFunc = function ()\n{\n    if (this._stackDepthFunc.length > 0) return this._stackDepthFunc[this._stackDepthFunc.length - 1];\n    return false;\n};\n\n/**\n * pop depth testing and set the previous state\n * @function popDepthFunc\n * @memberof Context\n * @instance\n */\nContext.prototype.popDepthFunc = function ()\n{\n    this._stackDepthFunc.pop();\n    if (this._stackDepthFunc.length > 0) this.gl.depthFunc(this._stackDepthFunc[this._stackDepthFunc.length - 1]);\n};\n\nContext.prototype._stackBlend = [];\n\n/**\n * enable / disable blend\n * like gl.enable(gl.BLEND); / gl.disable(gl.BLEND);\n * @function pushBlend\n * @memberof Context\n * @instance\n * @param {Boolean} blending\n */\nContext.prototype.pushBlend = function (b)\n{\n    this._stackBlend.push(b);\n    if (!b) this.gl.disable(this.gl.BLEND);\n    else this.gl.enable(this.gl.BLEND);\n};\n\n/**\n * pop blend state and set the previous state\n * @function popBlend\n * @memberof Context\n * @instance\n */\nContext.prototype.popBlend = function ()\n{\n    this._stackBlend.pop();\n\n    if (!this._stackBlend[this._stackBlend.length - 1]) this.gl.disable(this.gl.BLEND);\n    else this.gl.enable(this.gl.BLEND);\n};\n\n/**\n * current state of blend\n * @function stateBlend\n * @returns {boolean} blending enabled/disabled\n * @memberof Context\n * @instance\n */\nContext.prototype.stateBlend = function ()\n{\n    return this._stackBlend[this._stackBlend.length - 1];\n};\n\nexport const BLENDS = {\n    BLEND_NONE: 0,\n    BLEND_NORMAL: 1,\n    BLEND_ADD: 2,\n    BLEND_SUB: 3,\n    BLEND_MUL: 4,\n};\n\nContext.prototype._stackBlendMode = [];\nContext.prototype._stackBlendModePremul = [];\n\n/**\n * push and switch to predefined blendmode (CONSTANTS.BLEND_MODES.BLEND_NONE,CONSTANTS.BLEND_MODES.BLEND_NORMAL,CONSTANTS.BLEND_MODES.BLEND_ADD,CONSTANTS.BLEND_MODES.BLEND_SUB,CONSTANTS.BLEND_MODES.BLEND_MUL)\n * @function pushBlendMode\n * @memberof Context\n * @instance\n * @param {Number} blendmode\n * @param {Boolean} premultiplied mode\n */\nContext.prototype.pushBlendMode = function (blendMode, premul)\n{\n    this._stackBlendMode.push(blendMode);\n    this._stackBlendModePremul.push(premul);\n\n    const n = this._stackBlendMode.length - 1;\n\n    this.pushBlend(this._stackBlendMode[n] !== CONSTANTS.BLEND_MODES.BLEND_NONE);\n    this._setBlendMode(this._stackBlendMode[n], this._stackBlendModePremul[n]);\n};\n\n/**\n * pop predefined blendmode / switch back to previous blendmode\n * @function pushBlendMode\n * @memberof Context\n * @instance\n */\nContext.prototype.popBlendMode = function ()\n{\n    this._stackBlendMode.pop();\n    this._stackBlendModePremul.pop();\n\n    const n = this._stackBlendMode.length - 1;\n\n    this.popBlend(this._stackBlendMode[n] !== CONSTANTS.BLEND_MODES.BLEND_NONE);\n\n    if (n > 0) this._setBlendMode(this._stackBlendMode[n], this._stackBlendModePremul[n]);\n};\n\nContext.prototype.glGetAttribLocation = function (prog, name)\n{\n    const l = this.gl.getAttribLocation(prog, name);\n    if (l == -1)\n    {\n        // console.log(\"get attr loc -1 \",name);\n        // debugger;\n    }\n    return l;\n};\n\nContext.prototype._setBlendMode = function (blendMode, premul)\n{\n    const gl = this.gl;\n\n    if (blendMode == CONSTANTS.BLEND_MODES.BLEND_NONE)\n    {\n        // this.gl.disable(this.gl.BLEND);\n    }\n    else if (blendMode == CONSTANTS.BLEND_MODES.BLEND_ADD)\n    {\n        if (premul)\n        {\n            gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n            gl.blendFuncSeparate(gl.ONE, gl.ONE, gl.ONE, gl.ONE);\n        }\n        else\n        {\n            gl.blendEquation(gl.FUNC_ADD);\n            gl.blendFunc(gl.SRC_ALPHA, gl.ONE);\n        }\n    }\n    else if (blendMode == CONSTANTS.BLEND_MODES.BLEND_SUB)\n    {\n        if (premul)\n        {\n            gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n            gl.blendFuncSeparate(gl.ZERO, gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA);\n        }\n        else\n        {\n            gl.blendEquation(gl.FUNC_ADD);\n            gl.blendFunc(gl.ZERO, gl.ONE_MINUS_SRC_COLOR);\n        }\n    }\n    else if (blendMode == CONSTANTS.BLEND_MODES.BLEND_MUL)\n    {\n        if (premul)\n        {\n            gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n            gl.blendFuncSeparate(gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA);\n        }\n        else\n        {\n            gl.blendEquation(gl.FUNC_ADD);\n            gl.blendFunc(gl.ZERO, gl.SRC_COLOR);\n        }\n    }\n    else if (blendMode == CONSTANTS.BLEND_MODES.BLEND_NORMAL)\n    {\n        if (premul)\n        {\n            gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n            gl.blendFuncSeparate(gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        }\n        else\n        {\n            gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n            gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        }\n    }\n    else\n    {\n        console.log(\"setblendmode: unknown blendmode\");\n    }\n};\n\nexport { Context };\n"
            },
            {
              "id": null,
              "identifier": "/home/tom/cables_dev/cables/src/core/cgl/index.js",
              "name": "./src/core/cgl/index.js",
              "index": 13,
              "index2": 26,
              "size": 1434,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
              ],
              "issuer": "/home/tom/cables_dev/cables/src/core/loadingstatus.js",
              "issuerId": null,
              "issuerName": "./src/core/loadingstatus.js",
              "issuerPath": [
                {
                  "id": 0,
                  "identifier": "multi /home/tom/cables_dev/cables/src/core/index.js",
                  "name": "multi ./src/core/index.js"
                },
                {
                  "id": null,
                  "identifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "name": "./src/core/index.js"
                },
                {
                  "id": null,
                  "identifier": "/home/tom/cables_dev/cables/src/core/loadingstatus.js",
                  "name": "./src/core/loadingstatus.js"
                }
              ],
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "assets": [
              ],
              "reasons": [
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/loadingstatus.js",
                  "module": "./src/core/loadingstatus.js",
                  "moduleName": "./src/core/loadingstatus.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./cgl",
                  "loc": "3:0-28"
                }
              ],
              "usedExports": false,
              "providedExports": [
                "CGL"
              ],
              "optimizationBailout": [
              ],
              "depth": 3,
              "source": "import { Framebuffer } from \"./cgl_framebuffer\";\nimport { Framebuffer2 } from \"./cgl_framebuffer2\";\nimport { Geometry } from \"./cgl_geom\";\nimport { Marker, WireCube, WirePoint } from \"./cgl_marker\";\nimport { MatrixStack } from \"./cgl_matrixstack\";\nimport { Mesh, MESH } from \"./cgl_mesh\";\nimport { Uniform } from \"./cgl_shader_uniform\";\nimport { ShaderLibMods } from \"./cgl_shader_lib\";\n\nimport { Shader } from \"./cgl_shader\";\nimport { MESHES } from \"./cgl_simplerect\";\nimport { Context } from \"./cgl_state\";\nimport {\n    isWindows, getWheelSpeed, getWheelDelta, onLoadingAssetsFinished,\n} from \"./cgl_utils\";\nimport {\n    Texture,\n} from \"./cgl_texture\";\n\nimport { TextureEffect } from \"./cgl_textureeffect\";\nimport { CONSTANTS } from \"./constants\";\nimport { profileData } from \"./cgl_profiledata\";\n\n// console.log({ SHADER_VARS, BLENDS, yolo });\nconst CGL = Object.assign(\n    {\n        Framebuffer,\n        Framebuffer2,\n        Geometry,\n        Marker,\n        WirePoint,\n        WireCube,\n        MatrixStack,\n        Mesh,\n        MESH,\n        ShaderLibMods,\n        Shader,\n        Uniform,\n        MESHES,\n        Context,\n        Texture,\n        TextureEffect,\n        isWindows,\n        getWheelSpeed,\n        getWheelDelta,\n        onLoadingAssetsFinished,\n        profileData,\n    },\n    CONSTANTS.BLEND_MODES,\n    CONSTANTS.SHADER,\n    CONSTANTS.MATH,\n    CONSTANTS.BLEND_MODES,\n);\n\nwindow.CGL = CGL;\n\nexport { CGL };\n"
            },
            {
              "id": null,
              "identifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_profiledata.js",
              "name": "./src/core/cgl/cgl_profiledata.js",
              "index": 16,
              "index2": 8,
              "size": 332,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
              ],
              "issuer": "/home/tom/cables_dev/cables/src/core/cgl/cgl_shader.js",
              "issuerId": null,
              "issuerName": "./src/core/cgl/cgl_shader.js",
              "issuerPath": [
                {
                  "id": 0,
                  "identifier": "multi /home/tom/cables_dev/cables/src/core/index.js",
                  "name": "multi ./src/core/index.js"
                },
                {
                  "id": null,
                  "identifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "name": "./src/core/index.js"
                },
                {
                  "id": null,
                  "identifier": "/home/tom/cables_dev/cables/src/core/glpatch.js",
                  "name": "./src/core/glpatch.js"
                },
                {
                  "id": null,
                  "identifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_shader.js",
                  "name": "./src/core/cgl/cgl_shader.js"
                }
              ],
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "assets": [
              ],
              "reasons": [
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_texture.js",
                  "module": "./src/core/cgl/cgl_texture.js",
                  "moduleName": "./src/core/cgl/cgl_texture.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./cgl_profiledata",
                  "loc": "1:0-48"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_shader_uniform.js",
                  "module": "./src/core/cgl/cgl_shader_uniform.js",
                  "moduleName": "./src/core/cgl/cgl_shader_uniform.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./cgl_profiledata",
                  "loc": "1:0-48"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_framebuffer.js",
                  "module": "./src/core/cgl/cgl_framebuffer.js",
                  "moduleName": "./src/core/cgl/cgl_framebuffer.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./cgl_profiledata",
                  "loc": "2:0-48"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_textureeffect.js",
                  "module": "./src/core/cgl/cgl_textureeffect.js",
                  "moduleName": "./src/core/cgl/cgl_textureeffect.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./cgl_profiledata",
                  "loc": "3:0-48"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_mesh.js",
                  "module": "./src/core/cgl/cgl_mesh.js",
                  "moduleName": "./src/core/cgl/cgl_mesh.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./cgl_profiledata",
                  "loc": "3:0-48"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_framebuffer2.js",
                  "module": "./src/core/cgl/cgl_framebuffer2.js",
                  "moduleName": "./src/core/cgl/cgl_framebuffer2.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./cgl_profiledata",
                  "loc": "4:0-48"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_shader.js",
                  "module": "./src/core/cgl/cgl_shader.js",
                  "moduleName": "./src/core/cgl/cgl_shader.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./cgl_profiledata",
                  "loc": "6:0-48"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/index.js",
                  "module": "./src/core/cgl/index.js",
                  "moduleName": "./src/core/cgl/index.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./cgl_profiledata",
                  "loc": "22:0-48"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/index.js",
                  "module": "./src/core/cgl/index.js",
                  "moduleName": "./src/core/cgl/index.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_profiledata",
                  "loc": "47:8-19"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_textureeffect.js",
                  "module": "./src/core/cgl/cgl_textureeffect.js",
                  "moduleName": "./src/core/cgl/cgl_textureeffect.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_profiledata",
                  "loc": "53:8-19"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_framebuffer.js",
                  "module": "./src/core/cgl/cgl_framebuffer.js",
                  "moduleName": "./src/core/cgl/cgl_framebuffer.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_profiledata",
                  "loc": "119:8-19"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_mesh.js",
                  "module": "./src/core/cgl/cgl_mesh.js",
                  "moduleName": "./src/core/cgl/cgl_mesh.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_profiledata",
                  "loc": "131:8-19"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_mesh.js",
                  "module": "./src/core/cgl/cgl_mesh.js",
                  "moduleName": "./src/core/cgl/cgl_mesh.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_profiledata",
                  "loc": "132:8-19"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_framebuffer2.js",
                  "module": "./src/core/cgl/cgl_framebuffer2.js",
                  "moduleName": "./src/core/cgl/cgl_framebuffer2.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_profiledata",
                  "loc": "134:4-15"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_texture.js",
                  "module": "./src/core/cgl/cgl_texture.js",
                  "moduleName": "./src/core/cgl/cgl_texture.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_profiledata",
                  "loc": "137:4-15"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_shader.js",
                  "module": "./src/core/cgl/cgl_shader.js",
                  "moduleName": "./src/core/cgl/cgl_shader.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_profiledata",
                  "loc": "151:4-15"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_shader.js",
                  "module": "./src/core/cgl/cgl_shader.js",
                  "moduleName": "./src/core/cgl/cgl_shader.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_profiledata",
                  "loc": "152:4-15"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_shader_uniform.js",
                  "module": "./src/core/cgl/cgl_shader_uniform.js",
                  "moduleName": "./src/core/cgl/cgl_shader_uniform.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_profiledata",
                  "loc": "159:4-15"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_shader_uniform.js",
                  "module": "./src/core/cgl/cgl_shader_uniform.js",
                  "moduleName": "./src/core/cgl/cgl_shader_uniform.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_profiledata",
                  "loc": "177:4-15"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_shader_uniform.js",
                  "module": "./src/core/cgl/cgl_shader_uniform.js",
                  "moduleName": "./src/core/cgl/cgl_shader_uniform.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_profiledata",
                  "loc": "195:4-15"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_shader_uniform.js",
                  "module": "./src/core/cgl/cgl_shader_uniform.js",
                  "moduleName": "./src/core/cgl/cgl_shader_uniform.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_profiledata",
                  "loc": "220:4-15"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_shader_uniform.js",
                  "module": "./src/core/cgl/cgl_shader_uniform.js",
                  "moduleName": "./src/core/cgl/cgl_shader_uniform.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_profiledata",
                  "loc": "236:4-15"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_shader_uniform.js",
                  "module": "./src/core/cgl/cgl_shader_uniform.js",
                  "moduleName": "./src/core/cgl/cgl_shader_uniform.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_profiledata",
                  "loc": "248:8-19"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_shader_uniform.js",
                  "module": "./src/core/cgl/cgl_shader_uniform.js",
                  "moduleName": "./src/core/cgl/cgl_shader_uniform.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_profiledata",
                  "loc": "249:8-19"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_shader_uniform.js",
                  "module": "./src/core/cgl/cgl_shader_uniform.js",
                  "moduleName": "./src/core/cgl/cgl_shader_uniform.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_profiledata",
                  "loc": "254:4-15"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_mesh.js",
                  "module": "./src/core/cgl/cgl_mesh.js",
                  "moduleName": "./src/core/cgl/cgl_mesh.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_profiledata",
                  "loc": "263:4-15"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_shader_uniform.js",
                  "module": "./src/core/cgl/cgl_shader_uniform.js",
                  "moduleName": "./src/core/cgl/cgl_shader_uniform.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_profiledata",
                  "loc": "283:8-19"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_shader_uniform.js",
                  "module": "./src/core/cgl/cgl_shader_uniform.js",
                  "moduleName": "./src/core/cgl/cgl_shader_uniform.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_profiledata",
                  "loc": "284:8-19"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_texture.js",
                  "module": "./src/core/cgl/cgl_texture.js",
                  "moduleName": "./src/core/cgl/cgl_texture.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_profiledata",
                  "loc": "286:4-15"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_shader_uniform.js",
                  "module": "./src/core/cgl/cgl_shader_uniform.js",
                  "moduleName": "./src/core/cgl/cgl_shader_uniform.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_profiledata",
                  "loc": "289:4-15"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_shader_uniform.js",
                  "module": "./src/core/cgl/cgl_shader_uniform.js",
                  "moduleName": "./src/core/cgl/cgl_shader_uniform.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_profiledata",
                  "loc": "315:8-19"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_shader_uniform.js",
                  "module": "./src/core/cgl/cgl_shader_uniform.js",
                  "moduleName": "./src/core/cgl/cgl_shader_uniform.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_profiledata",
                  "loc": "316:8-19"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_shader_uniform.js",
                  "module": "./src/core/cgl/cgl_shader_uniform.js",
                  "moduleName": "./src/core/cgl/cgl_shader_uniform.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_profiledata",
                  "loc": "319:4-15"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_mesh.js",
                  "module": "./src/core/cgl/cgl_mesh.js",
                  "moduleName": "./src/core/cgl/cgl_mesh.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_profiledata",
                  "loc": "321:16-27"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_shader_uniform.js",
                  "module": "./src/core/cgl/cgl_shader_uniform.js",
                  "moduleName": "./src/core/cgl/cgl_shader_uniform.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_profiledata",
                  "loc": "336:8-19"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_shader_uniform.js",
                  "module": "./src/core/cgl/cgl_shader_uniform.js",
                  "moduleName": "./src/core/cgl/cgl_shader_uniform.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_profiledata",
                  "loc": "337:8-19"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_shader_uniform.js",
                  "module": "./src/core/cgl/cgl_shader_uniform.js",
                  "moduleName": "./src/core/cgl/cgl_shader_uniform.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_profiledata",
                  "loc": "340:4-15"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_shader_uniform.js",
                  "module": "./src/core/cgl/cgl_shader_uniform.js",
                  "moduleName": "./src/core/cgl/cgl_shader_uniform.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_profiledata",
                  "loc": "354:8-19"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_shader_uniform.js",
                  "module": "./src/core/cgl/cgl_shader_uniform.js",
                  "moduleName": "./src/core/cgl/cgl_shader_uniform.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_profiledata",
                  "loc": "355:8-19"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_shader_uniform.js",
                  "module": "./src/core/cgl/cgl_shader_uniform.js",
                  "moduleName": "./src/core/cgl/cgl_shader_uniform.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_profiledata",
                  "loc": "358:4-15"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_mesh.js",
                  "module": "./src/core/cgl/cgl_mesh.js",
                  "moduleName": "./src/core/cgl/cgl_mesh.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_profiledata",
                  "loc": "374:24-35"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_shader.js",
                  "module": "./src/core/cgl/cgl_shader.js",
                  "moduleName": "./src/core/cgl/cgl_shader.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_profiledata",
                  "loc": "412:8-19"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_shader.js",
                  "module": "./src/core/cgl/cgl_shader.js",
                  "moduleName": "./src/core/cgl/cgl_shader.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_profiledata",
                  "loc": "424:8-19"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_shader.js",
                  "module": "./src/core/cgl/cgl_shader.js",
                  "moduleName": "./src/core/cgl/cgl_shader.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_profiledata",
                  "loc": "432:12-23"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_shader.js",
                  "module": "./src/core/cgl/cgl_shader.js",
                  "moduleName": "./src/core/cgl/cgl_shader.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_profiledata",
                  "loc": "439:16-27"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_shader.js",
                  "module": "./src/core/cgl/cgl_shader.js",
                  "moduleName": "./src/core/cgl/cgl_shader.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_profiledata",
                  "loc": "443:8-19"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_shader.js",
                  "module": "./src/core/cgl/cgl_shader.js",
                  "moduleName": "./src/core/cgl/cgl_shader.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_profiledata",
                  "loc": "449:12-23"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_shader.js",
                  "module": "./src/core/cgl/cgl_shader.js",
                  "moduleName": "./src/core/cgl/cgl_shader.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_profiledata",
                  "loc": "459:8-19"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_shader.js",
                  "module": "./src/core/cgl/cgl_shader.js",
                  "moduleName": "./src/core/cgl/cgl_shader.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_profiledata",
                  "loc": "478:8-19"
                }
              ],
              "usedExports": [
                "profileData"
              ],
              "providedExports": [
                "profileData"
              ],
              "optimizationBailout": [
              ],
              "depth": 4,
              "source": "const ProfileData = function ()\n{\n    this.profileUniformCount = 0;\n    this.profileShaderBinds = 0;\n    this.profileUniformCount = 0;\n    this.profileShaderCompiles = 0;\n    this.profileVideosPlaying = 0;\n    this.profileMVPMatrixCount = 0;\n    this.profileEffectBuffercreate = 0;\n};\n\nexport const profileData = new ProfileData();\n"
            },
            {
              "id": null,
              "identifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_texture.js",
              "name": "./src/core/cgl/cgl_texture.js",
              "index": 15,
              "index2": 9,
              "size": 20457,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
              ],
              "issuer": "/home/tom/cables_dev/cables/src/core/cgl/index.js",
              "issuerId": null,
              "issuerName": "./src/core/cgl/index.js",
              "issuerPath": [
                {
                  "id": 0,
                  "identifier": "multi /home/tom/cables_dev/cables/src/core/index.js",
                  "name": "multi ./src/core/index.js"
                },
                {
                  "id": null,
                  "identifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "name": "./src/core/index.js"
                },
                {
                  "id": null,
                  "identifier": "/home/tom/cables_dev/cables/src/core/loadingstatus.js",
                  "name": "./src/core/loadingstatus.js"
                },
                {
                  "id": null,
                  "identifier": "/home/tom/cables_dev/cables/src/core/cgl/index.js",
                  "name": "./src/core/cgl/index.js"
                }
              ],
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "assets": [
              ],
              "reasons": [
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_textureeffect.js",
                  "module": "./src/core/cgl/cgl_textureeffect.js",
                  "moduleName": "./src/core/cgl/cgl_textureeffect.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./cgl_texture",
                  "loc": "1:0-40"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_framebuffer.js",
                  "module": "./src/core/cgl/cgl_framebuffer.js",
                  "moduleName": "./src/core/cgl/cgl_framebuffer.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./cgl_texture",
                  "loc": "1:0-40"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_shader_lib.js",
                  "module": "./src/core/cgl/cgl_shader_lib.js",
                  "moduleName": "./src/core/cgl/cgl_shader_lib.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./cgl_texture",
                  "loc": "2:0-40"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_framebuffer2.js",
                  "module": "./src/core/cgl/cgl_framebuffer2.js",
                  "moduleName": "./src/core/cgl/cgl_framebuffer2.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./cgl_texture",
                  "loc": "3:0-40"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/index.js",
                  "module": "./src/core/cgl/index.js",
                  "moduleName": "./src/core/cgl/index.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./cgl_texture",
                  "loc": "16:0-18:23"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_textureeffect.js",
                  "module": "./src/core/cgl/cgl_textureeffect.js",
                  "moduleName": "./src/core/cgl/cgl_textureeffect.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_texture",
                  "loc": "32:27-34"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_framebuffer.js",
                  "module": "./src/core/cgl/cgl_framebuffer.js",
                  "moduleName": "./src/core/cgl/cgl_framebuffer.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_texture",
                  "loc": "33:60-67"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_framebuffer.js",
                  "module": "./src/core/cgl/cgl_framebuffer.js",
                  "moduleName": "./src/core/cgl/cgl_framebuffer.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_texture",
                  "loc": "35:22-29"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_textureeffect.js",
                  "module": "./src/core/cgl/cgl_textureeffect.js",
                  "moduleName": "./src/core/cgl/cgl_textureeffect.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_texture",
                  "loc": "36:34-41"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_framebuffer.js",
                  "module": "./src/core/cgl/cgl_framebuffer.js",
                  "moduleName": "./src/core/cgl/cgl_framebuffer.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_texture",
                  "loc": "38:14-21"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/index.js",
                  "module": "./src/core/cgl/index.js",
                  "moduleName": "./src/core/cgl/index.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_texture",
                  "loc": "41:8-15"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_framebuffer.js",
                  "module": "./src/core/cgl/cgl_framebuffer.js",
                  "moduleName": "./src/core/cgl/cgl_framebuffer.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_texture",
                  "loc": "44:27-34"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_framebuffer2.js",
                  "module": "./src/core/cgl/cgl_framebuffer2.js",
                  "moduleName": "./src/core/cgl/cgl_framebuffer2.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_texture",
                  "loc": "59:72-79"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_shader_lib.js",
                  "module": "./src/core/cgl/cgl_shader_lib.js",
                  "moduleName": "./src/core/cgl/cgl_shader_lib.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_texture",
                  "loc": "64:12-19"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_shader_lib.js",
                  "module": "./src/core/cgl/cgl_shader_lib.js",
                  "moduleName": "./src/core/cgl/cgl_shader_lib.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_texture",
                  "loc": "65:30-37"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_framebuffer2.js",
                  "module": "./src/core/cgl/cgl_framebuffer2.js",
                  "moduleName": "./src/core/cgl/cgl_framebuffer2.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_texture",
                  "loc": "65:37-44"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_framebuffer2.js",
                  "module": "./src/core/cgl/cgl_framebuffer2.js",
                  "moduleName": "./src/core/cgl/cgl_framebuffer2.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_texture",
                  "loc": "73:14-21"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_framebuffer2.js",
                  "module": "./src/core/cgl/cgl_framebuffer2.js",
                  "moduleName": "./src/core/cgl/cgl_framebuffer2.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_texture",
                  "loc": "74:39-46"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_framebuffer2.js",
                  "module": "./src/core/cgl/cgl_framebuffer2.js",
                  "moduleName": "./src/core/cgl/cgl_framebuffer2.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_texture",
                  "loc": "76:29-36"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_textureeffect.js",
                  "module": "./src/core/cgl/cgl_textureeffect.js",
                  "moduleName": "./src/core/cgl/cgl_textureeffect.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_texture",
                  "loc": "167:38-45"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_framebuffer2.js",
                  "module": "./src/core/cgl/cgl_framebuffer2.js",
                  "moduleName": "./src/core/cgl/cgl_framebuffer2.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_texture",
                  "loc": "302:41-48"
                }
              ],
              "usedExports": [
                "Texture"
              ],
              "providedExports": [
                "Texture"
              ],
              "optimizationBailout": [
              ],
              "depth": 4,
              "source": "import { profileData } from \"./cgl_profiledata\";\nimport { uuid } from \"../utils\";\n\nvar tempTexture = null;\nvar tempTextureEmpty = null;\nvar randomTexture = null;\nvar tempTextureGradient = null;\nvar DEFAULT_TEXTURE_SIZE = 8;\n\n/**\n * A Texture\n * @external CGL\n * @namespace Texture\n * @constructor\n * @param {Context} cgl\n * @param {Object} [options]\n * @hideconstructor\n * @class\n * @example\n * // generate a 256x256 pixel texture of random colors\n * const size=256;\n * const data = new Uint8Array(size*size*4);\n *\n * for(var x=0;x<size*size*4;x++) data[ x*4+3]=255;\n *\n * const tex=new CGL.Texture(cgl);\n * tex.initFromData(data,size,size,CGL.Texture.FILTER_NEAREST,CGL.Texture.WRAP_REPEAT);\n */\nconst Texture = function (__cgl, options)\n{\n    if (!__cgl) throw \"no cgl\";\n\n    this._cgl = __cgl;\n    this.tex = this._cgl.gl.createTexture();\n    this.id = uuid();\n    this.width = 0;\n    this.height = 0;\n    this.flip = true;\n    this.shadowMap = false;\n    this.filter = Texture.FILTER_NEAREST;\n    this.wrap = Texture.WRAP_CLAMP_TO_EDGE;\n    this.texTarget = this._cgl.gl.TEXTURE_2D;\n    if (options && options.type) this.texTarget = options.type;\n    this.textureType = Texture.TYPE_DEFAULT;\n    this.unpackAlpha = true;\n    this._fromData = true;\n    this.name = \"unknown\";\n\n    if (options)\n    {\n        this.name = options.name || this.name;\n        if (options.isDepthTexture) this.textureType = Texture.TYPE_DEPTH;\n        if (options.isFloatingPointTexture) this.textureType = Texture.TYPE_FLOAT;\n\n        if (\"textureType\" in options) this.textureType = options.textureType;\n        if (\"filter\" in options) this.filter = options.filter;\n        if (\"wrap\" in options) this.wrap = options.wrap;\n        if (\"unpackAlpha\" in options) this.unpackAlpha = options.unpackAlpha;\n        if (\"flip\" in options) this.flip = options.flip;\n        if (\"shadowMap\" in options) this.shadowMap = options.shadowMap;\n    }\n    else\n    {\n        options = {\n            width: DEFAULT_TEXTURE_SIZE,\n            height: DEFAULT_TEXTURE_SIZE,\n        };\n    }\n\n    this.setSize(options.width, options.height);\n};\n\n/**\n * returns true if otherTexture has same options (width/height/filter/wrap etc)\n * @function compareSettings\n * @memberof Texture\n * @instance\n * @param {Texture} otherTexture\n * @returns {Boolean}\n */\nTexture.prototype.compareSettings = function (tex)\n{\n    if (!tex) return false;\n    return tex.width == this.width && tex.height == this.height && tex.filter == this.filter && tex.wrap == this.wrap && tex.textureType == this.textureType && tex.unpackAlpha == this.unpackAlpha && tex.flip == this.flip;\n};\n\n/**\n * returns a new texture with the same settings (does not copy texture itself)\n * @function clone\n * @memberof Texture\n * @instance\n * @returns {Texture}\n */\nTexture.prototype.clone = function ()\n{\n    var newTex = new Texture(this._cgl, {\n        name: this.name,\n        filter: this.filter,\n        wrap: this.wrap,\n        textureType: this.textureType,\n        unpackAlpha: this.unpackAlpha,\n        flip: this.flip,\n        width: this.width,\n        height: this.height,\n    });\n\n    if (!this.compareSettings(newTex))\n    {\n        console.error(\"Cloned texture settings do not compare!\");\n        console.log(this);\n        console.log(newTex);\n    }\n\n    return newTex;\n};\n\n/**\n * set pixel size of texture\n * @function setSize\n * @memberof Texture\n * @instance\n * @param {Number} width\n * @param {Number} height\n */\nTexture.prototype.setSize = function (w, h)\n{\n    if (w != w || w <= 0 || !w) w = DEFAULT_TEXTURE_SIZE;\n    if (h != h || h <= 0 || !h) h = DEFAULT_TEXTURE_SIZE;\n    w = Math.floor(w);\n    h = Math.floor(h);\n    if (this.width == w && this.height == h) return;\n\n    this.width = w;\n    this.height = h;\n\n    this._cgl.gl.bindTexture(this.texTarget, this.tex);\n    profileData.profileTextureResize++;\n\n    var uarr = null;\n\n    if (this.textureType == Texture.TYPE_FLOAT)\n    {\n        this.filter = Texture.FILTER_NEAREST;\n    }\n\n    this._setFilter();\n\n    if (this.textureType == Texture.TYPE_FLOAT)\n    {\n        // if(this._cgl.glVersion==1 && !this._cgl.gl.getExtension('OES_texture_float')) throw \"no float texture extension\";\n        // should also check for HALF_FLOAT and use this if this is available, but no float... (some ios devices)\n\n        if (this._cgl.glVersion == 1)\n        {\n            if (this._cgl.glUseHalfFloatTex)\n            {\n                var ext = this._cgl.gl.getExtension(\"OES_texture_half_float\");\n                if (this._cgl.glVersion == 1 && !ext) throw \"no half float texture extension\";\n\n                this._cgl.gl.texImage2D(this.texTarget, 0, this._cgl.gl.RGBA, w, h, 0, this._cgl.gl.RGBA, ext.HALF_FLOAT_OES, null);\n            }\n            else\n            {\n                var ext = this._cgl.gl.getExtension(\"OES_texture_float\");\n\n                this._cgl.gl.texImage2D(this.texTarget, 0, this._cgl.gl.RGBA, w, h, 0, this._cgl.gl.RGBA, this._cgl.gl.FLOAT, null); // UNSIGNED_SHORT\n            }\n        }\n        else this._cgl.gl.texImage2D(this.texTarget, 0, this._cgl.gl.RGBA32F, w, h, 0, this._cgl.gl.RGBA, this._cgl.gl.FLOAT, null);\n    }\n    else if (this.textureType == Texture.TYPE_DEPTH)\n    {\n        if (this._cgl.glVersion == 1)\n        {\n            // if(this._cgl.gl.getExtension('OES_texture_half_float'))\n            // {\n            //     console.log(\"is half float\");\n            //     var tcomp=this._cgl.gl.DEPTH_COMPONENT;\n            //     this._cgl.gl.texImage2D(this.texTarget, 0, tcomp, w,h, 0, this._cgl.gl.DEPTH_COMPONENT, this._cgl.gl.HALD_FLOAT_OES, null);\n            // }\n            // else\n            {\n                var tcomp = this._cgl.gl.DEPTH_COMPONENT;\n                this._cgl.gl.texImage2D(this.texTarget, 0, tcomp, w, h, 0, this._cgl.gl.DEPTH_COMPONENT, this._cgl.gl.UNSIGNED_SHORT, null);\n            }\n        }\n        else\n        {\n            var tcomp = this._cgl.gl.DEPTH_COMPONENT32F;\n            this._cgl.gl.texImage2D(this.texTarget, 0, tcomp, w, h, 0, this._cgl.gl.DEPTH_COMPONENT, this._cgl.gl.FLOAT, null);\n        }\n    }\n    else\n    {\n        this._cgl.gl.texImage2D(this.texTarget, 0, this._cgl.gl.RGBA, w, h, 0, this._cgl.gl.RGBA, this._cgl.gl.UNSIGNED_BYTE, uarr);\n    }\n\n    // if( ( this._cgl.glVersion==2 || this.isPowerOfTwo()) && this.filter==Texture.FILTER_MIPMAP)\n    // {\n    //     this._cgl.gl.generateMipmap(this.texTarget);\n    // }\n    this.updateMipMap();\n\n    this._cgl.gl.bindTexture(this.texTarget, null);\n};\n\n/**\n * @function initFromData\n * @memberof Texture\n * @instance\n * @description create texturem from rgb data\n * @param {Array<Number>} data rgb color array [r,g,b,a,r,g,b,a,...]\n * @param {Number} width\n * @param {Number} height\n * @param {Number} filter\n * @param {Number} wrap\n */\nTexture.prototype.initFromData = function (data, w, h, filter, wrap)\n{\n    this.filter = filter;\n    this.wrap = wrap;\n    if (filter == undefined) this.filter = Texture.FILTER_LINEAR;\n    if (wrap == undefined) this.wrap = Texture.CLAMP_TO_EDGE;\n    this.width = w;\n    this.height = h;\n    this._fromData = true;\n    this._cgl.gl.bindTexture(this.texTarget, this.tex);\n    this._cgl.gl.texImage2D(this.texTarget, 0, this._cgl.gl.RGBA, w, h, 0, this._cgl.gl.RGBA, this._cgl.gl.UNSIGNED_BYTE, data);\n    this._setFilter();\n\n    // if( (this._cgl.glVersion==2 || this.isPowerOfTwo()) && this.filter==Texture.FILTER_MIPMAP)\n    // {\n    //     this._cgl.gl.generateMipmap(this.texTarget);\n    // }\n    this.updateMipMap();\n\n    this._cgl.gl.bindTexture(this.texTarget, null);\n};\n\nTexture.prototype.updateMipMap = function ()\n{\n    if ((this._cgl.glVersion == 2 || this.isPowerOfTwo()) && this.filter == Texture.FILTER_MIPMAP)\n    {\n        this._cgl.gl.generateMipmap(this.texTarget);\n    }\n};\n\n/**\n * set texture data from an image/canvas object\n * @function initTexture\n * @memberof Texture\n * @instance\n * @param {Object} image\n * @param {Number} filter\n */\nTexture.prototype.initTexture = function (img, filter)\n{\n    this._fromData = false;\n    // if(filter) this.unpackAlpha=filter.unpackAlpha||this.unpackAlpha;\n\n    this._cgl.gl.pixelStorei(this._cgl.gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, this.unpackAlpha);\n    if (img.width) this.width = img.width;\n    if (img.height) this.height = img.height;\n    if (filter) this.filter = filter;\n\n    this._cgl.gl.bindTexture(this.texTarget, this.tex);\n    this._cgl.gl.pixelStorei(this._cgl.gl.UNPACK_FLIP_Y_WEBGL, !this.flip);\n    this._cgl.gl.texImage2D(this.texTarget, 0, this._cgl.gl.RGBA, this._cgl.gl.RGBA, this._cgl.gl.UNSIGNED_BYTE, img);\n\n    this._setFilter();\n\n    this.updateMipMap();\n\n    this._cgl.gl.bindTexture(this.texTarget, null);\n    this._cgl.gl.pixelStorei(this._cgl.gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n};\n\n/**\n * delete texture. use this when texture is no longer needed\n * @function delete\n * @memberof Texture\n * @instance\n */\nTexture.prototype.delete = function ()\n{\n    profileData.profileTextureDelete++;\n    this._cgl.gl.deleteTexture(this.tex);\n};\n\n/**\n * @function isPowerOfTwo\n * @memberof Texture\n * @instance\n * @description return true if texture width and height are both power of two\n * @return {Boolean}\n */\nTexture.prototype.isPowerOfTwo = function ()\n{\n    return Texture.isPowerOfTwo(this.width) && Texture.isPowerOfTwo(this.height);\n};\n\nTexture.prototype.printInfo = function ()\n{\n    console.log(this.getInfo());\n};\n\nTexture.prototype.getInfoReadable = function ()\n{\n    var info = this.getInfo();\n    var html = \"\";\n\n    info.name = info.name.substr(0, info.name.indexOf(\"?rnd=\"));\n\n    for (var i in info)\n    {\n        html += \"* \" + i + \":  **\" + info[i] + \"**\\n\";\n    }\n\n    return html;\n};\n\nTexture.prototype.getInfo = function ()\n{\n    var obj = {};\n\n    obj.name = this.name;\n    obj[\"power of two\"] = this.isPowerOfTwo();\n    obj.size = this.width + \" x \" + this.height;\n\n    var targetString = this.texTarget;\n    if (this.texTarget == this._cgl.gl.TEXTURE_2D) targetString = \"TEXTURE_2D\";\n    obj.target = targetString;\n\n    obj.unpackAlpha = this.unpackAlpha;\n\n    if (this.textureType == Texture.TYPE_FLOAT) obj.textureType = \"TYPE_FLOAT\";\n    else if (this.textureType == Texture.TYPE_DEPTH) obj.textureType = \"TYPE_DEPTH\";\n    else if (this.textureType == Texture.TYPE_DEFAULT) obj.textureType = \"TYPE_DEFAULT\";\n    else obj.textureType = \"UNKNOWN\";\n\n    if (this.wrap == Texture.WRAP_CLAMP_TO_EDGE) obj.wrap = \"CLAMP_TO_EDGE\";\n    else if (this.wrap == Texture.WRAP_REPEAT) obj.wrap = \"WRAP_REPEAT\";\n    else if (this.wrap == Texture.WRAP_MIRRORED_REPEAT) obj.wrap = \"WRAP_MIRRORED_REPEAT\";\n    else obj.wrap = \"UNKNOWN\";\n\n    if (this.filter == Texture.FILTER_NEAREST) obj.filter = \"FILTER_NEAREST\";\n    else if (this.filter == Texture.FILTER_LINEAR) obj.filter = \"FILTER_LINEAR\";\n    else if (this.filter == Texture.FILTER_MIPMAP) obj.filter = \"FILTER_MIPMAP\";\n    else obj.filter = \"UNKNOWN\";\n    return obj;\n};\n\nTexture.prototype._setFilter = function ()\n{\n    if (!this._fromData)\n    {\n        this._cgl.gl.pixelStorei(this._cgl.gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, this.unpackAlpha);\n    }\n\n    if (this.shadowMap)\n    {\n        console.log(\"shadowmap tex\");\n        this._cgl.gl.texParameteri(this._cgl.gl.TEXTURE_2D, this._cgl.gl.TEXTURE_COMPARE_MODE, this._cgl.gl.COMPARE_REF_TO_TEXTURE);\n        this._cgl.gl.texParameteri(this._cgl.gl.TEXTURE_2D, this._cgl.gl.TEXTURE_COMPARE_FUNC, this._cgl.gl.LEQUAL);\n    }\n\n    if (this._cgl.glVersion == 1 && !this.isPowerOfTwo())\n    {\n        // console.log( 'non power of two',this.width,this.height );\n        this._cgl.gl.texParameteri(this.texTarget, this._cgl.gl.TEXTURE_MAG_FILTER, this._cgl.gl.NEAREST);\n        this._cgl.gl.texParameteri(this.texTarget, this._cgl.gl.TEXTURE_MIN_FILTER, this._cgl.gl.NEAREST);\n\n        this._cgl.gl.texParameteri(this.texTarget, this._cgl.gl.TEXTURE_WRAP_S, this._cgl.gl.CLAMP_TO_EDGE);\n        this._cgl.gl.texParameteri(this.texTarget, this._cgl.gl.TEXTURE_WRAP_T, this._cgl.gl.CLAMP_TO_EDGE);\n\n        this.filter = Texture.FILTER_NEAREST;\n        this.wrap = Texture.WRAP_CLAMP_TO_EDGE;\n    }\n    else\n    {\n        if (this.wrap == Texture.WRAP_CLAMP_TO_EDGE)\n        {\n            this._cgl.gl.texParameteri(this.texTarget, this._cgl.gl.TEXTURE_WRAP_S, this._cgl.gl.CLAMP_TO_EDGE);\n            this._cgl.gl.texParameteri(this.texTarget, this._cgl.gl.TEXTURE_WRAP_T, this._cgl.gl.CLAMP_TO_EDGE);\n        }\n        else if (this.wrap == Texture.WRAP_REPEAT)\n        {\n            this._cgl.gl.texParameteri(this.texTarget, this._cgl.gl.TEXTURE_WRAP_S, this._cgl.gl.REPEAT);\n            this._cgl.gl.texParameteri(this.texTarget, this._cgl.gl.TEXTURE_WRAP_T, this._cgl.gl.REPEAT);\n        }\n        else if (this.wrap == Texture.WRAP_MIRRORED_REPEAT)\n        {\n            this._cgl.gl.texParameteri(this.texTarget, this._cgl.gl.TEXTURE_WRAP_S, this._cgl.gl.MIRRORED_REPEAT);\n            this._cgl.gl.texParameteri(this.texTarget, this._cgl.gl.TEXTURE_WRAP_T, this._cgl.gl.MIRRORED_REPEAT);\n        }\n\n        if (this.filter == Texture.FILTER_NEAREST)\n        {\n            this._cgl.gl.texParameteri(this.texTarget, this._cgl.gl.TEXTURE_MAG_FILTER, this._cgl.gl.NEAREST);\n            this._cgl.gl.texParameteri(this.texTarget, this._cgl.gl.TEXTURE_MIN_FILTER, this._cgl.gl.NEAREST);\n        }\n        else if (this.filter == Texture.FILTER_LINEAR)\n        {\n            this._cgl.gl.texParameteri(this.texTarget, this._cgl.gl.TEXTURE_MIN_FILTER, this._cgl.gl.LINEAR);\n            this._cgl.gl.texParameteri(this.texTarget, this._cgl.gl.TEXTURE_MAG_FILTER, this._cgl.gl.LINEAR);\n        }\n        else if (this.filter == Texture.FILTER_MIPMAP)\n        {\n            this._cgl.gl.texParameteri(this.texTarget, this._cgl.gl.TEXTURE_MAG_FILTER, this._cgl.gl.LINEAR);\n            this._cgl.gl.texParameteri(this.texTarget, this._cgl.gl.TEXTURE_MIN_FILTER, this._cgl.gl.LINEAR_MIPMAP_LINEAR);\n        }\n        else\n        {\n            console.log(\"unknown texture filter!\", this.filter);\n            throw new Error(\"unknown texture filter!\" + this.filter);\n        }\n    }\n};\n\n/**\n * @function load\n * @static\n * @memberof Texture\n * @description load an image from an url\n * @param {Context} cgl\n * @param {String} url\n * @param {Function} onFinished\n * @param {Object} options\n * @return {Texture}\n */\nTexture.load = function (cgl, url, finishedCallback, settings)\n{\n    var loadingId = cgl.patch.loading.start(\"texture\", url);\n    var texture = new Texture(cgl);\n\n    texture.name = url;\n\n    if (CABLES.UI) gui.jobs().start({ id: \"loadtexture\" + loadingId, title: \"loading texture (\" + url + \")\" });\n\n    texture.image = new Image();\n    texture.image.crossOrigin = \"\";\n\n    if (settings && settings.hasOwnProperty(\"filter\")) texture.filter = settings.filter;\n    if (settings && settings.hasOwnProperty(\"flip\")) texture.flip = settings.flip;\n    if (settings && settings.hasOwnProperty(\"wrap\")) texture.wrap = settings.wrap;\n    if (settings && settings.hasOwnProperty(\"unpackAlpha\")) texture.unpackAlpha = settings.unpackAlpha;\n\n    texture.image.onabort = texture.image.onerror = function (e)\n    {\n        console.warn(\"[cgl.texture.load] error loading texture\", e);\n        cgl.patch.loading.finished(loadingId);\n        var error = { error: true };\n        if (finishedCallback) finishedCallback(error);\n        if (CABLES.UI) gui.jobs().finish(\"loadtexture\" + loadingId);\n    };\n\n    texture.image.onload = function (e)\n    {\n        texture.initTexture(texture.image);\n        cgl.patch.loading.finished(loadingId);\n        if (CABLES.UI) gui.jobs().finish(\"loadtexture\" + loadingId);\n\n        if (finishedCallback) finishedCallback();\n    };\n    texture.image.src = url;\n\n    return texture;\n};\n\n/**\n * @static\n * @function getTempTexture\n * @memberof Texture\n * @description returns the default temporary texture (grey diagonal stipes)\n * @param {Context} cgl\n * @return {Texture}\n */\nTexture.getTempTexture = function (cgl)\n{\n    if (!tempTexture) tempTexture = Texture.getTemporaryTexture(cgl, 256, Texture.FILTER_LINEAR, Texture.REPEAT);\n    return tempTexture;\n};\n\n/**\n * @function getEmptyTexture\n * @memberof Texture\n * @instance\n * @description returns a reference to a small empty texture\n * @return {Texture}\n */\nTexture.getEmptyTexture = function (cgl)\n{\n    if (tempTextureEmpty) return tempTextureEmpty;\n\n    tempTextureEmpty = new Texture(cgl);\n    var data = new Uint8Array(8 * 8 * 4); // .fill(0);\n\n    tempTextureEmpty.initFromData(data, 8, 8, Texture.FILTER_NEAREST, Texture.WRAP_REPEAT);\n\n    return tempTextureEmpty;\n};\n\n/**\n * @function getRandomTexture\n * @memberof Texture\n * @static\n * @description returns a reference to a random texture\n * @return {Texture}\n */\nTexture.getRandomTexture = function (cgl)\n{\n    if (randomTexture) return randomTexture;\n\n    const size = 256;\n    const data = new Uint8Array(size * size * 4);\n\n    for (var x = 0; x < size * size; x++)\n    {\n        data[x * 4 + 0] = Math.random() * 255;\n        data[x * 4 + 1] = Math.random() * 255;\n        data[x * 4 + 2] = Math.random() * 255;\n        data[x * 4 + 3] = 255;\n    }\n\n    randomTexture = new Texture(cgl);\n    randomTexture.initFromData(data, size, size, Texture.FILTER_NEAREST, Texture.WRAP_REPEAT);\n\n    return randomTexture;\n};\n\n/**\n * @static\n * @function getTempGradientTexture\n * @memberof Texture\n * @description returns a gradient texture from black to white\n * @param {Context} cgl\n * @return {Texture}\n */\nTexture.getTempGradientTexture = function (cgl)\n{\n    if (tempTextureGradient) return tempTextureGradient;\n    var temptex = new Texture(cgl);\n    const size = 256;\n    var data = new Uint8Array(size * size * 4); // .fill(0);\n\n    for (var y = 0; y < size; y++)\n    {\n        for (var x = 0; x < size; x++)\n        {\n            data[(x + y * size) * 4 + 0] = data[(x + y * size) * 4 + 1] = data[(x + y * size) * 4 + 2] = 255 - y;\n            data[(x + y * size) * 4 + 3] = 255;\n        }\n    }\n\n    temptex.initFromData(data, size, size, Texture.FILTER_NEAREST, Texture.WRAP_REPEAT);\n    tempTextureGradient = temptex;\n    return temptex;\n};\n\nTexture.getTemporaryTexture = function (cgl, size, filter, wrap)\n{\n    var temptex = new Texture(cgl);\n    var arr = [];\n    for (var y = 0; y < size; y++)\n    {\n        for (var x = 0; x < size; x++)\n        {\n            if ((x + y) % 64 < 32)\n            {\n                arr.push(200 + (y / size) * 25 + (x / size) * 25);\n                arr.push(200 + (y / size) * 25 + (x / size) * 25);\n                arr.push(200 + (y / size) * 25 + (x / size) * 25);\n            }\n            else\n            {\n                arr.push(40 + (y / size) * 25 + (x / size) * 25);\n                arr.push(40 + (y / size) * 25 + (x / size) * 25);\n                arr.push(40 + (y / size) * 25 + (x / size) * 25);\n            }\n            arr.push(255);\n        }\n    }\n\n    var data = new Uint8Array(arr);\n    temptex.initFromData(data, size, size, filter, wrap);\n\n    return temptex;\n};\n\n/**\n * @static\n * @function createFromImage\n * @memberof Texture\n * @description create texturem from image data (e.g. image or canvas)\n * @param {Context} cgl\n * @param {Object} image\n * @param {Object} options\n */\nTexture.createFromImage = function (cgl, img, options)\n{\n    var texture = new Texture(cgl, options);\n    texture.flip = false;\n    texture.image = img;\n    texture.width = img.width;\n    texture.height = img.height;\n    texture.initTexture(img, options.filter);\n\n    return texture;\n};\n\n// deprecated!\nTexture.fromImage = function (cgl, img, filter, wrap)\n{\n    console.error(\"deprecated texture from image...\");\n\n    var texture = new Texture(cgl);\n    texture.flip = false;\n    if (filter) texture.filter = filter;\n    if (wrap) texture.wrap = wrap;\n    texture.image = img;\n    texture.initTexture(img);\n    return texture;\n};\n\n/**\n * @static\n * @function isPowerOfTwo\n * @memberof Texture\n * @description returns true if x is power of two\n * @param {Number} x\n * @return {Boolean}\n */\nTexture.isPowerOfTwo = function (x)\n{\n    return x == 1 || x == 2 || x == 4 || x == 8 || x == 16 || x == 32 || x == 64 || x == 128 || x == 256 || x == 512 || x == 1024 || x == 2048 || x == 4096 || x == 8192 || x == 16384;\n};\n\nTexture.FILTER_NEAREST = 0;\nTexture.FILTER_LINEAR = 1;\nTexture.FILTER_MIPMAP = 2;\n\nTexture.WRAP_REPEAT = 0;\nTexture.WRAP_MIRRORED_REPEAT = 1;\nTexture.WRAP_CLAMP_TO_EDGE = 2;\n\nTexture.TYPE_DEFAULT = 0;\nTexture.TYPE_DEPTH = 1;\nTexture.TYPE_FLOAT = 2;\n\nexport { Texture };\n"
            },
            {
              "id": null,
              "identifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_framebuffer.js",
              "name": "./src/core/cgl/cgl_framebuffer.js",
              "index": 14,
              "index2": 10,
              "size": 6356,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
              ],
              "issuer": "/home/tom/cables_dev/cables/src/core/cgl/index.js",
              "issuerId": null,
              "issuerName": "./src/core/cgl/index.js",
              "issuerPath": [
                {
                  "id": 0,
                  "identifier": "multi /home/tom/cables_dev/cables/src/core/index.js",
                  "name": "multi ./src/core/index.js"
                },
                {
                  "id": null,
                  "identifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "name": "./src/core/index.js"
                },
                {
                  "id": null,
                  "identifier": "/home/tom/cables_dev/cables/src/core/loadingstatus.js",
                  "name": "./src/core/loadingstatus.js"
                },
                {
                  "id": null,
                  "identifier": "/home/tom/cables_dev/cables/src/core/cgl/index.js",
                  "name": "./src/core/cgl/index.js"
                }
              ],
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "assets": [
              ],
              "reasons": [
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/index.js",
                  "module": "./src/core/cgl/index.js",
                  "moduleName": "./src/core/cgl/index.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./cgl_framebuffer",
                  "loc": "1:0-48"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/index.js",
                  "module": "./src/core/cgl/index.js",
                  "moduleName": "./src/core/cgl/index.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_framebuffer",
                  "loc": "27:8-19"
                }
              ],
              "usedExports": [
                "Framebuffer"
              ],
              "providedExports": [
                "Framebuffer"
              ],
              "optimizationBailout": [
              ],
              "depth": 4,
              "source": "import { Texture } from \"./cgl_texture\";\nimport { profileData } from \"./cgl_profiledata\";\n\n/**\n * a framebuffer\n * @external CGL\n * @namespace Framebuffer\n * @constructor\n * @param {Context} cgl\n * @param {Number} width\n * @param {Number} height\n * @param {Object} [options]\n */\n\nconst Framebuffer = function (_cgl, w, h, options)\n{\n    var cgl = _cgl;\n\n    var depthTextureExt = cgl.gl.getExtension(\"WEBGL_depth_texture\") || cgl.gl.getExtension(\"WEBKIT_WEBGL_depth_texture\") || cgl.gl.getExtension(\"MOZ_WEBGL_depth_texture\") || cgl.gl.DEPTH_TEXTURE;\n    if (!depthTextureExt)\n    {\n        cgl.exitError(\"NO_DEPTH_TEXTURE\", \"no depth texture support\");\n        return;\n    }\n\n    var width = w || 512;\n    var height = h || 512;\n\n    options = options || {\n        isFloatingPointTexture: false,\n    };\n\n    if (!options.hasOwnProperty(\"filter\")) options.filter = Texture.FILTER_LINEAR;\n\n    var texture = new Texture(cgl, {\n        isFloatingPointTexture: options.isFloatingPointTexture,\n        filter: options.filter,\n        wrap: Texture.CLAMP_TO_EDGE,\n    });\n\n    var textureDepth = null;\n    if (depthTextureExt)\n    {\n        textureDepth = new Texture(cgl, {\n            isDepthTexture: true,\n        });\n    }\n\n    var frameBuf = cgl.gl.createFramebuffer();\n    var depthBuffer = cgl.gl.createRenderbuffer();\n\n    this.getWidth = function ()\n    {\n        return width;\n    };\n    this.getHeight = function ()\n    {\n        return height;\n    };\n\n    /**\n     * get native gl framebuffer\n     * @function getGlFrameBuffer\n     * @memberof Framebuffer\n     * @returns {Object} framebuffer\n     */\n    this.getGlFrameBuffer = function ()\n    {\n        return frameBuf;\n    };\n\n    /**\n     * get depth renderbuffer\n     * @function getDepthRenderBuffer\n     * @memberof Framebuffer\n     * @returns {Object} renderbuffer\n     */\n    this.getDepthRenderBuffer = function ()\n    {\n        return depthBuffer;\n    };\n\n    /**\n     * get color texture\n     * @function getTextureColor\n     * @memberof Framebuffer\n     * @returns {Texture} rgba texture\n     */\n    this.getTextureColor = function ()\n    {\n        return texture;\n    };\n\n    /**\n     * get depth texture\n     * @function getTextureDepth\n     * @memberof Framebuffer\n     * @returns {Texture} depth texture\n     */\n    this.getTextureDepth = function ()\n    {\n        return textureDepth;\n    };\n\n    this.setFilter = function (f)\n    {\n        texture.filter = f;\n        texture.setSize(width, height);\n    };\n\n    this.setSize = function (w, h)\n    {\n        if (w < 2) w = 2;\n        if (h < 2) h = 2;\n\n        width = Math.ceil(w);\n        height = Math.ceil(h);\n\n        profileData.profileFrameBuffercreate++;\n\n        cgl.gl.bindFramebuffer(cgl.gl.FRAMEBUFFER, frameBuf);\n        cgl.gl.bindRenderbuffer(cgl.gl.RENDERBUFFER, depthBuffer);\n\n        texture.setSize(width, height);\n        if (textureDepth) textureDepth.setSize(width, height);\n\n        // if(depthTextureExt) cgl.gl.renderbufferStorage(cgl.gl.RENDERBUFFER, cgl.gl.DEPTH_COMPONENT16, width,height);\n        if (depthTextureExt) cgl.gl.renderbufferStorage(cgl.gl.RENDERBUFFER, cgl.gl.DEPTH_COMPONENT16, width, height);\n\n        cgl.gl.framebufferTexture2D(cgl.gl.FRAMEBUFFER, cgl.gl.COLOR_ATTACHMENT0, cgl.gl.TEXTURE_2D, texture.tex, 0);\n\n        if (depthTextureExt)\n        {\n            // if(this._cgl.gl.getExtension('OES_texture_half_float'))\n            // {\n            //     console.log(\"half float\");HALF_FLOAT_OES\n            // }\n            cgl.gl.framebufferRenderbuffer(cgl.gl.FRAMEBUFFER, cgl.gl.DEPTH_ATTACHMENT, cgl.gl.RENDERBUFFER, depthBuffer);\n            cgl.gl.framebufferTexture2D(\n                cgl.gl.FRAMEBUFFER,\n                cgl.gl.DEPTH_ATTACHMENT, // safari needs DEPTH_ATTACHMENT NOT DEPTH_ATTACHMENT16\n                // cgl.gl.DEPTH_COMPONENT16,\n                cgl.gl.TEXTURE_2D,\n                textureDepth.tex,\n                0,\n            );\n        }\n\n        if (!cgl.gl.isFramebuffer(frameBuf)) throw \"Invalid framebuffer\";\n        var status = cgl.gl.checkFramebufferStatus(cgl.gl.FRAMEBUFFER);\n        switch (status)\n        {\n        case cgl.gl.FRAMEBUFFER_COMPLETE:\n            break;\n        case cgl.gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:\n            console.log(\"FRAMEBUFFER_INCOMPLETE_ATTACHMENT...\", width, height, texture.tex, depthBuffer);\n            throw new Error(\"Incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_ATTACHMENT\");\n        case cgl.gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:\n            console.log(\"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT\");\n            throw new Error(\"Incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT\");\n        case cgl.gl.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:\n            console.log(\"FRAMEBUFFER_INCOMPLETE_DIMENSIONS\");\n            throw new Error(\"Incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_DIMENSIONS\");\n        case cgl.gl.FRAMEBUFFER_UNSUPPORTED:\n            console.log(\"FRAMEBUFFER_UNSUPPORTED\");\n            throw new Error(\"Incomplete framebuffer: FRAMEBUFFER_UNSUPPORTED\");\n        default:\n            console.log(\"incomplete framebuffer\", status);\n            throw new Error(\"Incomplete framebuffer: \" + status);\n            // throw(\"Incomplete framebuffer: \" + status);\n        }\n\n        cgl.gl.bindTexture(cgl.gl.TEXTURE_2D, null);\n        cgl.gl.bindRenderbuffer(cgl.gl.RENDERBUFFER, null);\n        cgl.gl.bindFramebuffer(cgl.gl.FRAMEBUFFER, null);\n    };\n\n    this.renderStart = function ()\n    {\n        cgl.pushModelMatrix();\n        cgl.gl.bindFramebuffer(cgl.gl.FRAMEBUFFER, frameBuf);\n        cgl.pushGlFrameBuffer(frameBuf);\n        cgl.pushFrameBuffer(this);\n\n        cgl.pushPMatrix();\n        cgl.gl.viewport(0, 0, width, height);\n\n        cgl.gl.clearColor(0, 0, 0, 0);\n        cgl.gl.clear(cgl.gl.COLOR_BUFFER_BIT | cgl.gl.DEPTH_BUFFER_BIT);\n    };\n\n    this.renderEnd = function ()\n    {\n        cgl.popPMatrix();\n        cgl.gl.bindFramebuffer(cgl.gl.FRAMEBUFFER, cgl.popGlFrameBuffer());\n        cgl.popFrameBuffer();\n\n        cgl.popModelMatrix();\n        cgl.resetViewPort();\n    };\n\n    this.delete = function ()\n    {\n        texture.delete();\n        if (textureDepth) textureDepth.delete();\n        cgl.gl.deleteRenderbuffer(depthBuffer);\n        cgl.gl.deleteFramebuffer(frameBuf);\n    };\n\n    this.setSize(width, height);\n};\n\nexport { Framebuffer };\n"
            },
            {
              "id": null,
              "identifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_framebuffer2.js",
              "name": "./src/core/cgl/cgl_framebuffer2.js",
              "index": 17,
              "index2": 11,
              "size": 13896,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
              ],
              "issuer": "/home/tom/cables_dev/cables/src/core/cgl/index.js",
              "issuerId": null,
              "issuerName": "./src/core/cgl/index.js",
              "issuerPath": [
                {
                  "id": 0,
                  "identifier": "multi /home/tom/cables_dev/cables/src/core/index.js",
                  "name": "multi ./src/core/index.js"
                },
                {
                  "id": null,
                  "identifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "name": "./src/core/index.js"
                },
                {
                  "id": null,
                  "identifier": "/home/tom/cables_dev/cables/src/core/loadingstatus.js",
                  "name": "./src/core/loadingstatus.js"
                },
                {
                  "id": null,
                  "identifier": "/home/tom/cables_dev/cables/src/core/cgl/index.js",
                  "name": "./src/core/cgl/index.js"
                }
              ],
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "assets": [
              ],
              "reasons": [
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/index.js",
                  "module": "./src/core/cgl/index.js",
                  "moduleName": "./src/core/cgl/index.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./cgl_framebuffer2",
                  "loc": "2:0-50"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/index.js",
                  "module": "./src/core/cgl/index.js",
                  "moduleName": "./src/core/cgl/index.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_framebuffer2",
                  "loc": "28:8-20"
                }
              ],
              "usedExports": [
                "Framebuffer2"
              ],
              "providedExports": [
                "Framebuffer2"
              ],
              "optimizationBailout": [
              ],
              "depth": 4,
              "source": "// * see framebuffer1\n\nimport { Texture } from \"./cgl_texture\";\nimport { profileData } from \"./cgl_profiledata\";\n\n// const fbs = {\n//     Framebuffer2DrawTargetsDefault: null,\n//     Framebuffer2BlittingFramebuffer: null,\n//     Framebuffer2FinalFramebuffer: null,\n// };\n\n// var this.Framebuffer2DrawTargetsDefault = this.this.Framebuffer2DrawTargetsDefault;\n// var this.Framebuffer2BlittingFramebuffer = this.this.Framebuffer2BlittingFramebuffer;\n// var this.Framebuffer2FinalFramebuffer = this.this.Framebuffer2FinalFramebuffer;\n\n// export { fbs };\n\n\nconst Framebuffer2 = function(cgl, w, h, options) {\n    this.Framebuffer2DrawTargetsDefault = null;\n    this.Framebuffer2BlittingFramebuffer = null;\n    this.Framebuffer2FinalFramebuffer = null;\n    this._cgl = cgl;\n\n    this._width = 0;\n    this._height = 0;\n\n    this._depthRenderbuffer = null;\n    this._frameBuffer = null;\n    this._textureFrameBuffer = null;\n    this._colorRenderbuffers = [];\n    this._drawTargetArray = [];\n\n    if (!this.Framebuffer2BlittingFramebuffer) this.Framebuffer2BlittingFramebuffer = cgl.gl.createFramebuffer();\n    if (!this.Framebuffer2FinalFramebuffer) this.Framebuffer2FinalFramebuffer = cgl.gl.createFramebuffer();\n\n    if (!this.Framebuffer2DrawTargetsDefault) this.Framebuffer2DrawTargetsDefault = [cgl.gl.COLOR_ATTACHMENT0];\n\n    this._options = options || {\n        isFloatingPointTexture: false,\n    };\n\n    if (!this._options.hasOwnProperty(\"numRenderBuffers\")) this._options.numRenderBuffers = 1;\n    if (!this._options.hasOwnProperty(\"depth\")) this._options.depth = true;\n    if (!this._options.hasOwnProperty(\"clear\")) this._options.clear = true;\n\n    if (!this._options.hasOwnProperty(\"multisampling\"))\n    {\n        this._options.multisampling = false;\n        this._options.multisamplingSamples = 0;\n    }\n\n    if (this._options.multisamplingSamples)\n    {\n        if (!this._cgl.gl.MAX_SAMPLES) this._options.multisamplingSamples = 0;\n        else this._options.multisamplingSamples = Math.min(this._cgl.gl.getParameter(this._cgl.gl.MAX_SAMPLES), this._options.multisamplingSamples);\n    }\n\n    if (!this._options.hasOwnProperty(\"filter\")) this._options.filter = Texture.FILTER_LINEAR;\n\n    this._numRenderBuffers = this._options.numRenderBuffers;\n    this._colorTextures = [];\n\n    for (var i = 0; i < this._numRenderBuffers; i++) {\n        this._colorTextures[i] = new Texture(cgl, {\n            name: \"framebuffer2 texture \" + i,\n            isFloatingPointTexture: this._options.isFloatingPointTexture,\n            filter: this._options.filter,\n            wrap: this._options.wrap,\n        });\n    }\n\n    var fil = Texture.FILTER_NEAREST;\n    if (this._options.shadowMap) fil = Texture.FILTER_LINEAR;\n\n    this._textureDepth = new Texture(cgl, {\n        name: \"framebuffer2 depth texture\",\n        isDepthTexture: true,\n        filter: fil,\n        shadowMap: this._options.shadowMap || false,\n    });\n\n    this.setSize(w || 512, h || 512);\n};\n\nFramebuffer2.prototype.getWidth = function() {\n    return this._width;\n};\nFramebuffer2.prototype.getHeight = function() {\n    return this._height;\n};\n\nFramebuffer2.prototype.getGlFrameBuffer = function() {\n    return this._frameBuffer;\n};\n\nFramebuffer2.prototype.getDepthRenderBuffer = function() {\n    return this._depthRenderbuffer;\n};\n\nFramebuffer2.prototype.getTextureColor = function() {\n    return this._colorTextures[0];\n};\n\nFramebuffer2.prototype.getTextureColorNum = function(i) {\n    return this._colorTextures[i];\n};\n\nFramebuffer2.prototype.getTextureDepth = function() {\n    return this._textureDepth;\n};\n\nFramebuffer2.prototype.setFilter = function(f) {\n    for (var i = 0; i < this._numRenderBuffers; i++) {\n        this._colorTextures[i].filter = f;\n        this._colorTextures[i].setSize(this._width, this._height);\n    }\n};\n\nFramebuffer2.prototype.delete = Framebuffer2.prototype.dispose = function() {\n    for (var i = 0; i < this._numRenderBuffers; i++) this._colorTextures[i].delete();\n    // this._texture.delete();\n    this._textureDepth.delete();\n    for (var i = 0; i < this._numRenderBuffers; i++) this._cgl.gl.deleteRenderbuffer(this._colorRenderbuffers[i]);\n    this._cgl.gl.deleteRenderbuffer(this._depthRenderbuffer);\n    this._cgl.gl.deleteFramebuffer(this._frameBuffer);\n    this._cgl.gl.deleteFramebuffer(this._textureFrameBuffer);\n};\n\nFramebuffer2.prototype.setSize = function(w, h) {\n    this._width = Math.floor(w);\n    this._height = Math.floor(h);\n\n    profileData.profileFrameBuffercreate++;\n\n    if (this._frameBuffer) {\n        for (var i = 0; i < this._numRenderBuffers; i++) this._cgl.gl.deleteRenderbuffer(this._colorRenderbuffers[i]);\n        // this._cgl.gl.deleteRenderbuffer(this._colorRenderbuffer);\n        this._cgl.gl.deleteRenderbuffer(this._depthRenderbuffer);\n        this._cgl.gl.deleteFramebuffer(this._frameBuffer);\n        this._cgl.gl.deleteFramebuffer(this._textureFrameBuffer);\n    }\n\n    this._frameBuffer = this._cgl.gl.createFramebuffer();\n    this._textureFrameBuffer = this._cgl.gl.createFramebuffer();\n\n    var depth = this._options.depth;\n\n    for (var i = 0; i < this._numRenderBuffers; i++) {\n        this._colorTextures[i].setSize(this._width, this._height);\n    }\n\n    for (var i = 0; i < this._numRenderBuffers; i++) {\n        var renderBuffer = this._cgl.gl.createRenderbuffer();\n\n        // color renderbuffer\n        var ext = this._cgl.gl.getExtension(\"EXT_color_buffer_float\");\n\n        this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER, this._frameBuffer);\n        this._cgl.gl.bindRenderbuffer(this._cgl.gl.RENDERBUFFER, renderBuffer);\n\n        if (this._options.isFloatingPointTexture) {\n            if (this._options.multisampling) this._cgl.gl.renderbufferStorageMultisample(this._cgl.gl.RENDERBUFFER, this._options.multisamplingSamples, this._cgl.gl.RGBA32F, this._width, this._height);\n            else this._cgl.gl.renderbufferStorage(this._cgl.gl.RENDERBUFFER, this._cgl.gl.RGBA32F, this._width, this._height);\n        } else if (this._options.multisampling) {\n            this._cgl.gl.renderbufferStorageMultisample(this._cgl.gl.RENDERBUFFER, this._options.multisamplingSamples, this._cgl.gl.RGBA8, this._width, this._height);\n        } else {\n            this._cgl.gl.renderbufferStorage(this._cgl.gl.RENDERBUFFER, this._cgl.gl.RGBA8, this._width, this._height);\n        }\n\n        this._cgl.gl.framebufferRenderbuffer(this._cgl.gl.FRAMEBUFFER, this._cgl.gl.COLOR_ATTACHMENT0 + i, this._cgl.gl.RENDERBUFFER, renderBuffer);\n        this._colorRenderbuffers[i] = renderBuffer;\n    }\n\n    // this._cgl.gl.bindFramebuffer(this._cgl.gl.DRAW_FRAMEBUFFER, this._textureFrameBuffer);\n    this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER, this._textureFrameBuffer);\n\n    for (var i = 0; i < this._numRenderBuffers; i++) {\n        this._cgl.gl.framebufferTexture2D(this._cgl.gl.FRAMEBUFFER, this._cgl.gl.COLOR_ATTACHMENT0 + i, this._cgl.gl.TEXTURE_2D, this._colorTextures[i].tex, 0);\n    }\n\n    if (this._options.depth) {\n        this._cgl.gl.framebufferTexture2D(this._cgl.gl.FRAMEBUFFER, this._cgl.gl.DEPTH_ATTACHMENT, this._cgl.gl.TEXTURE_2D, this._textureDepth.tex, 0);\n    }\n\n    // depth renderbuffer\n\n    this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER, this._frameBuffer);\n\n    if (depth) {\n        this._textureDepth.setSize(this._width, this._height);\n        this._depthRenderbuffer = this._cgl.gl.createRenderbuffer();\n\n        this._cgl.gl.bindRenderbuffer(this._cgl.gl.RENDERBUFFER, this._depthRenderbuffer);\n        if (this._options.isFloatingPointTexture) {\n            if (this._options.multisampling) this._cgl.gl.renderbufferStorageMultisample(this._cgl.gl.RENDERBUFFER, this._options.multisamplingSamples, this._cgl.gl.DEPTH_COMPONENT32F, this._width, this._height);\n            else this._cgl.gl.renderbufferStorage(this._cgl.gl.RENDERBUFFER, this._cgl.gl.DEPTH_COMPONENT32F, this._width, this._height);\n        } else if (this._options.multisampling) {\n            this._cgl.gl.renderbufferStorageMultisample(this._cgl.gl.RENDERBUFFER, this._options.multisamplingSamples, this._cgl.gl.DEPTH_COMPONENT32F, this._width, this._height);\n            // this._cgl.gl.renderbufferStorage(this._cgl.gl.RENDERBUFFER,this._cgl.gl.DEPTH_COMPONENT32F, this._width, this._height);\n        } else {\n            this._cgl.gl.renderbufferStorage(this._cgl.gl.RENDERBUFFER, this._cgl.gl.DEPTH_COMPONENT32F, this._width, this._height);\n        }\n\n        this._cgl.gl.framebufferRenderbuffer(this._cgl.gl.FRAMEBUFFER, this._cgl.gl.DEPTH_ATTACHMENT, this._cgl.gl.RENDERBUFFER, this._depthRenderbuffer);\n    }\n\n    // this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER, null);\n    // this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER, this._textureFrameBuffer);\n\n    this._drawTargetArray.length = 0;\n    for (var i = 0; i < this._numRenderBuffers; i++) this._drawTargetArray.push(this._cgl.gl.COLOR_ATTACHMENT0 + i);\n\n    // this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER, null);\n\n    if (!this._cgl.gl.isFramebuffer(this._textureFrameBuffer)) throw \"Invalid framebuffer\";\n    var status = this._cgl.gl.checkFramebufferStatus(this._cgl.gl.FRAMEBUFFER);\n    switch (status) {\n        case this._cgl.gl.FRAMEBUFFER_COMPLETE:\n            break;\n        case this._cgl.gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:\n            console.log(\"FRAMEBUFFER_INCOMPLETE_ATTACHMENT...\");\n            throw new Error(\"Incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_ATTACHMENT\");\n        case this._cgl.gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:\n            console.log(\"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT\");\n            throw new Error(\"Incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT\");\n        case this._cgl.gl.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:\n            console.log(\"FRAMEBUFFER_INCOMPLETE_DIMENSIONS\");\n            throw new Error(\"Incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_DIMENSIONS\");\n        case this._cgl.gl.FRAMEBUFFER_UNSUPPORTED:\n            console.log(\"FRAMEBUFFER_UNSUPPORTED\");\n            throw new Error(\"Incomplete framebuffer: FRAMEBUFFER_UNSUPPORTED\");\n        default:\n            console.log(\"incomplete framebuffer\", status);\n            throw new Error(\"Incomplete framebuffer: \" + status);\n        // throw(\"Incomplete framebuffer: \" + status);\n    }\n    this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER, null);\n    this._cgl.gl.bindRenderbuffer(this._cgl.gl.RENDERBUFFER, null);\n};\n\nFramebuffer2.prototype.renderStart = function() {\n    this._cgl.pushModelMatrix(); // needed ??\n    this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER, this._frameBuffer);\n    this._cgl.pushGlFrameBuffer(this._frameBuffer);\n    this._cgl.pushFrameBuffer(this);\n\n    this._cgl.pushPMatrix();\n    this._cgl.gl.viewport(0, 0, this._width, this._height);\n\n    this._cgl.gl.drawBuffers(this._drawTargetArray);\n\n    if (this._options.clear) {\n        this._cgl.gl.clearColor(0, 0, 0, 0);\n        this._cgl.gl.clear(this._cgl.gl.COLOR_BUFFER_BIT | this._cgl.gl.DEPTH_BUFFER_BIT);\n    }\n};\n\nFramebuffer2.prototype.renderEnd = function() {\n    this._cgl.popPMatrix();\n\n    if (this._numRenderBuffers <= 1) {\n        this._cgl.gl.bindFramebuffer(this._cgl.gl.READ_FRAMEBUFFER, this._frameBuffer);\n        this._cgl.gl.bindFramebuffer(this._cgl.gl.DRAW_FRAMEBUFFER, this._textureFrameBuffer);\n\n        this._cgl.gl.clearBufferfv(this._cgl.gl.COLOR, 0, [0.0, 0.0, 0.0, 1.0]);\n        this._cgl.gl.blitFramebuffer(0, 0, this._width, this._height, 0, 0, this._width, this._height, this._cgl.gl.COLOR_BUFFER_BIT | this._cgl.gl.DEPTH_BUFFER_BIT, this._cgl.gl.NEAREST);\n    } else {\n        this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER, this.Framebuffer2BlittingFramebuffer);\n        this._cgl.gl.framebufferRenderbuffer(this._cgl.gl.FRAMEBUFFER, this._cgl.gl.DEPTH_ATTACHMENT, this._cgl.gl.RENDERBUFFER, this._depthRenderbuffer);\n\n        this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER, this.Framebuffer2FinalFramebuffer);\n        this._cgl.gl.framebufferTexture2D(this._cgl.gl.FRAMEBUFFER, this._cgl.gl.DEPTH_ATTACHMENT, this._cgl.gl.TEXTURE_2D, this._textureDepth.tex, 0);\n\n        for (var i = 0; i < this._numRenderBuffers; i++) {\n            this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER, this.Framebuffer2BlittingFramebuffer);\n            this._cgl.gl.framebufferRenderbuffer(this._cgl.gl.FRAMEBUFFER, this._cgl.gl.COLOR_ATTACHMENT0, this._cgl.gl.RENDERBUFFER, this._colorRenderbuffers[i]);\n\n            this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER, this.Framebuffer2FinalFramebuffer);\n            this._cgl.gl.framebufferTexture2D(this._cgl.gl.FRAMEBUFFER, this._cgl.gl.COLOR_ATTACHMENT0, this._cgl.gl.TEXTURE_2D, this._colorTextures[i].tex, 0);\n\n            this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER, null);\n\n            this._cgl.gl.bindFramebuffer(this._cgl.gl.READ_FRAMEBUFFER, this.Framebuffer2BlittingFramebuffer);\n            this._cgl.gl.bindFramebuffer(this._cgl.gl.DRAW_FRAMEBUFFER, this.Framebuffer2FinalFramebuffer);\n\n            this._cgl.gl.clearBufferfv(this._cgl.gl.COLOR, 0, [0.0, 0.0, 0.0, 1.0]);\n\n            var flags = this._cgl.gl.COLOR_BUFFER_BIT;\n            if (i == 0) flags |= this._cgl.gl.DEPTH_BUFFER_BIT;\n\n            this._cgl.gl.blitFramebuffer(0, 0, this._width, this._height, 0, 0, this._width, this._height, flags, this._cgl.gl.NEAREST);\n        }\n    }\n\n    this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER, this._cgl.popGlFrameBuffer());\n    this._cgl.popFrameBuffer();\n\n    this._cgl.popModelMatrix();\n    this._cgl.resetViewPort();\n\n    if (this._colorTextures[0].filter == Texture.FILTER_MIPMAP) {\n        for (var i = 0; i < this._numRenderBuffers; i++) {\n            this._cgl.gl.bindTexture(this._cgl.gl.TEXTURE_2D, this._colorTextures[i].tex);\n            this._colorTextures[i].updateMipMap();\n            this._cgl.gl.bindTexture(this._cgl.gl.TEXTURE_2D, null);\n        }\n    }\n};\n\nexport { Framebuffer2 };\n"
            },
            {
              "id": null,
              "identifier": "/home/tom/cables_dev/cables/src/core/cgl/constants.js",
              "name": "./src/core/cgl/constants.js",
              "index": 22,
              "index2": 14,
              "size": 826,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
              ],
              "issuer": "/home/tom/cables_dev/cables/src/core/cgl/cgl_state.js",
              "issuerId": null,
              "issuerName": "./src/core/cgl/cgl_state.js",
              "issuerPath": [
                {
                  "id": 0,
                  "identifier": "multi /home/tom/cables_dev/cables/src/core/index.js",
                  "name": "multi ./src/core/index.js"
                },
                {
                  "id": null,
                  "identifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "name": "./src/core/index.js"
                },
                {
                  "id": null,
                  "identifier": "/home/tom/cables_dev/cables/src/core/core_patch.js",
                  "name": "./src/core/core_patch.js"
                },
                {
                  "id": null,
                  "identifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_state.js",
                  "name": "./src/core/cgl/cgl_state.js"
                }
              ],
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "assets": [
              ],
              "reasons": [
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_state.js",
                  "module": "./src/core/cgl/cgl_state.js",
                  "moduleName": "./src/core/cgl/cgl_state.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./constants",
                  "loc": "2:0-40"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_mesh.js",
                  "module": "./src/core/cgl/cgl_mesh.js",
                  "moduleName": "./src/core/cgl/cgl_mesh.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./constants",
                  "loc": "2:0-40"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_shader.js",
                  "module": "./src/core/cgl/cgl_shader.js",
                  "moduleName": "./src/core/cgl/cgl_shader.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./constants",
                  "loc": "7:0-39"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/index.js",
                  "module": "./src/core/cgl/index.js",
                  "moduleName": "./src/core/cgl/index.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./constants",
                  "loc": "21:0-40"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/index.js",
                  "module": "./src/core/cgl/index.js",
                  "moduleName": "./src/core/cgl/index.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "49:4-13"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/index.js",
                  "module": "./src/core/cgl/index.js",
                  "moduleName": "./src/core/cgl/index.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "50:4-13"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/index.js",
                  "module": "./src/core/cgl/index.js",
                  "moduleName": "./src/core/cgl/index.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "51:4-13"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/index.js",
                  "module": "./src/core/cgl/index.js",
                  "moduleName": "./src/core/cgl/index.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "52:4-13"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_mesh.js",
                  "module": "./src/core/cgl/cgl_mesh.js",
                  "moduleName": "./src/core/cgl/cgl_mesh.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "69:22-31"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_mesh.js",
                  "module": "./src/core/cgl/cgl_mesh.js",
                  "moduleName": "./src/core/cgl/cgl_mesh.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "84:39-48"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_mesh.js",
                  "module": "./src/core/cgl/cgl_mesh.js",
                  "moduleName": "./src/core/cgl/cgl_mesh.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "126:16-25"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_mesh.js",
                  "module": "./src/core/cgl/cgl_mesh.js",
                  "moduleName": "./src/core/cgl/cgl_mesh.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "166:16-25"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_mesh.js",
                  "module": "./src/core/cgl/cgl_mesh.js",
                  "moduleName": "./src/core/cgl/cgl_mesh.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "196:26-35"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_mesh.js",
                  "module": "./src/core/cgl/cgl_mesh.js",
                  "moduleName": "./src/core/cgl/cgl_mesh.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "201:26-35"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_mesh.js",
                  "module": "./src/core/cgl/cgl_mesh.js",
                  "moduleName": "./src/core/cgl/cgl_mesh.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "215:26-35"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_shader.js",
                  "module": "./src/core/cgl/cgl_shader.js",
                  "moduleName": "./src/core/cgl/cgl_shader.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "400:75-84"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_shader.js",
                  "module": "./src/core/cgl/cgl_shader.js",
                  "moduleName": "./src/core/cgl/cgl_shader.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "401:81-90"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_shader.js",
                  "module": "./src/core/cgl/cgl_shader.js",
                  "moduleName": "./src/core/cgl/cgl_shader.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "403:78-87"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_shader.js",
                  "module": "./src/core/cgl/cgl_shader.js",
                  "moduleName": "./src/core/cgl/cgl_shader.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "404:78-87"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_shader.js",
                  "module": "./src/core/cgl/cgl_shader.js",
                  "moduleName": "./src/core/cgl/cgl_shader.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "405:77-86"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_shader.js",
                  "module": "./src/core/cgl/cgl_shader.js",
                  "moduleName": "./src/core/cgl/cgl_shader.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "406:83-92"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_shader.js",
                  "module": "./src/core/cgl/cgl_shader.js",
                  "moduleName": "./src/core/cgl/cgl_shader.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "407:88-97"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_state.js",
                  "module": "./src/core/cgl/cgl_state.js",
                  "moduleName": "./src/core/cgl/cgl_state.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "410:26-35"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_state.js",
                  "module": "./src/core/cgl/cgl_state.js",
                  "moduleName": "./src/core/cgl/cgl_state.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "839:47-56"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_state.js",
                  "module": "./src/core/cgl/cgl_state.js",
                  "moduleName": "./src/core/cgl/cgl_state.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "856:46-55"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_state.js",
                  "module": "./src/core/cgl/cgl_state.js",
                  "moduleName": "./src/core/cgl/cgl_state.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "876:21-30"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_state.js",
                  "module": "./src/core/cgl/cgl_state.js",
                  "moduleName": "./src/core/cgl/cgl_state.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "880:26-35"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_state.js",
                  "module": "./src/core/cgl/cgl_state.js",
                  "moduleName": "./src/core/cgl/cgl_state.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "893:26-35"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_state.js",
                  "module": "./src/core/cgl/cgl_state.js",
                  "moduleName": "./src/core/cgl/cgl_state.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "906:26-35"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_state.js",
                  "module": "./src/core/cgl/cgl_state.js",
                  "moduleName": "./src/core/cgl/cgl_state.js",
                  "type": "harmony import specifier",
                  "userRequest": "./constants",
                  "loc": "919:26-35"
                }
              ],
              "usedExports": [
                "CONSTANTS"
              ],
              "providedExports": [
                "CONSTANTS"
              ],
              "optimizationBailout": [
              ],
              "depth": 4,
              "source": "const SHADER = {\n    // default attributes\n    SHADERVAR_VERTEX_POSITION: \"vPosition\",\n    SHADERVAR_VERTEX_NUMBER: \"attrVertIndex\",\n    SHADERVAR_VERTEX_TEXCOORD: \"attrTexCoord\",\n    SHADERVAR_INSTANCE_MMATRIX: \"instMat\",\n\n    // default uniforms\n    SHADERVAR_UNI_PROJMAT: \"projMatrix\",\n    SHADERVAR_UNI_VIEWMAT: \"viewMatrix\",\n    SHADERVAR_UNI_MODELMAT: \"modelMatrix\",\n    SHADERVAR_UNI_NORMALMAT: \"normalMatrix\",\n    SHADERVAR_UNI_INVVIEWMAT: \"inverseViewMatrix\",\n    SHADERVAR_UNI_VIEWPOS: \"camPos\",\n};\n\nconst BLEND_MODES = {\n    BLEND_NONE: 0,\n    BLEND_NORMAL: 1,\n    BLEND_ADD: 2,\n    BLEND_SUB: 3,\n    BLEND_MUL: 4,\n};\n\nconst DEG2RAD = Math.PI / 180.0;\nconst RAD2DEG = 180.0 / Math.PI;\n\nconst CONSTANTS = {\n    MATH: {\n        DEG2RAD,\n        RAD2DEG,\n    },\n    SHADER,\n    BLEND_MODES,\n};\n\n\nexport { CONSTANTS };\n"
            },
            {
              "id": null,
              "identifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_mesh_feedback.js",
              "name": "./src/core/cgl/cgl_mesh_feedback.js",
              "index": 23,
              "index2": 15,
              "size": 4959,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
              ],
              "issuer": "/home/tom/cables_dev/cables/src/core/cgl/cgl_mesh.js",
              "issuerId": null,
              "issuerName": "./src/core/cgl/cgl_mesh.js",
              "issuerPath": [
                {
                  "id": 0,
                  "identifier": "multi /home/tom/cables_dev/cables/src/core/index.js",
                  "name": "multi ./src/core/index.js"
                },
                {
                  "id": null,
                  "identifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "name": "./src/core/index.js"
                },
                {
                  "id": null,
                  "identifier": "/home/tom/cables_dev/cables/src/core/glpatch.js",
                  "name": "./src/core/glpatch.js"
                },
                {
                  "id": null,
                  "identifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_mesh.js",
                  "name": "./src/core/cgl/cgl_mesh.js"
                }
              ],
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "assets": [
              ],
              "reasons": [
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_mesh.js",
                  "module": "./src/core/cgl/cgl_mesh.js",
                  "moduleName": "./src/core/cgl/cgl_mesh.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./cgl_mesh_feedback",
                  "loc": "4:0-61"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_mesh.js",
                  "module": "./src/core/cgl/cgl_mesh.js",
                  "moduleName": "./src/core/cgl/cgl_mesh.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_mesh_feedback",
                  "loc": "548:0-22"
                }
              ],
              "usedExports": [
                "extendMeshWithFeedback"
              ],
              "providedExports": [
                "extendMeshWithFeedback"
              ],
              "optimizationBailout": [
              ],
              "depth": 4,
              "source": "// view-source:http://toji.github.io/webgl2-particles-2/\n\nexport function extendMeshWithFeedback(Mesh)\n{\n    Mesh.prototype.hasFeedbacks = function ()\n    {\n        return this._feedBacks.length > 0;\n    };\n\n    Mesh.prototype.removeFeedbacks = function (shader)\n    {\n        if (!this._feedbacks) return;\n        this._feedbacks.length = 0;\n        this._feedBacksChanged = true;\n    };\n\n    Mesh.prototype.setAttributeFeedback = function () {};\n\n    Mesh.prototype.setFeedback = function (attrib, nameOut, initialArr)\n    {\n        var fb = {\n            nameOut,\n        };\n\n        var found = false;\n\n        this.unBindFeedbacks();\n\n        for (var i = 0; i < this._feedBacks.length; i++)\n        {\n            if (this._feedBacks[i].nameOut == nameOut)\n            {\n                fb = this._feedBacks[i];\n\n                found = true;\n            }\n        }\n\n        if (!found) this._feedBacksChanged = true;\n\n        fb.initialArr = initialArr;\n        fb.attrib = attrib;\n\n        // console.log(\"setfeedback\");\n\n        if (fb.outBuffer) this._cgl.gl.deleteBuffer(fb.outBuffer);\n        // if(fb.attrib.buffer)this._cgl.gl.deleteBuffer(fb.attrib.buffer);\n        fb.outBuffer = this._cgl.gl.createBuffer();\n        this._cgl.gl.bindBuffer(this._cgl.gl.ARRAY_BUFFER, fb.outBuffer);\n        this._cgl.gl.bufferData(this._cgl.gl.ARRAY_BUFFER, fb.initialArr, this._cgl.gl.STATIC_DRAW);\n\n        this._cgl.gl.bindBuffer(this._cgl.gl.ARRAY_BUFFER, fb.attrib.buffer);\n        this._cgl.gl.bufferData(this._cgl.gl.ARRAY_BUFFER, fb.initialArr, this._cgl.gl.STATIC_DRAW);\n\n        if (!found) this._feedBacks.push(fb);\n\n        // console.log('initialArr',initialArr.length/3);\n        // console.log('vertices',fb.attrib.numItems);\n        // console.log('vertices',this._bufVertexAttrib.numItems);\n\n        return fb;\n    };\n\n    Mesh.prototype.bindFeedback = function (attrib)\n    {\n        if (!this._feedBacks || this._feedBacks.length === 0) return;\n        if (this._transformFeedBackLoc == -1) this._transformFeedBackLoc = this._cgl.gl.createTransformFeedback();\n\n        this._cgl.gl.bindTransformFeedback(this._cgl.gl.TRANSFORM_FEEDBACK, this._transformFeedBackLoc);\n\n        var found = false;\n\n        for (var i = 0; i < this._feedBacks.length; i++)\n        {\n            var fb = this._feedBacks[i];\n\n            if (fb.attrib == attrib)\n            {\n                found = true;\n                // this._cgl.gl.bindBuffer(this._cgl.gl.ARRAY_BUFFER, fb.attrib.buffer);\n                //\n                // this._cgl.gl.vertexAttribPointer(\n                //     fb.attrib.loc,\n                //     fb.attrib.itemSize,\n                //     fb.attrib.type,\n                //     false,\n                //     fb.attrib.itemSize*4, 0);\n\n                this._cgl.gl.bindBufferBase(this._cgl.gl.TRANSFORM_FEEDBACK_BUFFER, i, fb.outBuffer);\n            }\n        }\n\n        if (!found)\n        {\n            // console.log(\"ARTTRIB NOT FOUND\",attrib.name);\n        }\n    };\n\n    Mesh.prototype.drawFeedbacks = function (shader, prim)\n    {\n        var i = 0;\n\n        if (this._feedBacksChanged)\n        {\n            var names = [];\n            this._cgl.gl.bindTransformFeedback(this._cgl.gl.TRANSFORM_FEEDBACK, this._transformFeedBackLoc);\n\n            for (i = 0; i < this._feedBacks.length; i++) names.push(this._feedBacks[i].nameOut);\n            shader.setFeedbackNames(names);\n\n            console.log(\"feedbacknames\", names);\n\n            shader.compile();\n            this._feedBacksChanged = false;\n            this._cgl.gl.bindTransformFeedback(this._cgl.gl.TRANSFORM_FEEDBACK, null);\n            console.log(\"changed finished\");\n            return;\n        }\n\n        //\n        // for( i=0;i<this._feedBacks.length;i++)\n        // {\n        //     var fb=this._feedBacks[i];\n        //\n        //     this._cgl.gl.bindBufferBase(this._cgl.gl.TRANSFORM_FEEDBACK_BUFFER, i, fb.outBuffer);\n        // }\n\n        // draw\n        this._cgl.gl.beginTransformFeedback(this.glPrimitive);\n        this._cgl.gl.drawArrays(prim, 0, this._feedBacks[0].attrib.numItems);\n\n        // unbind\n        this._cgl.gl.endTransformFeedback();\n\n        this.unBindFeedbacks();\n\n        this.feedBacksSwapBuffers();\n    };\n\n    Mesh.prototype.unBindFeedbacks = function ()\n    {\n        for (i = 0; i < this._feedBacks.length; i++)\n        {\n            // this._cgl.gl.disableVertexAttribArray(this._feedBacks[i].attrib.loc);\n            this._cgl.gl.bindBufferBase(this._cgl.gl.TRANSFORM_FEEDBACK_BUFFER, i, null);\n        }\n\n        this._cgl.gl.bindTransformFeedback(this._cgl.gl.TRANSFORM_FEEDBACK, null);\n    };\n\n    Mesh.prototype.feedBacksSwapBuffers = function ()\n    {\n        for (var i = 0; i < this._feedBacks.length; i++)\n        {\n            var t = this._feedBacks[i].attrib.buffer;\n            this._feedBacks[i].attrib.buffer = this._feedBacks[i].outBuffer;\n            this._feedBacks[i].outBuffer = t;\n        }\n    };\n}\n"
            },
            {
              "id": null,
              "identifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_simplerect.js",
              "name": "./src/core/cgl/cgl_simplerect.js",
              "index": 27,
              "index2": 17,
              "size": 432,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
              ],
              "issuer": "/home/tom/cables_dev/cables/src/core/cgl/index.js",
              "issuerId": null,
              "issuerName": "./src/core/cgl/index.js",
              "issuerPath": [
                {
                  "id": 0,
                  "identifier": "multi /home/tom/cables_dev/cables/src/core/index.js",
                  "name": "multi ./src/core/index.js"
                },
                {
                  "id": null,
                  "identifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "name": "./src/core/index.js"
                },
                {
                  "id": null,
                  "identifier": "/home/tom/cables_dev/cables/src/core/loadingstatus.js",
                  "name": "./src/core/loadingstatus.js"
                },
                {
                  "id": null,
                  "identifier": "/home/tom/cables_dev/cables/src/core/cgl/index.js",
                  "name": "./src/core/cgl/index.js"
                }
              ],
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "assets": [
              ],
              "reasons": [
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_textureeffect.js",
                  "module": "./src/core/cgl/cgl_textureeffect.js",
                  "moduleName": "./src/core/cgl/cgl_textureeffect.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./cgl_simplerect",
                  "loc": "2:0-42"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/index.js",
                  "module": "./src/core/cgl/index.js",
                  "moduleName": "./src/core/cgl/index.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./cgl_simplerect",
                  "loc": "11:0-42"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/index.js",
                  "module": "./src/core/cgl/index.js",
                  "moduleName": "./src/core/cgl/index.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_simplerect",
                  "loc": "39:8-14"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_textureeffect.js",
                  "module": "./src/core/cgl/cgl_textureeffect.js",
                  "moduleName": "./src/core/cgl/cgl_textureeffect.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_simplerect",
                  "loc": "208:34-40"
                }
              ],
              "usedExports": [
                "MESHES"
              ],
              "providedExports": [
                "MESHES"
              ],
              "optimizationBailout": [
              ],
              "depth": 4,
              "source": "import { Mesh } from \"./cgl_mesh\";\nimport { Geometry } from \"./cgl_geom\";\n\n\nconst MESHES = {};\n\nMESHES.getSimpleRect = function (cgl, name)\n{\n    var geom = new Geometry(name);\n\n    geom.vertices = [1.0, 1.0, 0.0, -1.0, 1.0, 0.0, 1.0, -1.0, 0.0, -1.0, -1.0, 0.0];\n\n    geom.texCoords = [1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0];\n\n    geom.verticesIndices = [0, 1, 2, 2, 1, 3];\n\n    return new Mesh(cgl, geom);\n};\n\nexport { MESHES };\n"
            },
            {
              "id": null,
              "identifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_textureeffect.js",
              "name": "./src/core/cgl/cgl_textureeffect.js",
              "index": 26,
              "index2": 18,
              "size": 17393,
              "cacheable": true,
              "built": true,
              "optional": false,
              "prefetched": false,
              "chunks": [
              ],
              "issuer": "/home/tom/cables_dev/cables/src/core/cgl/index.js",
              "issuerId": null,
              "issuerName": "./src/core/cgl/index.js",
              "issuerPath": [
                {
                  "id": 0,
                  "identifier": "multi /home/tom/cables_dev/cables/src/core/index.js",
                  "name": "multi ./src/core/index.js"
                },
                {
                  "id": null,
                  "identifier": "/home/tom/cables_dev/cables/src/core/index.js",
                  "name": "./src/core/index.js"
                },
                {
                  "id": null,
                  "identifier": "/home/tom/cables_dev/cables/src/core/loadingstatus.js",
                  "name": "./src/core/loadingstatus.js"
                },
                {
                  "id": null,
                  "identifier": "/home/tom/cables_dev/cables/src/core/cgl/index.js",
                  "name": "./src/core/cgl/index.js"
                }
              ],
              "failed": false,
              "errors": 0,
              "warnings": 0,
              "assets": [
              ],
              "reasons": [
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_shader_lib.js",
                  "module": "./src/core/cgl/cgl_shader_lib.js",
                  "moduleName": "./src/core/cgl/cgl_shader_lib.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./cgl_textureeffect",
                  "loc": "3:0-52"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/cgl_shader_lib.js",
                  "module": "./src/core/cgl/cgl_shader_lib.js",
                  "moduleName": "./src/core/cgl/cgl_shader_lib.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_textureeffect",
                  "loc": "9:27-40"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/index.js",
                  "module": "./src/core/cgl/index.js",
                  "moduleName": "./src/core/cgl/index.js",
                  "type": "harmony side effect evaluation",
                  "userRequest": "./cgl_textureeffect",
                  "loc": "20:0-52"
                },
                {
                  "moduleId": null,
                  "moduleIdentifier": "/home/tom/cables_dev/cables/src/core/cgl/index.js",
                  "module": "./src/core/cgl/index.js",
                  "moduleName": "./src/core/cgl/index.js",
                  "type": "harmony import specifier",
                  "userRequest": "./cgl_textureeffect",
                  "loc": "42:8-21"
                }
              ],
              "usedExports": [
                "TextureEffect"
              ],
              "providedExports": [
                "TextureEffect"
              ],
              "optimizationBailout": [
              ],
              "depth": 4,
              "source": "import { Texture } from \"./cgl_texture\";\nimport { MESHES } from \"./cgl_simplerect\";\nimport { profileData } from \"./cgl_profiledata\";\n\nconst TextureEffect = function (cgl, options)\n{\n    this._cgl = cgl;\n\n    if (!cgl.TextureEffectMesh) this.createMesh();\n\n    this._textureSource = null;\n\n    // TODO: do we still need the options ?\n    // var opts=options ||\n    //     {\n    //         isFloatingPointTexture:false,\n    //         filter:CGL.Texture.FILTER_LINEAR\n    //     };\n    // if(options && options.fp)opts.isFloatingPointTexture=true;\n\n    this._textureTarget = null; // new CGL.Texture(this._cgl,opts);\n    this._frameBuf = this._cgl.gl.createFramebuffer();\n    this._frameBuf2 = this._cgl.gl.createFramebuffer();\n    this._renderbuffer = this._cgl.gl.createRenderbuffer();\n    this._renderbuffer2 = this._cgl.gl.createRenderbuffer();\n    this.switched = false;\n    this.depth = false;\n};\n\nTextureEffect.prototype.setSourceTexture = function (tex)\n{\n    if (tex.textureType == Texture.TYPE_FLOAT) this._cgl.gl.getExtension(\"EXT_color_buffer_float\");\n\n    if (tex === null)\n    {\n        this._textureSource = new Texture(this._cgl);\n        this._textureSource.setSize(16, 16);\n    }\n    else\n    {\n        this._textureSource = tex;\n    }\n\n    if (!this._textureSource.compareSettings(this._textureTarget))\n    {\n        // console.log('change effect target texture ');\n        // if(this._textureTarget) console.log('change effect target texture from to ',this._textureTarget.width,this._textureSource.width);\n        // this._textureTarget.textureType=this._textureSource.textureType;\n        if (this._textureTarget) this._textureTarget.delete();\n\n        this._textureTarget = this._textureSource.clone();\n\n        profileData.profileEffectBuffercreate++;\n        this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER, this._frameBuf);\n\n        this._cgl.gl.bindRenderbuffer(this._cgl.gl.RENDERBUFFER, this._renderbuffer);\n\n        // if(tex.textureType==CGL.Texture.TYPE_FLOAT) this._cgl.gl.renderbufferStorage(this._cgl.gl.RENDERBUFFER,this._cgl.gl.RGBA32F, this._textureSource.width,this._textureSource.height);\n        // else this._cgl.gl.renderbufferStorage(this._cgl.gl.RENDERBUFFER,this._cgl.gl.RGBA8, this._textureSource.width,this._textureSource.height);\n\n        if (this.depth) this._cgl.gl.renderbufferStorage(this._cgl.gl.RENDERBUFFER, this._cgl.gl.DEPTH_COMPONENT16, this._textureSource.width, this._textureSource.height);\n        this._cgl.gl.framebufferTexture2D(this._cgl.gl.FRAMEBUFFER, this._cgl.gl.COLOR_ATTACHMENT0, this._cgl.gl.TEXTURE_2D, this._textureTarget.tex, 0);\n        if (this.depth) this._cgl.gl.framebufferRenderbuffer(this._cgl.gl.FRAMEBUFFER, this._cgl.gl.DEPTH_ATTACHMENT, this._cgl.gl.RENDERBUFFER, this._renderbuffer);\n\n        // this._cgl.gl.framebufferTexture2D(this._cgl.gl.FRAMEBUFFER, this._cgl.gl.COLOR_ATTACHMENT0, this._cgl.gl.TEXTURE_2D, this._textureTarget.tex, 0);\n\n        this._cgl.gl.bindTexture(this._cgl.gl.TEXTURE_2D, null);\n        this._cgl.gl.bindRenderbuffer(this._cgl.gl.RENDERBUFFER, null);\n        this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER, null);\n\n        this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER, this._frameBuf2);\n\n        this._cgl.gl.bindRenderbuffer(this._cgl.gl.RENDERBUFFER, this._renderbuffer2);\n\n        // if(tex.textureType==CGL.Texture.TYPE_FLOAT) this._cgl.gl.renderbufferStorage(this._cgl.gl.RENDERBUFFER,this._cgl.gl.RGBA32F, this._textureSource.width,this._textureSource.height);\n        // else this._cgl.gl.renderbufferStorage(this._cgl.gl.RENDERBUFFER,this._cgl.gl.RGBA8, this._textureSource.width,this._textureSource.height);\n\n        if (this.depth) this._cgl.gl.renderbufferStorage(this._cgl.gl.RENDERBUFFER, this._cgl.gl.DEPTH_COMPONENT16, this._textureSource.width, this._textureSource.height);\n        this._cgl.gl.framebufferTexture2D(this._cgl.gl.FRAMEBUFFER, this._cgl.gl.COLOR_ATTACHMENT0, this._cgl.gl.TEXTURE_2D, this._textureSource.tex, 0);\n\n        if (this.depth) this._cgl.gl.framebufferRenderbuffer(this._cgl.gl.FRAMEBUFFER, this._cgl.gl.DEPTH_ATTACHMENT, this._cgl.gl.RENDERBUFFER, this._renderbuffer2);\n\n        // this._cgl.gl.framebufferTexture2D(this._cgl.gl.FRAMEBUFFER, this._cgl.gl.COLOR_ATTACHMENT0, this._cgl.gl.TEXTURE_2D, this._textureSource.tex, 0);\n\n        this._cgl.gl.bindTexture(this._cgl.gl.TEXTURE_2D, null);\n        this._cgl.gl.bindRenderbuffer(this._cgl.gl.RENDERBUFFER, null);\n        this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER, null);\n    }\n};\n\nTextureEffect.prototype.startEffect = function ()\n{\n    if (!this._textureTarget)\n    {\n        console.log(\"effect has no target\");\n        return;\n    }\n\n    this.switched = false;\n    // this._cgl.gl.disable(this._cgl.gl.DEPTH_TEST);\n    this._cgl.pushDepthTest(false);\n\n    this._cgl.pushModelMatrix();\n\n    this._cgl.pushPMatrix();\n    this._cgl.gl.viewport(0, 0, this.getCurrentTargetTexture().width, this.getCurrentTargetTexture().height);\n    mat4.perspective(this._cgl.pMatrix, 45, this.getCurrentTargetTexture().width / this.getCurrentTargetTexture().height, 0.1, 1100.0);\n\n    this._cgl.pushPMatrix();\n    mat4.identity(this._cgl.pMatrix);\n\n    this._cgl.pushViewMatrix();\n    mat4.identity(this._cgl.vMatrix);\n\n    this._cgl.pushModelMatrix();\n    mat4.identity(this._cgl.mvMatrix);\n};\n\nTextureEffect.prototype.endEffect = function ()\n{\n    this._cgl.popDepthTest(false);\n    // this._cgl.gl.enable(this._cgl.gl.DEPTH_TEST);\n    this._cgl.popModelMatrix();\n\n    this._cgl.popPMatrix();\n    this._cgl.popModelMatrix();\n    this._cgl.popViewMatrix();\n\n    this._cgl.popPMatrix();\n    this._cgl.resetViewPort();\n};\n\nTextureEffect.prototype.bind = function ()\n{\n    if (this._textureSource === null)\n    {\n        console.log(\"no base texture set!\");\n        return;\n    }\n\n    if (!this.switched)\n    {\n        this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER, this._frameBuf);\n        this._cgl.pushGlFrameBuffer(this._frameBuf);\n    }\n    else\n    {\n        this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER, this._frameBuf2);\n        this._cgl.pushGlFrameBuffer(this._frameBuf2);\n    }\n};\n\nTextureEffect.prototype.finish = function ()\n{\n    if (this._textureSource === null)\n    {\n        console.log(\"no base texture set!\");\n        return;\n    }\n\n    this._cgl.TextureEffectMesh.render(this._cgl.getShader());\n\n    this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER, this._cgl.popGlFrameBuffer());\n\n    // this._textureTarget.updateMipMap();\n\n    if (this._textureTarget.filter == Texture.FILTER_MIPMAP)\n    {\n        if (!this.switched)\n        {\n            this._cgl.gl.bindTexture(this._cgl.gl.TEXTURE_2D, this._textureTarget.tex);\n            this._textureTarget.updateMipMap();\n        }\n        else\n        {\n            this._cgl.gl.bindTexture(this._cgl.gl.TEXTURE_2D, this._textureSource.tex);\n            this._textureSource.updateMipMap();\n        }\n\n        this._cgl.gl.bindTexture(this._cgl.gl.TEXTURE_2D, null);\n    }\n\n    this.switched = !this.switched;\n};\n\nTextureEffect.prototype.getCurrentTargetTexture = function ()\n{\n    if (this.switched) return this._textureSource;\n    return this._textureTarget;\n};\n\nTextureEffect.prototype.getCurrentSourceTexture = function ()\n{\n    if (this.switched) return this._textureTarget;\n    return this._textureSource;\n};\n\nTextureEffect.prototype.delete = function ()\n{\n    if (this._textureTarget) this._textureTarget.delete();\n    if (this._textureSource) this._textureSource.delete();\n    this._cgl.gl.deleteRenderbuffer(this._renderbuffer);\n    this._cgl.gl.deleteFramebuffer(this._frameBuf);\n};\n\nTextureEffect.prototype.createMesh = function ()\n{\n    this._cgl.TextureEffectMesh = MESHES.getSimpleRect(this._cgl, \"textureEffect rect\");\n};\n\n// ---------------------------------------------------------------------------------\n\nTextureEffect.checkOpNotInTextureEffect = function (op)\n{\n    if (op.uiAttribs.error && !op.patch.cgl.currentTextureEffect)\n    {\n        op.uiAttr({ error: null });\n        return true;\n    }\n\n    if (!op.patch.cgl.currentTextureEffect) return true;\n\n    if (op.patch.cgl.currentTextureEffect && !op.uiAttribs.error)\n    {\n        op.uiAttr({ error: \"This op can not be a child of a ImageCompose/texture effect! imagecompose should only have textureeffect childs.\" });\n        return false;\n    }\n\n    if (op.patch.cgl.currentTextureEffect) return false;\n    return true;\n};\n\nTextureEffect.checkOpInEffect = function (op)\n{\n    if (op.patch.cgl.currentTextureEffect && op.uiAttribs.error)\n    {\n        op.uiAttr({ error: null });\n        return true;\n    }\n\n    if (op.patch.cgl.currentTextureEffect) return true;\n\n    if (!op.patch.cgl.currentTextureEffect && !op.uiAttribs.error)\n    {\n        op.uiAttr({ error: \"This op must be a child of a texture effect! More infos <a href=\\\"https://docs.cables.gl/image_composition/image_composition.html\\\" target=\\\"_blank\\\">here</a>.\" });\n        return false;\n    }\n\n    if (!op.patch.cgl.currentTextureEffect) return false;\n    return true;\n};\n\nTextureEffect.getBlendCode = function ()\n{\n    return (\n        \"\".endl()\n        + \"vec3 _blend(vec3 base,vec3 blend)\".endl()\n        + \"{\".endl()\n        + \"   vec3 colNew=blend;\".endl()\n        + \"   #ifdef BM_MULTIPLY\".endl()\n        + \"       colNew=base*blend;\".endl()\n        + \"   #endif\".endl()\n        + \"   #ifdef BM_MULTIPLY_INV\".endl()\n        + \"       colNew=base* vec3(1.0)-blend;\".endl()\n        + \"   #endif\".endl()\n        + \"   #ifdef BM_AVERAGE\".endl()\n        + \"       colNew=((base + blend) / 2.0);\".endl()\n        + \"   #endif\".endl()\n        + \"   #ifdef BM_ADD\".endl()\n        + \"       colNew=min(base + blend, vec3(1.0));\".endl()\n        + \"   #endif\".endl()\n        + \"   #ifdef BM_SUBSTRACT\".endl()\n        + \"       colNew=max(base + blend - vec3(1.0), vec3(0.0));\".endl()\n        + \"   #endif\".endl()\n        + \"   #ifdef BM_DIFFERENCE\".endl()\n        + \"       colNew=abs(base - blend);\".endl()\n        + \"   #endif\".endl()\n        + \"   #ifdef BM_NEGATION\".endl()\n        + \"       colNew=(vec3(1.0) - abs(vec3(1.0) - base - blend));\".endl()\n        + \"   #endif\".endl()\n        + \"   #ifdef BM_EXCLUSION\".endl()\n        + \"       colNew=(base + blend - 2.0 * base * blend);\".endl()\n        + \"   #endif\".endl()\n        + \"   #ifdef BM_LIGHTEN\".endl()\n        + \"       colNew=max(blend, base);\".endl()\n        + \"   #endif\".endl()\n        + \"   #ifdef BM_DARKEN\".endl()\n        + \"       colNew=min(blend, base);\".endl()\n        + \"   #endif\".endl()\n        + \"   #ifdef BM_OVERLAY\".endl()\n        + \"      #define BlendOverlayf(base, blend)  (base < 0.5 ? (2.0 * base * blend) : (1.0 - 2.0 * (1.0 - base) * (1.0 - blend)))\"\n            // .endl()+'       #define BlendOverlay(base, blend)       Blend(base, blend, BlendOverlayf)'\n            //    .endl()+'      colNew=Blend(base, blend, BlendOverlayf);'\n            .endl()\n        + \"      colNew=vec3(BlendOverlayf(base.r, blend.r),BlendOverlayf(base.g, blend.g),BlendOverlayf(base.b, blend.b));\".endl()\n        + \"   #endif\".endl()\n        + \"   #ifdef BM_SCREEN\".endl()\n        + \"      #define BlendScreenf(base, blend)       (1.0 - ((1.0 - base) * (1.0 - blend)))\"\n            // .endl()+'       #define BlendScreen(base, blend)        Blend(base, blend, BlendScreenf)'\n            // .endl()+'      colNew=Blend(base, blend, BlendScreenf);'\n            .endl()\n        + \"      colNew=vec3(BlendScreenf(base.r, blend.r),BlendScreenf(base.g, blend.g),BlendScreenf(base.b, blend.b));\".endl()\n        + \"   #endif\".endl()\n        + \"   #ifdef BM_SOFTLIGHT\".endl()\n        + \"      #define BlendSoftLightf(base, blend)    ((blend < 0.5) ? (2.0 * base * blend + base * base * (1.0 - 2.0 * blend)) : (sqrt(base) * (2.0 * blend - 1.0) + 2.0 * base * (1.0 - blend)))\"\n            // .endl()+'       #define BlendSoftLight(base, blend)     Blend(base, blend, BlendSoftLightf)'\n            //    .endl()+'      colNew=Blend(base, blend, BlendSoftLightf);'\n            .endl()\n        + \"      colNew=vec3(BlendSoftLightf(base.r, blend.r),BlendSoftLightf(base.g, blend.g),BlendSoftLightf(base.b, blend.b));\".endl()\n        + \"   #endif\".endl()\n        + \"   #ifdef BM_HARDLIGHT\".endl()\n        + \"      #define BlendOverlayf(base, blend)  (base < 0.5 ? (2.0 * base * blend) : (1.0 - 2.0 * (1.0 - base) * (1.0 - blend)))\"\n            // .endl()+'       #define BlendOverlay(base, blend)       Blend(base, blend, BlendOverlayf)'\n            // .endl()+'      colNew=Blend(blend, base, BlendOverlayf);'\n            .endl()\n        + \"      colNew=vec3(BlendOverlayf(base.r, blend.r),BlendOverlayf(base.g, blend.g),BlendOverlayf(base.b, blend.b));\".endl()\n        + \"   #endif\".endl()\n        + \"   #ifdef BM_COLORDODGE\".endl()\n        + \"      #define BlendColorDodgef(base, blend)   ((blend == 1.0) ? blend : min(base / (1.0 - blend), 1.0))\"\n            // .endl()+'      colNew=Blend(base, blend, BlendColorDodgef);'\n            .endl()\n        + \"      colNew=vec3(BlendColorDodgef(base.r, blend.r),BlendColorDodgef(base.g, blend.g),BlendColorDodgef(base.b, blend.b));\".endl()\n        + \"   #endif\".endl()\n        + \"   #ifdef BM_COLORBURN\".endl()\n        + \"      #define BlendColorBurnf(base, blend)    ((blend == 0.0) ? blend : max((1.0 - ((1.0 - base) / blend)), 0.0))\"\n            // .endl()+'      colNew=Blend(base, blend, BlendColorBurnf);'\n            .endl()\n        + \"      colNew=vec3(BlendColorBurnf(base.r, blend.r),BlendColorBurnf(base.g, blend.g),BlendColorBurnf(base.b, blend.b));\".endl()\n        + \"   #endif\".endl()\n        + \"   return colNew;\".endl()\n        + \"}\".endl()\n        + \"vec4 cgl_blend(vec4 oldColor,vec4 newColor,float amount)\".endl()\n        + \"{\".endl()\n        + \"   vec4 col=vec4( _blend(oldColor.rgb,newColor.rgb) ,1.0);\".endl()\n        + \"   col=vec4( mix( col.rgb, oldColor.rgb ,1.0-oldColor.a*amount),1.0);\".endl()\n        + \"   return col;\".endl()\n        + \"}\"\n    );\n};\n\nTextureEffect.onChangeBlendSelect = function (shader, blendName)\n{\n    if (blendName == \"normal\") shader.define(\"BM_NORMAL\");\n    else shader.removeDefine(\"BM_NORMAL\");\n\n    if (blendName == \"multiply\") shader.define(\"BM_MULTIPLY\");\n    else shader.removeDefine(\"BM_MULTIPLY\");\n\n    if (blendName == \"multiply invert\") shader.define(\"BM_MULTIPLY_INV\");\n    else shader.removeDefine(\"BM_MULTIPLY_INV\");\n\n    if (blendName == \"average\") shader.define(\"BM_AVERAGE\");\n    else shader.removeDefine(\"BM_AVERAGE\");\n\n    if (blendName == \"add\") shader.define(\"BM_ADD\");\n    else shader.removeDefine(\"BM_ADD\");\n\n    if (blendName == \"substract\") shader.define(\"BM_SUBSTRACT\");\n    else shader.removeDefine(\"BM_SUBSTRACT\");\n\n    if (blendName == \"difference\") shader.define(\"BM_DIFFERENCE\");\n    else shader.removeDefine(\"BM_DIFFERENCE\");\n\n    if (blendName == \"negation\") shader.define(\"BM_NEGATION\");\n    else shader.removeDefine(\"BM_NEGATION\");\n\n    if (blendName == \"exclusion\") shader.define(\"BM_EXCLUSION\");\n    else shader.removeDefine(\"BM_EXCLUSION\");\n\n    if (blendName == \"lighten\") shader.define(\"BM_LIGHTEN\");\n    else shader.removeDefine(\"BM_LIGHTEN\");\n\n    if (blendName == \"darken\") shader.define(\"BM_DARKEN\");\n    else shader.removeDefine(\"BM_DARKEN\");\n\n    if (blendName == \"overlay\") shader.define(\"BM_OVERLAY\");\n    else shader.removeDefine(\"BM_OVERLAY\");\n\n    if (blendName == \"screen\") shader.define(\"BM_SCREEN\");\n    else shader.removeDefine(\"BM_SCREEN\");\n\n    if (blendName == \"softlight\") shader.define(\"BM_SOFTLIGHT\");\n    else shader.removeDefine(\"BM_SOFTLIGHT\");\n\n    if (blendName == \"hardlight\") shader.define(\"BM_HARDLIGHT\");\n    else shader.removeDefine(\"BM_HARDLIGHT\");\n\n    if (blendName == \"color dodge\") shader.define(\"BM_COLORDODGE\");\n    else shader.removeDefine(\"BM_COLORDODGE\");\n\n    if (blendName == \"color burn\") shader.define(\"BM_COLORBURN\");\n    else shader.removeDefine(\"BM_COLORBURN\");\n};\n\nTextureEffect.AddBlendSelect = function (op, name)\n{\n    var p = op.inValueSelect(name, [\"normal\", \"lighten\", \"darken\", \"multiply\", \"multiply invert\", \"average\", \"add\", \"substract\", \"difference\", \"negation\", \"exclusion\", \"overlay\", \"screen\", \"color dodge\", \"color burn\", \"softlight\", \"hardlight\"], \"normal\");\n\n    return p;\n};\n\nTextureEffect.setupBlending = function (op, shader, blendMode, amount)\n{\n    op.setPortGroup(\"Blending\", [blendMode, amount]);\n\n    blendMode.onChange = function ()\n    {\n        TextureEffect.onChangeBlendSelect(shader, blendMode.get());\n\n        var str = blendMode.get();\n        if (str == \"normal\") str = null;\n        else if (str == \"multiply\") str = \"mul\";\n        else if (str == \"multiply invert\") str = \"mulinv\";\n        else if (str == \"lighten\") str = \"light\";\n        else if (str == \"darken\") str = \"darken\";\n        else if (str == \"average\") str = \"avg\";\n        else if (str == \"substract\") str = \"sub\";\n        else if (str == \"difference\") str = \"diff\";\n        else if (str == \"negation\") str = \"neg\";\n        else if (str == \"negation\") str = \"neg\";\n        else if (str == \"negation\") str = \"neg\";\n        else if (str == \"exclusion\") str = \"exc\";\n        else if (str == \"overlay\") str = \"ovl\";\n        else if (str == \"color dodge\") str = \"dodge\";\n        else if (str == \"color burn\") str = \"burn\";\n        else if (str == \"softlight\") str = \"soft\";\n        else if (str == \"hardlight\") str = \"hard\";\n\n        op.setUiAttrib({ extendTitle: str });\n    };\n};\n\nexport { TextureEffect };\n"
            