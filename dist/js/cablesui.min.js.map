{"version":3,"sources":["helper.js","patch_op.js","ping.js","tools.js","api.js","error.js","modal.js","opselect.js","patch.js","patch_port.js","select_file.js","select_project.js","splitpane.js","timeline.js","tooltips.js","ui.js","uiconfig.js","upload.js"],"names":["mouseEvent","event","offsetX","layerX","offsetY","layerY","valueChanger","ele","keydown","e","down","isDown","document","addEventListener","lockChange","el","requestPointerLock","mozRequestPointerLock","webkitRequestPointerLock","up","removeEventListener","exitPointerLock","$","unbind","move","v","parseFloat","val","inc","movementY","shiftKey","which","trigger","pointerLockElement","mozPointerLockElement","webkitPointerLockElement","startVal","getElementById","bind","getPortOpacity","port","direction","PORT_DIR_IN","isAnimated","isLinked","getPortDescription","thePort","str","getName","getTypeString","Line","startX","startY","start","x","y","this","updateEnd","end","redraw","getPath","endX","endY","thisLine","gui","patch","getPaper","path","attr","stroke","CABLES","UI","uiConfig","colorLink","stroke-width","UiLink","port1","port2","self","middlePosX","middlePosY","addCircle","linkLine","p1","p2","hideAddButton","remove","stroke-opacity","showAddButton","isVisible","circle","portSize","getPortColor","fill","colorBackground","hover","txt","showToolTip","setStatusText","hideToolTip","toFront","node","onmousedown","hide","focus","removeLinkTo","OPSELECT","showOpSelect","getCanvasCoordsMouse","cx","cy","rect","attrs","fromX","matrix","fromY","f","toX","toY","cp1X","cp1Y","cp2X","cp2Y","Math","min","max","portHeight","abs","show","linkingLine","setEnabled","enabled","guid","s4","floor","random","toString","substring","isNumber","o","isNaN","API","request","method","url","data","cbSuccess","cbError","ajax","done","fail","MODAL","statusText","showError","responseJSON","always","get","cb","cbErr","post","put","api","window","onerror","err","file","row","html","showPreview","opid","onoff","op","scene","getOpById","console","log","getPort","doShowPreview","CGL","Texture","previewTexture","togglePortValBool","checkbox","bool_value","addClass","removeClass","inputIncrement","dir","add","r","round","Handlebars","registerHelper","context","JSON","stringify","left_value","operator","right_value","options","operators","result","arguments","length","Error","==","l","===","!=","<",">","<=",">=","typeof","fn","inverse","mouseNewOPX","mouseNewOPY","content","append","on","showLoading","title","linkNewLink","linkNewOpToPort","linkNewOpToOp","newOpPos","pos","linkOp","linkPort","link","onInput","displayBoxIndex","Navigate","getHandleBarHtml","ops","getOpList","searchFor","toLowerCase","diff","oBoxCollection","oBoxCollectionAll","cssClass","eq","opname","addOp","preventDefault","setTimeout","getop","parentname","Object","prototype","call","propertyName","hasOwnProperty","isOp","isFunction","eval","name","lowercasename","push","found","Ops","sort","a","b","Patch","_gui","rubberBandHide","mouseRubberBandStartPos","mouseRubberBandPos","rubberBandRect","setStatusSelectedOps","selectedOps","rubberBandMove","buttons","spacePressed","setSelectedOp","paper","tempx","tempy","width","height","colorRubberBand","fill-opacity","i","isHidden","oprect","getRect","opX","opY","opW","opH","addSelectedOp","setSelected","removeSelectedOp","doAddOp","uiOp","isLoading","objName","undo","deleteOp","redo","uiAttribs","id","onAddPort","p","addPort","setPos","translate","subPatch","currentSubPatch","portsIn","display","type","i2","portsOut","PORT_DIR_OUT","viewBox","w","h","setOpTitle","op1","op2","il","links","portIn","portOut","foundPort1","findFittingPort","foundPort2","foundPort","getSubPatch","showOpParams","pasted","addSelectedOpById","wasAdded","updateUiAttribs","currentOp","warning","info","doWatchPorts","watchPorts","watchId","watchValuesInterval","currentProject","lastMouseMoveEvent","paste","clipboardData","types","indexOf","getData","json","parse","j","searchID","newID","generateUUID","k","splice","objIn","objOut","fixedSubPatches","oldSubPatchId","parseInt","value","newSubPatchId","Ui","maxPatchId","minx","Number","MAX_VALUE","miny","mouseX","mouseY","deSerialize","cut","copy","deleteSelectedOps","opIds","getSerialized","arrayContains","obj","objStr","setData","keyup","is","stopPropagation","showProjectParams","metaKey","ctrlKey","selectAllOps","alignSelectedOpsHor","alignSelectedOpsVert","showSelectedOpsGraphs","setCurrentSubPatch","exportStatic","_id","msg","error","size","saveCurrentProject","_name","cgl","doScreenshot","serialize","ui","renderer","rendererWidth","rendererHeight","screenshot","screenShotDataURL","success","getCurrentProject","setCurrentProject","proj","timeLine","clear","updateProjectFiles","files","updateViewBox","setViewBox","selectAllOpsSubPatch","setProject","setLayout","updateSubPatches","_scene","Raphael","bindScene","delta","nbr","getWheelSpeed","background","toBack","ev","isDragging","isMouseOver","TL","TimeLineUI","onLoadStart","onLoadEnd","onUnLink","removeDeadLinks","p1Name","p2Name","op1Id","op2Id","getPortByName","warn","parent","onLink","uiPort1","uiPort2","jo","thelink","opUi","onDelete","hideAddButtons","onAdd","OpUi","uiop","t","setTitle","setCurrentOpTitle","getCurrentSubPatch","doShow","count","anim","stayInTimeline","setAnim","sum","avg","setSelectedOpById","patchId","moveSelectedOpsFinished","doMoveFinished","moveSelectedOps","dx","dy","doMove","updateOpParams","s","settings","numVisibleOps","project","debug","numOps","numSvgElements","saveProjectParams","proj_name","proj_public","isPublic","onUiAttrChange","foundAnim","iops","watchAnimPorts","watchColorPicker","sourcePort","templatePort","compile","colorPick","dirStr","portnum","isInput","getType","OP_PORT_TYPE_VALUE","ipo","index","removeLinks","ipi","toggleClass","defaultValue","hasClass","removeAnim","setAnimated","toggleAnim","ipip","ipii","scaleHeightDelayed","iwap","iwcp","c1","next","find","c2","c3","css","colorPicker","opacity","margin","doRender","renderCallback","res","colors","color","rgb","g","modes","hsv","HEX","each","className","substr","buildCallback","$elm","colorInstance","prepend","split","setColor","test","render","blur","evt","ctm","getScreenCTM","uupos","createSVGPoint","clientX","clientY","matrixTransform","addAssetOp","suffix","uiAttr","setGroup","group","getGroup","OpRect","_opui","_x","_y","_w","_h","_text","opui","unhover","isSelected","set","label","removeUi","getWidth","setWidth","dragger","showAddButtons","addUi","colorOpBg","colorPatchStroke","cursor","text","pointer-events","drag","ondblclick","onmouseup","sel","colorOpBgSelected","transform","hidden","selected","oldUiAttribs","startMoveX","startMoveY","posx","posy","u","snapRange","snap","en","_inout","inout","portIndex","portPadding","Port","changeActiveState","getUiActiveState","dragStart","startx","starty","dragMove","selectedEndPort","Link","canLinkText","canLink","colorLinkInvalid","dragEnd","xpos","ypos","hoverOut","offY","undrag","onUiActiveStateChange","yp","cancelBubble","pingDelay","windowUUID","delay","hasFailed","ping","FileSelect","currentTab","assetPath","apiPath","inputId","filterType","setTab","load","opts","endsWith","previewImageUrl","_inputId","_filterType","toggle","getFileList","selectableClass","d","n","c","fileSelect","SELECTPROJECT","projectsHtml","doReload","showSelectProjects","projid","location","href","projects","mainmin","ready","mousedown","mousemove","innerWidth","timingHeight","innerHeight","mouseup","Key","isUI","circleBezierOut","circleBezierIn","showCircle","MultiGraphKeyDisplayMode","MoveMode","TIMESCALE","VALUESCALE","setAttribs","opa","isMainAnim","colorKey","bezierControlLineOut","bezierControlLineIn","updateCircle","_isMainAnim","undefined","initUI","getEasing","EASING_BEZIER","time","posBezX","bezTime","posBezY","bezValue","posBezXIn","bezTimeIn","posBezYIn","bezValueIn","pathOut","pathIn","unselectKeys","moveSelectedKeys","oldValues","moveSelectedKeysFinished","refresh","moveBezierOut","newPos","newTime","getTimeFromPaper","newValue","setBezierControlOut","upBezierOut","moveBezierIn","setBezierControlIn","upBezierIn","bezX","bezY","discattr","bezXIn","bezYIn","onclick","frame","getFPS","Anim","hasSelectedKeys","keys","keyLine","deleteKeyAt","deleteSelectedKeys","objKey","addKey","sortKeys","getFrame","fps","removeDots","anims","mousemoveTime","isScrollingTime","scrollTime","setCursor","cursorTime","cursorLine","cursorLineDisplay","updateKeyLineDelayed","clearTimeout","delayedUpdateKeyLine","updateKeyLine","anii","ani","timePoints","ik","EASING_LINEAR","EASING_ABSOLUTE","timeSpan","getValue","nextKey","onChange","toggleMoveMode","toggleMultiGraphKeyDisplay","getTimeFromMouse","timer","setTime","updateTime","updateTimeDisplay","step","timeDisplayTexts","paperTime","timeDisplayMode","font-size","tlEmpty","doCenter","updateTimer","colorCursor","addAnim","newanim","slice","an","getAnim","config","showTiming","centerCursor","zeroLine2","canvas","setAttribute","getCanvasCoordsSVG","getCanvasCoordsMouseTimeDisplay","gotoOffset","off","setOffset","isCursorVisible","gotoZero","jumpKey","theKey","getKeyIndex","newIndex","thetime","getTimeRight","getTimeLeft","scaleHeight","scaleWidth","selectAllKeys","num","getTime","toggleLoop","loop","left","maxt","mint","delayedScaleHeight","lastScaleHeightMax","lastScaleHeightMin","maxv","minv","setValueScale","setSelectedKeysEasing","defaultEasing","setEasing","startMouseDown","Date","now","target","nodeName","panX","panY","setTimeScale","cursorOffset","oldCursor","getPaperXFromTime","newCursor","toggleTimeDisplayMode","lastTime","setInterval","togglePlay","isPlaying","minTime","key","source","template","normalized","wheelDelta","rawAmmount","deltaY","detail","tooltipTimeout","UndoManager","GUI","initRouting","router","Simrou","addRoute","params","localStorage","holo","showEditor","Scene","_patch","statusBarHeight","menubarHeight","optionsWidth","timelineUiHeight","timedisplayheight","patchHeight","patchWidth","patchLeft","editorbarHeight","importDialog","exportDialog","oldRendwerWidth","oldRendwerHeight","cycleRendererSize","isShowingTiming","toggleTiming","showLibrary","createProject","prompt","showHelp","deleteCurrentProject","confirm","spaceBarStart","timeused","editor","ace","edit","setTheme","session","setMode","resize","animate","importJson3D","loadUser","user","username","init","colorLinkHover","colorPort","colorPortHover","colorSelected","colorKeyOther","rendererSizes","OP_PORT_TYPE_FUNCTION","OP_PORT_TYPE_OBJECT","OP_PORT_TYPE_ARRAY","OP_PORT_TYPE_DYNAMIC","jQuery","props","dataTransfer","formData","FormData","xhr","XMLHttpRequest","open","upload","onprogress","lengthComputable","complete","loaded","total","onload","status","response","send"],"mappings":"AAuEA,QAAAA,YAAAC,GAIA,MAFAA,GAAAC,UAAAD,EAAAC,QAAAD,EAAAE,QACAF,EAAAG,UAAAH,EAAAG,QAAAH,EAAAI,QACAJ,EA4CA,QAAAK,cAAAC,GAMA,QAAAC,GAAAC,IAIA,QAAAC,GAAAD,GAEAE,GAAA,EACAC,SAAAC,iBAAA,oBAAAC,GAAA,GACAF,SAAAC,iBAAA,uBAAAC,GAAA,GACAF,SAAAC,iBAAA,0BAAAC,GAAA,GAEAF,SAAAC,iBAAA,UAAAL,GAAA,GAEAO,EAAAC,mBAAAD,EAAAC,oBACAD,EAAAE,uBACAF,EAAAG,yBACAH,EAAAC,qBAGA,QAAAG,GAAAV,GAEAE,GAAA,EACAC,SAAAQ,oBAAA,oBAAAN,GAAA,GACAF,SAAAQ,oBAAA,uBAAAN,GAAA,GACAF,SAAAQ,oBAAA,0BAAAN,GAAA,GACAF,SAAAQ,oBAAA,UAAAZ,GAAA,GACAI,SAAAS,kBAEAC,EAAAV,UAAAW,OAAA,UAAAJ,GACAG,EAAAV,UAAAW,OAAA,YAAAb,GAEAE,SAAAQ,oBAAA,YAAAI,GAAA,GAGA,QAAAA,GAAAf,GAEA,GAAAgB,GAAAC,WAAAJ,EAAA,IAAAf,GAAAoB,MAAA,IACAC,EAAAnB,EAAAoB,WAAA,IACApB,EAAAqB,UAAA,GAAArB,EAAAsB,SAAAH,GAAA,MAEAH,GAAAG,EAEAN,EAAA,IAAAf,GAAAoB,IAAAF,GACAH,EAAA,IAAAf,GAAAyB,QAAA,SAGA,QAAAlB,GAAAL,GAEAG,SAAAqB,qBAAAlB,GAAAH,SAAAsB,wBAAAnB,GAAAH,SAAAuB,2BAAApB,EAEAH,SAAAC,iBAAA,YAAAW,GAAA,IAKAF,EAAA,IAAAf,GAAAoB,IAAAS,GACAd,EAAA,IAAAf,GAAAyB,QAAA,SACAb,KA7DA,GAAAR,IAAA,EACAyB,EAAAd,EAAA,IAAAf,GAAAoB,MACAZ,EAAAH,SAAAyB,eAAA9B,EAgEAe,GAAAV,UAAA0B,KAAA,UAAAnB,GACAG,EAAAV,UAAA0B,KAAA,YAAA5B,GCzLA,QAAA6B,gBAAAC,GAEA,MAAAA,GACAA,EAAAC,WAAAC,cAAAF,EAAAG,cAAAH,EAAAI,YAAA,EACA,GAFA,OAKA,QAAAC,oBAAAC,GAEA,GAAAC,GAAA,MAAAD,EAAAE,UAAA,MAGA,OAFAD,IAAA,KAAAD,EAAAG,gBAAA,IACAH,EAAAF,aAAAG,GAAA,4CACAA,EAIA,QAAAG,MAAAC,EAAAC,GAEA,GAAAC,IAAAC,EAAAH,EAAAI,EAAAH,EAEAI,MAAAC,UAAA,SAAAH,EAAAC,GAEAG,EAAAJ,EAAAA,EACAI,EAAAH,EAAAA,EACAC,KAAAG,SAGA,IAAAD,IAAAJ,EAAAH,EAAAI,EAAAH,EACAI,MAAAI,QAAA,WAEA,GAAAT,GAAAE,EAAAC,EACAF,EAAAC,EAAAE,EACAM,EAAAH,EAAAJ,EACAQ,EAAAJ,EAAAH,CAEA,OAAA,KAAAJ,EAAA,IAAAC,EAAA,KAAAS,EAAA,IAAAC,GAEAN,KAAAO,SAAAC,IAAAC,QAAAC,WAAAC,KAAAX,KAAAI,WACAJ,KAAAO,SAAAK,MAAAC,OAAAC,OAAAC,GAAAC,SAAAC,UAAAC,eAAA,IACAlB,KAAAG,OAAA,WAAAH,KAAAO,SAAAK,KAAA,OAAAZ,KAAAI,YAGA,QAAAe,QAAAC,EAAAC,GAEA,GAAAC,GAAAtB,KACAuB,EAAA,GACAC,EAAA,GACAC,EAAA,IACAzB,MAAA0B,SAAA,KACA1B,KAAA2B,GAAAP,EACApB,KAAA4B,GAAAP,EAEArB,KAAA6B,cAAA,WAEAJ,GAAAA,EAAAK,SACAL,EAAA,KAEAzB,KAAA0B,UACA1B,KAAA0B,SAAAd,MAEAmB,iBAAA,EACAb,eAAA,KAIAlB,KAAAgC,cAAA,WAEAhC,KAAAiC,cAEAjC,KAAA0B,SAAAd,MAEAmB,iBAAA,EACAb,eAAA,IAGA,OAAAO,GAEAA,EAAAjB,IAAAC,QAAAC,WAAAwB,OAAAX,EAAAC,EAAA,GAAAV,OAAAC,GAAAC,SAAAmB,UAAAvB,MAEAC,OAAAC,OAAAC,GAAAC,SAAAoB,aAAAd,EAAAK,GAAArC,SACA4B,eAAA,EACAmB,KAAAvB,OAAAC,GAAAC,SAAAsB,kBAGAb,EAAAc,MAAA,SAAAtF,GAEA,GAAAuF,GAAA,kDACA1B,QAAAC,GAAA0B,YAAAxF,EAAAuF,GACA1B,OAAAC,GAAA2B,cAAAF,IACA,WAEA1B,OAAAC,GAAA4B,gBAEAlB,EAAAmB,UAEAnB,EAAAoB,KAAAC,YAAA,SAAArG,GAEAqB,EAAA,YAAAiF,OACAjF,EAAA,UAAAkF,QAEA,OAAA1B,EAAAK,KAEA,GAAAlF,EAAA8B,MAEA+C,EAAAK,GAAArC,QAAA2D,aAAA3B,EAAAM,GAAAtC,UAIA7C,EAAAD,WAAAC,GACAqE,OAAAC,GAAAmC,SAAAC,aAAA3C,IAAAC,QAAA2C,qBAAA3G,GAAA,KAAA,KAAA6E,QAOAG,EAAAb,MACAyC,GAAA9B,EACA+B,GAAA9B,IAEAC,EAAAmB,aAKA5C,KAAAI,QAAA,WAEA,IAAAiB,EAAAkC,KAAA,MAAA,EACA,KAAAnC,EAAAmC,KAAA,MAAA,EAEA,KAAAlC,EAAAkC,KAAAC,MAAA,MAAA,EACA,KAAApC,EAAAmC,KAAAC,MAAA,MAAA,EAEA,IAAAC,GAAArC,EAAAmC,KAAAG,OAAAzG,EAAAmE,EAAAmC,KAAAC,MAAA1D,EAAAgB,OAAAC,GAAAC,SAAAmB,SAAA,EACAwB,EAAAvC,EAAAmC,KAAAG,OAAAE,EAAAxC,EAAAmC,KAAAC,MAAAzD,EACA8D,EAAAxC,EAAAkC,KAAAG,OAAAzG,EAAAoE,EAAAkC,KAAAC,MAAA1D,EAAAgB,OAAAC,GAAAC,SAAAmB,SAAA,EACA2B,EAAAzC,EAAAkC,KAAAG,OAAAE,EAAAvC,EAAAkC,KAAAC,MAAAzD,CAEAwB,GAAA,IAAAkC,EAAAI,GACArC,EAAA,IAAAmC,EAAAG,EAEA,IAAAC,GAAA,EACAC,EAAA,EAEAC,EAAA,EACAC,EAAA,CAEAF,GAAAG,KAAAC,IAAAT,EAAAG,IAAAK,KAAAE,IAAAV,EAAAG,GAAAK,KAAAC,IAAAT,EAAAG,IAAA,EACAI,EAAAC,KAAAC,IAAAT,EAAAG,IAAAK,KAAAE,IAAAV,EAAAG,GAAAK,KAAAC,IAAAT,EAAAG,IAAA,EAEAA,EAAAH,IAAAA,GAAA7C,OAAAC,GAAAC,SAAAsD,YACAX,EAAAG,IAAAA,GAAAhD,OAAAC,GAAAC,SAAAsD,YAEAP,EAAAI,KAAAC,IAAAX,EAAAI,IAAAM,KAAAE,IAAAZ,EAAAI,GAAAM,KAAAC,IAAAX,EAAAI,IAAA,EACAI,EAAAE,KAAAC,IAAAX,EAAAI,IAAAM,KAAAE,IAAAZ,EAAAI,GAAAM,KAAAC,IAAAX,EAAAI,IAAA,CAGAM,MAAAC,IAAAX,EAAAI,GAAAM,KAAAI,IAAAV,EAAAJ,EAKA,OAHAM,GAAAN,EAAA,EACAQ,EAAAJ,EAAA,EAEA,KAAAJ,EAAA,IAAAE,EAAA,MAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAAE,EAAA,IAAAC,GAIA9D,KAAAiC,UAAA,WAEA,MAAA,QAAAX,EAAAI,UAGAJ,EAAAyB,KAAA,WAEA/C,KAAAiC,cACAjC,KAAA0B,SAAAI,SACA9B,KAAA0B,SAAA,OAGAJ,EAAAkD,KAAA,WAEAxE,KAAAiC,aACAjC,KAAAG,UAGAH,KAAA8B,OAAA,WAEAR,EAAAyB,QAGA/C,KAAAG,OAAA,WAEAH,KAAA0B,WAEA1B,KAAA0B,SAAAlB,IAAAC,QAAAC,WAAAC,KAAAX,KAAAI,WACAJ,KAAA0B,SAAAd,KAAAE,OAAAC,GAAAC,SAAAyD,aACAzE,KAAA0B,SAAAd,MAAAC,OAAAC,OAAAC,GAAAC,SAAAoB,aAAAhB,EAAA9B,YAWAU,KAAA0B,SAAAd,KAAA,OAAAZ,KAAAI,WACAJ,KAAA0B,SAAAkB,UACA5C,KAAAgC,iBAGAhC,KAAA0E,WAAA,SAAAC,GAEAA,EAAA3E,KAAA0B,SAAAd,KAAA,UAAA,GACAZ,KAAA0B,SAAAd,KAAA,UAAA,KCzNA,QAAAgE,QAEA,QAAAC,KAEA,MAAAV,MAAAW,MAAA,OAAA,EAAAX,KAAAY,WACAC,SAAA,IACAC,UAAA,GAEA,MAAAJ,KAAAA,IAAA,IAAAA,IAAA,IAAAA,IAAA,IACAA,IAAA,IAAAA,IAAAA,IAAAA,ICEA,QAAAK,UAAAC,GACA,OAAAC,MAAAD,EAAA,IAAA,OAAAA,GAAA,KAAAA,GAAAA,KAAA,ECXA,GAAArE,QAAAA,UAGAA,QAAAuE,IAAA,WAGA,QAAAC,GAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAGA7H,EAAA8H,MAEAL,OAAAA,EACAC,IAAA,QAAAA,EACAC,KAAAA,IAEAI,KAAA,SAAAJ,GAGAC,GAAAA,EAAAD,KAEAK,KAAA,SAAAL,GAEA3E,QAAAA,OAAAC,IAAAD,OAAAC,GAAAgF,QAEA,iBAAAN,EAAAO,WAEAlF,OAAAC,GAAAgF,MAAAE,UAAA,gBAAA,kRAIAnF,OAAAC,GAAAgF,MAAAvB,KAAA,eAAAiB,EAAAO,aAKAL,GAAAA,EAAAF,EAAAS,gBAEAC,OAAA,cAOAnG,KAAAoG,IAAA,SAAAZ,EAAAa,EAAAC,GAEAhB,EAAA,MAAAE,KAAAa,EAAAC,IAGAtG,KAAAuG,KAAA,SAAAf,EAAAC,EAAAY,EAAAC,GAEAhB,EAAA,OAAAE,EAAAC,EAAAY,EAAAC,IAGAtG,KAAAA,UAAA,SAAAwF,EAAAC,EAAAY,EAAAC,GAEAhB,EAAA,SAAAE,EAAAC,EAAAY,EAAAC,IAGAtG,KAAAwG,IAAA,SAAAhB,EAAAC,EAAAY,EAAAC,GAEAhB,EAAA,MAAAE,EAAAC,EAAAY,EAAAC,KAOAxF,OAAA2F,MAAA3F,OAAA2F,IAAA,GAAA3F,QAAAuE,KCpEAqB,OAAAC,QAAA,SAAAC,EAAAC,EAAAC,GAEA,GAAAvH,GAAA,EACAA,IAAA,yEACAA,GAAA,SAAAqH,EAAA,QACArH,GAAA,QACAA,GAAA,SAAAsH,EAAA,QACAtH,GAAA,QAAAuH,EAAA,QAEAhG,OAAAC,GAAAgF,MAAAvB,KAAAjF,ILTAuB,OAAAC,GAAAD,OAAAC,OAEAD,OAAAC,GAAA2B,cAAA,SAAAF,GAEA1E,EAAA,cAAAiJ,KAAA,SAAAvE,IAIA1B,OAAAC,GAAAiG,YAAA,SAAAC,EAAA1I,EAAA2I,GAEA,GAAAC,GAAA3G,IAAA4G,QAAAC,UAAAJ,EACA,KAAAE,EAGA,WADAG,SAAAC,IAAA,kBAAAN,EAGA,IAAAjI,GAAAmI,EAAAK,QAAAjJ,EACA,OAAAS,IAMAA,EAAAyI,cAAAP,QACAA,IAAAQ,IAAAC,QAAAC,eAAA,YALAN,SAAAC,IAAA,kBAAAhJ,IASAuC,OAAAC,GAAA8G,kBAAA,SAAAtJ,EAAAuJ,GAEA,GAAAC,GAAA,QAAAjK,EAAA,IAAAS,GAAAJ,KACA4J,IAAAA,EAEAA,GAEAjK,EAAA,IAAAgK,GAAAE,SAAA,qBACAlK,EAAA,IAAAgK,GAAAG,YAAA,iBAIAnK,EAAA,IAAAgK,GAAAE,SAAA,eACAlK,EAAA,IAAAgK,GAAAG,YAAA,sBAGAnK,EAAA,IAAAS,GAAAJ,IAAA4J,GACAjK,EAAA,IAAAS,GAAAC,QAAA,UAIAsC,OAAAC,GAAAmH,eAAA,SAAAjK,EAAAkK,GAEA,GAAA,QAAAlK,EAAA,MAAA,OACA,IAAA,SAAAA,EAAA,MAAA,MAEA,IAAAE,GAAAD,WAAAD,GACAmK,EAAA,GAMAC,EAAAlK,EAAAiK,EAAAD,CAKA,OAHAE,GAAAjD,MAAAiD,GAAA,EAEAlE,KAAAmE,MAAA,IAAAD,GAAA,KAYAE,WAAAC,eAAA,OAAA,SAAAC,GACA,MAAAC,MAAAC,UAAAF,KAGAF,WAAAC,eAAA,UAAA,SAAAC,GACA,MAAAnB,SAAAC,IAAAkB,KAGAF,WAAAC,eAAA,UAAA,SAAAI,EAAAC,EAAAC,EAAAC,GACA,GAAAC,GAAAC,CAEA,IAAAC,UAAAC,OAAA,EACA,KAAA,IAAAC,OAAA,wFAcA,IAXAJ,GACAK,KAAA,SAAAC,EAAAjB,GAAA,MAAAiB,IAAAjB,GACAkB,MAAA,SAAAD,EAAAjB,GAAA,MAAAiB,KAAAjB,GACAmB,KAAA,SAAAF,EAAAjB,GAAA,MAAAiB,IAAAjB,GACAoB,IAAA,SAAAH,EAAAjB,GAAA,MAAAA,GAAAiB,GACAI,IAAA,SAAAJ,EAAAjB,GAAA,MAAAiB,GAAAjB,GACAsB,KAAA,SAAAL,EAAAjB,GAAA,MAAAA,IAAAiB,GACAM,KAAA,SAAAN,EAAAjB,GAAA,MAAAiB,IAAAjB,GACAwB,SAAA,SAAAP,EAAAjB,GAAA,aAAAiB,IAAAjB,KAGAW,EAAAH,GACA,KAAA,IAAAO,OAAA,0DAAAP,EAKA,OAFAI,GAAAD,EAAAH,GAAAD,EAAAE,GAEAG,KAAA,EACAF,EAAAe,GAAA9J,MAEA+I,EAAAgB,QAAA/J,QM9GAc,OAAAA,WACAA,OAAAC,GAAAD,OAAAC,OACAD,OAAAC,GAAAgF,MAAAjF,OAAAC,GAAAgF,UAEAjF,OAAAC,GAAAgF,MAAAhD,KAAA,WAEAiH,YAAA,EACAC,YAAA,EAEAnM,EAAA,iBAAAiJ,KAAA,IACAjJ,EAAA,iBAAAiF,OACAjF,EAAA,YAAAiF,OACAjF,EAAA,YAAAiF,QAIAjC,OAAAC,GAAAgF,MAAAvB,KAAA,SAAA0F,GAEApM,EAAA,iBAAAiJ,KAAA,sGACAjJ,EAAA,iBAAAqM,OAAAD,GACApM,EAAA,iBAAA0G,OACA1G,EAAA,YAAA0G,OAEA1G,EAAA,YAAAsM,GAAA,QAAA,WACAtJ,OAAAC,GAAAgF,MAAAhD,UAKAjC,OAAAC,GAAAgF,MAAAsE,YAAA,SAAAC,EAAAJ,GAEApM,EAAA,iBAAAiJ,KAAA,uCAAAuD,EAAA,+DACAxM,EAAA,iBAAAqM,OAAAD,GACApM,EAAA,iBAAA0G,OACA1G,EAAA,YAAA0G,QAGA1D,OAAAC,GAAAgF,MAAAE,UAAA,SAAAqE,EAAAJ,GAGApM,EAAA,iBAAAiJ,KAAA,sGACAjJ,EAAA,iBAAAqM,OAAA,6DAAAG,EAAA,SACAxM,EAAA,iBAAAqM,OAAAD,GACApM,EAAA,iBAAA0G,OACA1G,EAAA,YAAA0G,OAEA1G,EAAA,YAAAsM,GAAA,QAAA,WACAtJ,OAAAC,GAAAgF,MAAAhD,UClDAjC,OAAAA,WACAA,OAAAC,GAAAD,OAAAC,OACAD,OAAAC,GAAAmC,SAAApC,OAAAC,GAAAmC,aAEApC,OAAAC,GAAAmC,SAAAqH,YAAA,KACAzJ,OAAAC,GAAAmC,SAAAsH,gBAAA,KACA1J,OAAAC,GAAAmC,SAAAuH,cAAA,KACA3J,OAAAC,GAAAmC,SAAAwH,UAAA5K,EAAA,EAAAC,EAAA,GAEAe,OAAAC,GAAAmC,SAAAC,aAAA,SAAAwH,EAAAC,EAAAC,EAAAC,GAyCA,QAAAC,GAAA9N,GAGA+N,EAAA,EACAC,EAAA,GA3CAnK,OAAAC,GAAAmC,SAAAqH,YAAAO,EACAhK,OAAAC,GAAAmC,SAAAsH,gBAAAK,EACA/J,OAAAC,GAAAmC,SAAAuH,cAAAG,EACA9J,OAAAC,GAAAmC,SAAAwH,SAAAC,CAEA,IAAA5D,GAAAjG,OAAAC,GAAAmK,iBAAA,aAAAC,IAAArK,OAAAC,GAAAmC,SAAAkI,aACAtK,QAAAC,GAAAgF,MAAAvB,KAAAuC,GAEAjJ,EAAA,aAAAkF,QACAlF,EAAA,aAAAsM,GAAA,QAAA,SAAAnN,GAEA,GAAAoO,GAAAvN,EAAA,aAAAK,KAKAL,GAAA,iBAAAiJ,KAHAsE,EAGA,iCAAAA,EAAAC,cAAA,yBAFA,kCAMAxN,EAAA,uBAAAkK,SAAA,WAEA,IAAAgD,GAAA,EACAC,EAAA,SAAAM,GAEAP,GAAAO,EAEA,EAAAP,IAAAA,EAAA,EACA,IAAAQ,GAAA1N,EAAA,yBACA2N,EAAA3N,EAAA,gBACAkN,IAAAQ,EAAArC,SAAA6B,EAAA,GACA,EAAAA,IAAAA,EAAAQ,EAAArC,OAAA,EAEA,IAAAuC,GAAA,UACAD,GAAAxD,YAAAyD,GAEAF,EAAAvD,YAAAyD,GAAAC,GAAAX,GAAAhD,SAAA0D,GAUA5N,GAAA,aAAAsM,GAAA,QAAAW,GAEAjN,EAAA,aAAAd,QAAA,SAAAC,GAEA,OAAAA,EAAAsB,OAEA,IAAA,IACA,GAAAqN,GAAA9N,EAAA,aAAA2H,KAAA,SACAjF,KAAA4G,QAAAyE,MAAAD,GACA9K,OAAAC,GAAAgF,MAAAhD,MACA,MAEA,KAAA,GAEA,MADAgI,MACA,CAGA,KAAA,IACA,KAEA,KAAA,IACAjN,EAAA,aAAAmK,YAAA,YACAgD,EAAA,GACA,MAEA,KAAA,IACA,KAEA,KAAA,IACAnN,EAAA,aAAAmK,YAAA,YACAgD,EAAA,EACA,MAEA,SAAA,OAEAhO,EAAA6O,mBAGAC,WAAA,WAAAjO,EAAA,aAAAkF,SAAA,MAIAlC,OAAAC,GAAAmC,SAAAkI,UAAA,WAIA,QAAAY,OAAA7N,IAAA8N,YAEA,GAAA,oBAAAC,OAAAC,UAAAnH,SAAAoH,KAAAjO,KAEA,IAAA,GAAAkO,gBAAAlO,KAEA,GAAAA,IAAAmO,eAAAD,cACA,CACA,GAAAtF,MAAA,GACA6E,OAAA,OAAAK,WAAAI,aAEAE,MAAA,EACAC,YAAA,CAGA,IAFA,YAAAC,KAAA,UAAAb,OAAA,OAAAY,YAAA,GAEAA,WACA,CACA,GAAArF,KAEAoF,KAAAA,KACAG,KAAAd,OACAe,cAAAf,OAAAN,cAEAH,KAAAyB,KAAAzF,IAGA0F,MAAAb,MAAA7N,IAAAkO,cAAAJ,WAAAI,aAAA,MA5BA,GAAAlB,OA0CA,OARAa,OAAAc,IAAA,IAEA3B,IAAA4B,KAAA,SAAAC,EAAAC,GAEA,MAAAD,GAAAN,KAAAvD,OAAA8D,EAAAP,KAAAvD,SAIAgC,IC9IA,IAAArK,QAAAA,UACAA,QAAAC,GAAAD,OAAAC,OAEAD,OAAAC,GAAAmM,MAAA,SAAAC,GAscA,QAAAC,KAEAC,EAAA,KACAC,EAAA,KACAC,GAAAA,EAAAxK,OAGA,QAAAyK,KAEA,GAAAhL,GAAA,EACAA,IAAAiL,EAAAtE,OAAA,uEAEArI,OAAAC,GAAA2B,cAAAF,GAsBA,QAAAkL,GAAAzQ,GAKA,GAAA,GAAAA,EAAA0Q,UAAAC,EACA,CACAP,IAEA7M,EAAAC,QAAAoN,cAAA,MACAR,EAAA7M,EAAAC,QAAA2C,qBAAAnG,IAEAqK,QAAAC,IAAA,WAEA+F,EAAA9M,EAAAC,QAAA2C,qBAAAnG,GAEAsQ,IAAAA,EAAAjM,EAAAwM,MAAAvK,KAAA,EAAA,EAAA,GAAA,IAAA3C,UACA2M,EAAA/I,MACA,IAAA3E,IAAAC,EAAAuN,EAAAvN,EAAAC,EAAAsN,EAAAtN,GACAG,GAAAJ,EAAAwN,EAAAxN,EAAAC,EAAAuN,EAAAvN,EAEA,IAAAG,EAAAJ,EAAAD,EAAAC,EAAA,EACA,CACA,GAAAiO,GAAAlO,EAAAC,CACAD,GAAAC,EAAAI,EAAAJ,EACAI,EAAAJ,EAAAiO,EAEA,GAAA7N,EAAAH,EAAAF,EAAAE,EAAA,EACA,CACA,GAAAiO,GAAAnO,EAAAE,CACAF,GAAAE,EAAAG,EAAAH,EACAG,EAAAH,EAAAiO,EAGAT,EAAA3M,MACAd,EAAAD,EAAAC,EACAC,EAAAF,EAAAE,EACAkO,MAAA/N,EAAAJ,EAAAD,EAAAC,EACAoO,OAAAhO,EAAAH,EAAAF,EAAAE,EACAc,OAAAC,OAAAC,GAAAC,SAAAmN,gBACA9L,KAAAvB,OAAAC,GAAAC,SAAAmN,gBACAjN,eAAA,EACAkN,eAAA,IAGA,KAAA,GAAAC,KAAA/M,GAAA6J,IAEA,IAAA7J,EAAA6J,IAAAkD,GAAAC,WACA,CAGA,GAAA/K,GAAAjC,EAAA6J,IAAAkD,GAAAE,OAAAC,SACA,IAAAjL,GAAAA,EAAAG,OACA,CACA,GAAA+K,GAAAlL,EAAAG,OAAAzG,EACAyR,EAAAnL,EAAAG,OAAAE,EACA+K,EAAApL,EAAA3C,KAAA,SACAgO,EAAArL,EAAA3C,KAAA,SAGA6N,GAAA5O,EAAAC,GAAA2O,EAAAvO,EAAAJ,GAAA4O,EAAA7O,EAAAE,GAAA2O,EAAAxO,EAAAH,GACA0O,EAAAE,EAAA9O,EAAAC,GAAA2O,EAAAE,EAAAzO,EAAAJ,GAAA4O,EAAAE,EAAA/O,EAAAE,GAAA2O,EAAAE,EAAA1O,EAAAH,GAIAuB,EAAAuN,cAAAvN,EAAA6J,IAAAkD,IACA/M,EAAA6J,IAAAkD,GAAAS,aAAA,KAMAxN,EAAAyN,iBAAAzN,EAAA6J,IAAAkD,IACA/M,EAAA6J,IAAAkD,GAAAS,aAAA,KAOA,IAAArB,EAAAtE,OAAArI,OAAAC,GAAA2B,cAAA,IACA8K,KAmIA,QAAAwB,GAAAC,GAEA,GAAA9H,GAAA8H,EAAA9H,EAEA,KAAA+H,EAEA,EAAA,SAAAjI,EAAAkI,GAEArO,OAAAsO,KAAAhH,KACAgH,KAAA,WACA5O,EAAA4G,QAAAiI,SAAApI,GAAA,IAEAqI,KAAA,WACA9O,EAAA4G,QAAAyE,MAAAsD,EAAAhI,EAAAoI,UAAAtI,QAIAE,EAAAqI,GAAArI,EAAAgI,SAGAhI,EAAAsI,UAAA,SAAAC,GAEAT,EAAAU,QAAAD,EAAAzQ,UAAAyQ,GACAT,EAAAW,OAAAzI,EAAAoI,UAAAM,UAAA/P,EAAAqH,EAAAoI,UAAAM,UAAA9P,IAIAoH,EAAAoI,WAAApI,EAAAoI,UAAAO,UAEA3I,EAAAoI,UAAAO,UAAAC,GAAAd,EAAAlM,MAIA,KAAA,GAAAsL,KAAAlH,GAAA6I,QACA,CACA,GAAAN,GAAAvI,EAAA6I,QAAA3B,EAEAqB,GAAAH,YAAAG,EAAAH,cAEA,YAAAG,EAAAH,UAAAU,SACAhB,EAAAU,QAAAzQ,YAAAwQ,GAGAA,EAAAH,UAAAjD,eAAA,aAEA,YAAAoD,EAAAH,UAAAU,UAAAP,EAAAH,UAAAW,KAAA,UACA,QAAAR,EAAAH,UAAAU,UAAAP,EAAAH,UAAAW,KAAA,UACA,QAAAR,EAAAH,UAAAU,UAAAP,EAAAH,UAAAW,KAAA,SAKA,IAAA,GAAAC,KAAAhJ,GAAAiJ,SAEAnB,EAAAU,QAAAU,aAAAlJ,EAAAiJ,SAAAD,GA8BA,IA3BAhJ,EAAAoI,YAEApI,EAAAoI,cAGApI,EAAAoI,UAAAM,YAEA1I,EAAAoI,UAAAM,UAAA,IAAA/O,OAAAC,GAAAmC,SAAAwH,SAAA3K,GAAA,IAAAe,OAAAC,GAAAmC,SAAAwH,SAAA5K,GAAAA,EAAAwQ,EAAAxQ,EAAAwQ,EAAAC,EAAA,EAAAxQ,EAAAuQ,EAAAvQ,EAAAuQ,EAAAE,EAAA,IACA1Q,EAAAgB,OAAAC,GAAAmC,SAAAwH,SAAA5K,EAAAC,EAAAe,OAAAC,GAAAmC,SAAAwH,SAAA3K,IAIAoH,EAAAoI,UAAAjD,eAAA,cAEA2C,EAAAW,OAAAzI,EAAAoI,UAAAM,UAAA/P,EAAAqH,EAAAoI,UAAAM,UAAA9P,GAGAoH,EAAAoI,UAAAjD,eAAA,UAEA9L,EAAAC,QAAAgQ,WAAAxB,EAAA9H,EAAAoI,UAAAjF,OAGAnD,EAAAoI,UAAAjD,eAAA,cAEAnF,EAAAoI,UAAAO,SAAAC,GAGAjP,OAAAC,GAAAmC,SAAAqH,YACA,CACAjD,QAAAC,IAAA,mBAEA,IAAAmJ,GAAA5P,OAAAC,GAAAmC,SAAAqH,YAAA5I,GAAAwF,GACA/F,EAAAN,OAAAC,GAAAmC,SAAAqH,YAAA5I,GAAArC,QACAqR,EAAA7P,OAAAC,GAAAmC,SAAAqH,YAAA3I,GAAAuF,GACA9F,EAAAP,OAAAC,GAAAmC,SAAAqH,YAAA3I,GAAAtC,OAEA,KAAA,GAAAsR,KAAAxP,GAAAyP,OAGAzP,EAAAyP,MAAAD,GAAAE,QAAA1P,GAAAA,EAAAyP,MAAAD,GAAAG,SAAA1P,GACAD,EAAAyP,MAAAD,GAAAG,SAAA3P,GAAAA,EAAAyP,MAAAD,GAAAE,QAAAzP,IAEAD,EAAAyP,MAAAD,GAAA9O,QAIA,IAAAkP,GAAA7J,EAAA8J,gBAAA7P,GACA8P,EAAA/J,EAAA8J,gBAAA5P,EAEA6P,IAAAF,IAEAxQ,EAAA4G,QAAA0D,KACA3D,EACA6J,EAAAxR,UACAkR,EACAtP,EAAA5B,WAGAgB,EAAA4G,QAAA0D,KACA3D,EACA+J,EAAA1R,UACAmR,EACAtP,EAAA7B,gBAKA,IAAAsB,OAAAC,GAAAmC,SAAAsH,gBACA,CACA,GAAA2G,GAAAhK,EAAA8J,gBAAAnQ,OAAAC,GAAAmC,SAAAsH,gBAEA,IAAA2G,EAEA,CAAA3Q,EAAAC,QAAA2G,MAAA0D,KACAhK,OAAAC,GAAAmC,SAAAuH,cACA3J,OAAAC,GAAAmC,SAAAsH,gBAAAhL,UACA2H,EACAgK,EAAA3R,YAIAyP,EAAAW,OAAAzI,EAAAoI,UAAAM,UAAA/P,EAAAqH,EAAAoI,UAAAM,UAAA9P,GAEAe,OAAAC,GAAAmC,SAAAuH,cAAA,KACA3J,OAAAC,GAAAmC,SAAAqH,YAAA,KACAzJ,OAAAC,GAAAmC,SAAAsH,gBAAA,KACA1J,OAAAC,GAAAmC,SAAAwH,UAAA5K,EAAA,EAAAC,EAAA,GAEAkP,EAAAW,SAEAV,GAEAnD,WAAA,WAEAgE,GAAAd,EAAAmC,eAAAnC,EAAAzK,OACAhE,EAAAC,QAAAoN,cAAA,MACArN,EAAAC,QAAAoN,cAAAoB,GACAzO,EAAAC,QAAA4Q,aAAAlK,IACA,IAKA4E,WAAA,WAEAkD,EAAA9H,GAAAoI,UAAA+B,eAEArC,GAAA9H,GAAAoI,UAAA+B,OACA9Q,EAAAC,QAAA8Q,kBAAAtC,EAAA9H,GAAAqI,IACAP,EAAAH,aAAA,GACAtB,MAEA,IAEAyB,EAAAuC,UAAA,EA8XA,QAAAC,KAEAC,EAAAvK,GAAAoI,UAAAoC,SAAA,IAAAD,EAAAvK,GAAAoI,UAAAoC,QAAAxI,QAMArL,EAAA,oBAAA0G,OACA1G,EAAA,oBAAAiJ,KAAA2K,EAAAvK,GAAAoI,UAAAoC,UALA7T,EAAA,oBAAAiF,OAQA2O,EAAAvK,GAAAoI,UAAAqC,MAGA9T,EAAA,iBAAA0G,OACA1G,EAAA,iBAAAiJ,KAAA2K,EAAAvK,GAAAoI,UAAAqC,OAJA9T,EAAA,iBAAAiF,OA2RA,QAAA8O,KAEA,IAAA,GAAAxD,KAAAyD,GACA,CACA,GAAAtC,GAAA,mBAAAsC,EAAAzD,GAAA0D,OACAD,GAAAzD,GAAAlP,aAEArB,EAAA0R,GAAArR,OAAA2T,EAAAzD,GAAAlQ,KAAAL,EAAA0R,GAAArR,IAAA2T,EAAAzD,GAAAlQ,KAIAL,EAAA0R,GAAAzI,KAAA+K,EAAAzD,GAAAlQ,KAIA2C,OAAAC,GAAAC,SAAAgR,oBAAA,GAAAjG,WAAA8F,EAAA/Q,OAAAC,GAAAC,SAAAgR,qBAzhDA,GAAA1Q,GAAAtB,IACAA,MAAAmL,OACAnL,KAAAoH,MAAA,IACA,IAAA5G,GAAA2M,EAEA2E,KACAG,EAAA,KACAP,EAAA,KACA9D,GAAA,EACAH,KACAsC,EAAA,EAEAO,GAAAxQ,EAAA,EAAAC,EAAA,EAAAwQ,EAAA,KAAAC,EAAA,MACA0B,EAAA,KAIA7E,EAAA,KACAC,EAAA,KACAC,EAAA,KACA2B,GAAA,CAEAlP,MAAAkP,UAAA,WAEA,MAAAA,IAGAlP,KAAAU,SAAA,WAEA,MAAAY,GAAAwM,OAGA9N,KAAAmS,MAAA,SAAAlV,GAEA,GAAAA,EAAAmV,cAAAC,MAAAC,QAAA,cAAA,GACA,CACA,GAAA/S,GAAAtC,EAAAmV,cAAAG,QAAA,aAEAtV,GAAA6O,gBAEA,IAAA0G,GAAA9J,KAAA+J,MAAAlT,EAKA,IAHA+H,QAAAC,IAAA,aAAAiL,GAGAA,GAEAA,EAAArH,IACA,CAGA,GAAAkD,GAAA,EAAAqE,EAAA,CAGA,KAAArE,IAAAmE,GAAArH,IACA,CACA,GAAAwH,GAAAH,EAAArH,IAAAkD,GAAAmB,GACAoD,EAAAJ,EAAArH,IAAAkD,GAAAmB,GAAAqD,cAEAL,GAAArH,IAAAkD,GAAAkB,UAAA+B,QAAA,CAGA,KAAAoB,IAAAF,GAAArH,IAEA,GAAAqH,EAAArH,IAAAuH,GAAA1C,QACA,IAAA,GAAA8C,KAAAN,GAAArH,IAAAuH,GAAA1C,QAEA,GAAAwC,EAAArH,IAAAuH,GAAA1C,QAAA8C,GAAAjC,MACA,CAEA,IADA,GAAAvH,GAAAkJ,EAAArH,IAAAuH,GAAA1C,QAAA8C,GAAAjC,MAAA1H,OACAG,KAEAhC,QAAAC,IAAA,kCAAAiL,EAAArH,IAAAuH,GAAA1C,QAAA8C,GAAAjC,MAAAvH,IAEA,OAAAkJ,EAAArH,IAAAuH,GAAA1C,QAAA8C,GAAAjC,MAAAvH,KAEAhC,QAAAC,IAAA,oBAEAiL,EAAArH,IAAAuH,GAAA1C,QAAA8C,GAAAjC,MAAAkC,OAAAzJ,EAAA,GAMA,KAAA,GAAAA,KAAAkJ,GAAArH,IAAAuH,GAAA1C,QAAA8C,GAAAjC,MAEA2B,EAAArH,IAAAuH,GAAA1C,QAAA8C,GAAAjC,MAAAvH,GAAA0J,OAAAL,IAAAH,EAAArH,IAAAuH,GAAA1C,QAAA8C,GAAAjC,MAAAvH,GAAA0J,MAAAJ,GACAJ,EAAArH,IAAAuH,GAAA1C,QAAA8C,GAAAjC,MAAAvH,GAAA2J,QAAAN,IAAAH,EAAArH,IAAAuH,GAAA1C,QAAA8C,GAAAjC,MAAAvH,GAAA2J,OAAAL,IAUA,GAAAM,KACA,KAAA7E,EAAA,EAAAA,EAAAmE,EAAArH,IAAAhC,OAAAkF,IAGA,GAAA,gBAAAmE,EAAArH,IAAAkD,GAAAc,QAGA,IAAA,GAAA2D,KAAAN,GAAArH,IAAAkD,GAAA2B,QAEA,GAAA,WAAAwC,EAAArH,IAAAkD,GAAA2B,QAAA8C,GAAApG,KACA,CACA,GAAAyG,GAAAC,SAAAZ,EAAArH,IAAAkD,GAAA2B,QAAA8C,GAAAO,MAAA,IACAC,EAAAd,EAAArH,IAAAkD,GAAA2B,QAAA8C,GAAAO,MAAAvG,IAAAyG,GAAArG,MAAAsG,WAAA,CAKA,KAHAlM,QAAAC,IAAA,gBAAA4L,GACA7L,QAAAC,IAAA,gBAAA+L,GAEAZ,EAAA,EAAAA,EAAAF,EAAArH,IAAAhC,OAAAuJ,IAEApL,QAAAC,IAAA,iCAAAiL,EAAArH,IAAAuH,GAAAnD,UAAAO,UAEAsD,SAAAZ,EAAArH,IAAAuH,GAAAnD,UAAAO,SAAA,KAAAqD,IAEA7L,QAAAC,IAAA,qBAEAiL,EAAArH,IAAAuH,GAAAnD,UAAAO,SAAAwD,EACAJ,EAAAtG,KAAA4F,EAAArH,IAAAuH,GAAAlD,KAQA,IAAAnB,IAAAmE,GAAArH,IACA,CACA,GAAA0B,IAAA,CACA,KAAA6F,EAAA,EAAAA,EAAAQ,EAAA/J,OAAAuJ,IAEA,GAAAF,EAAArH,IAAAkD,GAAAmB,IAAA0D,EAAAR,GACA,CACA7F,GAAA,CACA,OAGAA,IAEA2F,EAAArH,IAAAkD,GAAAkB,UAAAO,SAAAC,GAMA,GAAA0D,GAAAC,OAAAC,UACAC,EAAAF,OAAAC,SAEA,KAAAtF,IAAAmE,GAAArH,IAEAqH,EAAArH,IAAAkD,GAAAkB,WAAAiD,EAAArH,IAAAkD,GAAAkB,WAAAiD,EAAArH,IAAAkD,GAAAkB,UAAAM,YAEA4D,EAAAtP,KAAAC,IAAAqP,EAAAjB,EAAArH,IAAAkD,GAAAkB,UAAAM,UAAA/P,GACA8T,EAAAzP,KAAAC,IAAAwP,EAAApB,EAAArH,IAAAkD,GAAAkB,UAAAM,UAAA9P,GAIA,KAAAsO,IAAAmE,GAAArH,IAEA,GAAAqH,EAAArH,IAAAkD,GAAAkB,WAAAiD,EAAArH,IAAAkD,GAAAkB,WAAAiD,EAAArH,IAAAkD,GAAAkB,UAAAM,UACA,CAEA,GAAAgE,GAAA,EACAC,EAAA,CACA5B,KAEA2B,EAAArT,EAAAC,QAAA2C,qBAAA8O,GAAApS,EACAgU,EAAAtT,EAAAC,QAAA2C,qBAAA8O,GAAAnS,GAGAyS,EAAArH,IAAAkD,GAAAkB,UAAAM,UAAA/P,EAAA0S,EAAArH,IAAAkD,GAAAkB,UAAAM,UAAA/P,EAAA+T,EAAAJ,EACAjB,EAAArH,IAAAkD,GAAAkB,UAAAM,UAAA9P,EAAAyS,EAAArH,IAAAkD,GAAAkB,UAAAM,UAAA9P,EAAA+T,EAAAF,EAwBA,MAnBA9S,QAAAC,GAAA2B,cAAA,UAAA8P,EAAArH,IAAAhC,OAAA,WACA7H,EAAAuM,cAAA,UACArN,GAAAC,QAAA2G,MAAA2M,YAAAvB,GAoBA1R,OAAAC,GAAA2B,cAAA,8CAIA1C,KAAAgU,IAAA,SAAA/W,GAEAqE,EAAA2S,KAAAhX,GACAqE,EAAA4S,qBAGAlU,KAAAiU,KAAA,SAAAhX,GAEA,GAAAkO,MACAgJ,KACAzB,EAAA,EAAArE,EAAA,EAAAyE,EAAA,CACA,KAAAzE,IAAAZ,GAEAtC,EAAAyB,KAAAa,EAAAY,GAAAlH,GAAAiN,iBACAD,EAAAvH,KAAAa,EAAAY,GAAAlH,GAAAqI,GAKA,KAAAnB,EAAA,EAAAA,EAAAlD,EAAAhC,OAAAkF,IAEA,IAAAqE,EAAA,EAAAA,EAAAvH,EAAAkD,GAAA2B,QAAA7G,OAAAuJ,IAEA,GAAAvH,EAAAkD,GAAA2B,QAAA0C,GAAA7B,MAGA,IADAiC,EAAA3H,EAAAkD,GAAA2B,QAAA0C,GAAA7B,MAAA1H,OACA2J,KAEA3H,EAAAkD,GAAA2B,QAAA0C,GAAA7B,MAAAiC,IAAA3H,EAAAkD,GAAA2B,QAAA0C,GAAA7B,MAAAiC,GAAAE,OAAA7H,EAAAkD,GAAA2B,QAAA0C,GAAA7B,MAAAiC,GAAAG,SAEAoB,cAAAF,EAAAhJ,EAAAkD,GAAA2B,QAAA0C,GAAA7B,MAAAiC,GAAAE,QAAAqB,cAAAF,EAAAhJ,EAAAkD,GAAA2B,QAAA0C,GAAA7B,MAAAiC,GAAAG,UAEA9H,EAAAkD,GAAA2B,QAAA0C,GAAA7B,MAAAiC,GAAA,MAQA,IAAAwB,IAAAnJ,IAAAA,GACAoJ,EAAA7L,KAAAC,UAAA2L,EAEAxT,QAAAC,GAAA2B,cAAA,UAAA+K,EAAAtE,OAAA,WAEAlM,EAAAmV,cAAAoC,QAAA,aAAAD,GACAtX,EAAA6O,kBAGAhO,EAAA,UAAA2W,MAAA,SAAAxX,GAEA,OAAAA,EAAAsB,OAEA,IAAA,IACAqP,GAAA,KAKA9P,EAAA,UAAAd,QAAA,SAAAC,GAEA,OAAAA,EAAAsB,OAEA,IAAA,IACAqP,GAAA,CACA,MAEA,KAAA,IAAA,IAAA,GACA,GAAA9P,EAAA,SAAA4W,GAAA,UAAA,MAEApT,GAAA4S,oBACAjX,EAAA0X,iBAAA1X,EAAA0X,kBACA1X,EAAA6O,gBAAA7O,EAAA6O,iBACAxK,EAAAsT,mBACA,MAEA,KAAA,IACA,IAAA,GAAAlC,KAAAjF,GACAA,EAAAiF,GAAAhO,YAAA+I,EAAAiF,GAAAvL,GAAAxC,QACA,MAEA,KAAA,KACA1H,EAAA4X,SAAA5X,EAAA6X,WAEA7X,EAAAqB,SAAAwC,OAAAsO,KAAAE,OACAxO,OAAAsO,KAAAA,OAEA,MAEA,KAAA,IACAnS,EAAA4X,SAAA5X,EAAA6X,QAEAxT,EAAAyT,eAIA9X,EAAAqB,SAAAgD,EAAA0T,sBACA1T,EAAA2T,sBAEA,MAEA,KAAA,IAEA3T,EAAA4T,uBACA,MAGA,KAAA,IACA5T,EAAA6T,mBAAA,MAWAnV,KAAAoV,aAAA,WAEAtU,OAAAC,GAAAgF,MAAAsE,YAAA,qBAEAvJ,OAAA2F,IAAAL,IACA,WAAA6L,EAAAoD,IAAA,UACA,SAAAhN,GAEA,GAAAiN,GAAA,EAEAjN,GAAAkN,OAEAD,EAAA,wBACAA,GAAA,gCAAA5M,KAAAC,UAAAN,GAAA,UAIAiN,EAAA,2BACAA,GAAA,SAAAjN,EAAAmN,KAAA,MACAF,GAAA,kBACAA,GAAA,+BAAAjN,EAAA1H,KAAA,iBACA2U,GAAA,aACAA,GAAA,QAAAjN,EAAAd,IAAA,SAGAzG,OAAAC,GAAAgF,MAAAvB,KAAA8Q,MAKAtV,KAAAyV,mBAAA,SAAApP,EAAAgP,EAAAK,GAEA5U,OAAAC,GAAAgF,MAAAsE,YAAA,kBAEA7J,EAAAC,QAAA2G,MAAAuO,IAAAC,cAAA,CAEA,IAAApG,GAAAyC,EAAAoD,IACA3I,EAAAuF,EAAAvF,IACA2I,KAAA7F,EAAA6F,GACAK,IAAAhJ,EAAAgJ,GAEA3J,WAAA,WAEA,GAAAtG,GAAAjF,EAAAC,QAAA2G,MAAAyO,WAAA,EAEApQ,GAAAqQ,IAAAxF,YACA7K,EAAAqQ,GAAAxF,QAAAC,EAAAD,EAAAC,EACA9K,EAAAqQ,GAAAxF,QAAAE,EAAAF,EAAAE,EACA/K,EAAAqQ,GAAAxF,QAAAxQ,EAAAwQ,EAAAxQ,EACA2F,EAAAqQ,GAAAxF,QAAAvQ,EAAAuQ,EAAAvQ,EAEA0F,EAAAqQ,GAAAC,YACAtQ,EAAAqQ,GAAAC,SAAAxF,EAAA/P,EAAAwV,cACAvQ,EAAAqQ,GAAAC,SAAAvF,EAAAhQ,EAAAyV,eAEAxQ,EAAAiD,KAAAC,UAAAlD,GACA6B,QAAAC,IAAA,cAAA9B,EAAA0D,QAGArI,OAAA2F,IAAAD,IACA,WAAAgJ,GAEA9C,KAAAA,EACAjH,KAAAA,EACAyQ,WAAA1V,EAAAC,QAAA2G,MAAAuO,IAAAQ,mBAEA,SAAA9N,GAEAvH,OAAAC,GAAA2B,cAAA2F,EAAA+N,WAAA,EAAA,gBACA,qBAEAtV,OAAAC,GAAAgF,MAAAhD,OACAsD,GAAAA,OAEA,KAGArG,KAAAqW,kBAAA,WAEA,MAAApE,IAGAjS,KAAAsW,kBAAA,SAAAC,GAEAjV,EAAAkV,UAAAlV,EAAAkV,SAAAC,QAEAxE,EAAAsE,EACA,OAAAtE,GAEAnU,EAAA,kBAAAiF,OACAjF,EAAA,iBAAAiF,SAIAjF,EAAA,iBAAA0G,OACA1G,EAAA,kBAAA0G,OACA1G,EAAA,sBAAAiJ,KAAAwP,EAAA7J,MACApL,EAAAoV,mBAAAH,GACAzY,EAAA,oBAAA8C,KAAA,OAAA,SAAA2V,EAAAlB,OAIArV,KAAA0W,mBAAA,SAAAH,GAEAA,IAAAA,EAAAtE,GACAnU,EAAA,iBAAAiJ,KAAA,IAEAjG,OAAA2F,IAAAL,IACA,WAAA6L,EAAAoD,IAAA,SACA,SAAAsB,GAEAJ,EAAAI,MAAAA,CACA,IAAA5P,GAAA,EACAA,IAAAjG,OAAAC,GAAAmK,iBAAA,yBAAAqL,GACAxP,GAAAjG,OAAAC,GAAAmK,iBAAA,2BAAAqL,GAEAzY,EAAA,iBAAAiJ,KAAAA,MAIA/G,KAAA4W,cAAA,WAEAxR,MAAAkL,EAAAxQ,IAAAsF,MAAAkL,EAAAvQ,IAAAqF,MAAAkL,EAAAC,IAAAnL,MAAAkL,EAAAE,IACAlP,EAAAwM,MAAA+I,WAAAvG,EAAAxQ,EAAAwQ,EAAAvQ,EAAAuQ,EAAAC,EAAAD,EAAAE,IAkBAxQ,KAAA8W,qBAAA,SAAAhH,GAEA,IAAA,GAAAzB,KAAA/M,GAAA6J,IAEA7J,EAAA6J,IAAAkD,GAAA+C,eAAAtB,IAEAxO,EAAAuN,cAAAvN,EAAA6J,IAAAkD,IACA/M,EAAA6J,IAAAkD,GAAAS,aAAA,GAGAtB,MAIAxN,KAAA+U,aAAA,WAEA/U,KAAA8W,qBAAA/G,IA0FA/P,KAAA+W,WAAA,SAAAR,GAEAA,EAAAT,KAEAS,EAAAT,GAAAxF,UAEAA,EAAAxQ,EAAAyW,EAAAT,GAAAxF,QAAAxQ,EACAwQ,EAAAvQ,EAAAwW,EAAAT,GAAAxF,QAAAvQ,EACAuQ,EAAAC,EAAAgG,EAAAT,GAAAxF,QAAAC,EACAD,EAAAE,EAAA+F,EAAAT,GAAAxF,QAAAE,GAGA+F,EAAAT,GAAAC,WAEAvV,EAAAwV,cAAAO,EAAAT,GAAAC,SAAAxF,EACA/P,EAAAyV,eAAAM,EAAAT,GAAAC,SAAAvF,EACAhQ,EAAAwW,cAGA1V,EAAAsV,gBACA7G,EAAA,EACAzO,EAAAgV,kBAAAC,GACA/V,EAAA4G,QAAAqP,QAEAjW,EAAA4G,QAAA2M,YAAAwC,GACAzV,OAAAsO,KAAAqH,QACA3V,OAAAC,GAAAgF,MAAAhD,OACAzB,EAAA2V,oBAGAjX,KAAAwE,KAAA,SAAA0S,GAEAlX,KAAAoH,MAAA8P,EAEApZ,EAAA,WAAAqM,OAAArJ,OAAAC,GAAAmK,iBAAA,0BACApN,EAAA,SAAAqM,SAEAnK,KAAA8N,MAAAqJ,QAAA,QAAA,EAAA,GACAnX,KAAAoX,UAAA9V,EAAA8F,OAEAkJ,GAAAxQ,EAAA,EAAAC,EAAA,EAAAwQ,EAAAzS,EAAA,cAAAmQ,QAAAuC,EAAA1S,EAAA,cAAAoQ,UACA5M,EAAAsV,gBAEA9Y,EAAA,cAAAgB,KAAA,aAAA,SAAArC,EAAA4a,EAAAC,GAEAD,EAAAvW,OAAAC,GAAAwW,cAAA9a,GAGAA,EAAAD,WAAAC,GACA6T,EAAAC,EAAA8G,EAAA,GAAA/G,EAAAE,EAAA6G,EAAA,IAEA/G,EAAAxQ,GAAAuX,EAAA,EACA/G,EAAAvQ,GAAAsX,EAAA,EACA/G,EAAAC,GAAA8G,EACA/G,EAAAE,GAAA6G,GAGA/V,EAAAsV,iBAGA,IAAAY,GAAAlW,EAAAwM,MAAAvK,KAAA,OAAA,OAAA,OAAA,QAAA3C,MACAyB,KAAAvB,OAAAC,GAAAC,SAAAsB,gBACApB,eAAA,GAGAsW,GAAAC,SAEAD,EAAA3U,KAAAC,YAAA,SAAA4U,GAEA5Z,EAAA,YAAAiF,OACAjF,EAAA,UAAAkF,QAEAxC,EAAAC,QAAAoN,cAAA,MACAvM,EAAAsT,qBAGA9W,EAAA,UAAAsM,GAAA,YAAA,SAAAnN,GAGA,GAAA,GAAAA,EAAA0Q,UAAAC,EACA,CACA,IAAA,GAAAS,KAAA/M,GAAA6J,IACA,IAAA7J,EAAA6J,IAAAkD,GAAAC,aAAAhN,EAAA6J,IAAAkD,GAAAsJ,YAAArW,EAAA6J,IAAAkD,GAAAuJ,aACA,MAEAlK,GAAAzQ,MAIAa,EAAA,cAAAgB,KAAA,UAAA,SAAArC,GAEA2Q,MAGAtP,EAAA,cAAAgB,KAAA,YAAA,SAAA7B,GAMA,GAJAA,EAAAT,WAAAS,GAEAoQ,GAAA,GAAApQ,EAAA0Q,SAAAP,IAEA,GAAAnQ,EAAA0Q,SAAA,GAAA1Q,EAAA0Q,SAAA,GAAA1Q,EAAA0Q,SAAAC,EACA,CACA,GAAAiG,GAAArT,EAAAC,QAAA2C,qBAAA8O,GAAApS,EACAgU,EAAAtT,EAAAC,QAAA2C,qBAAA8O,GAAAnS,CAEAuQ,GAAAxQ,GAAA+T,EAAArT,EAAAC,QAAA2C,qBAAAnG,GAAA6C,EACAwQ,EAAAvQ,GAAA+T,EAAAtT,EAAAC,QAAA2C,qBAAAnG,GAAA8C,EAEAuB,EAAAsV,gBAGA1E,EAAAjV,IAIA+C,KAAAwW,SAAA,GAAA1V,QAAA+W,GAAA9W,GAAA+W,WAEAtX,EAAAwW,aAsLAhX,KAAAoX,UAAA,SAAAhQ,GAEAA,EAAA2Q,YAAA,WAEA7I,GAAA,GAEA9H,EAAA4Q,UAAA,WAEA9I,GAAA,EACA5N,EAAA6T,mBAAApF,IAGA3I,EAAA6Q,SAAA,SAAAtW,EAAAC,GAIA,IAAA,GAAAyM,KAAA/M,GAAA6J,IACA,CACA7J,EAAA6J,IAAAkD,GAAA6J,iBAEA,KAAA,GAAAxF,KAAApR,GAAA6J,IAAAkD,GAAAwC,MAEA,GACAvP,EAAA6J,IAAAkD,GAAAwC,MAAA6B,GAAA/Q,GAAArC,SAAAqC,GAAAL,EAAA6J,IAAAkD,GAAAwC,MAAA6B,GAAA9Q,GAAAtC,SAAAsC,GACAN,EAAA6J,IAAAkD,GAAAwC,MAAA6B,GAAA/Q,GAAArC,SAAAsC,GAAAN,EAAA6J,IAAAkD,GAAAwC,MAAA6B,GAAA9Q,GAAAtC,SAAAqC,EACA,CACA,EAAA,SAAAwW,EAAAC,EAAAC,EAAAC,GAGAxX,OAAAsO,KAAAhH,KACAgH,KAAA,WAEAhI,EAAA0D,KAAA1D,EAAAC,UAAAgR,GAAAF,EAAA/Q,EAAAC,UAAAiR,GAAAF,IAEA9I,KAAA,WAEA,GAAAoB,GAAAtJ,EAAAC,UAAAgR,GACA1H,EAAAvJ,EAAAC,UAAAiR,EACA,OAAA5H,IAAAC,MACAD,GAAA6H,cAAAJ,GAAAlV,aAAA0N,EAAA4H,cAAAH,QADA9Q,SAAAkR,KAAA,2BAIAlX,EAAA6J,IAAAkD,GAAAwC,MAAA6B,GAAA/Q,GAAArC,QAAAE,UACA8B,EAAA6J,IAAAkD,GAAAwC,MAAA6B,GAAA9Q,GAAAtC,QAAAE,UACA8B,EAAA6J,IAAAkD,GAAAwC,MAAA6B,GAAA/Q,GAAArC,QAAAmZ,OAAAjJ,GACAlO,EAAA6J,IAAAkD,GAAAwC,MAAA6B,GAAA9Q,GAAAtC,QAAAmZ,OAAAjJ,IAGAlO,EAAA6J,IAAAkD,GAAAwC,MAAA6B,GAAA7Q,gBACAP,EAAA6J,IAAAkD,GAAAwC,MAAA6B,GAAA/Q,GAAA,KACAL,EAAA6J,IAAAkD,GAAAwC,MAAA6B,GAAA9Q,GAAA,KACAN,EAAA6J,IAAAkD,GAAAwC,MAAA6B,GAAA5Q,YAOAsF,EAAAsR,OAAA,SAAA/W,EAAAC,GAEA,GAAA+W,GAAA,KACAC,EAAA,IACA,KAAA,GAAAvK,KAAA/M,GAAA6J,IACA,CACA,IAAA,GAAAuH,KAAApR,GAAA6J,IAAAkD,GAAA2B,QAEA1O,EAAA6J,IAAAkD,GAAA2B,QAAA0C,GAAApT,SAAAqC,IAAAgX,EAAArX,EAAA6J,IAAAkD,GAAA2B,QAAA0C,IACApR,EAAA6J,IAAAkD,GAAA2B,QAAA0C,GAAApT,SAAAsC,IAAAgX,EAAAtX,EAAA6J,IAAAkD,GAAA2B,QAAA0C,GAEA,KAAA,GAAAmG,KAAAvX,GAAA6J,IAAAkD,GAAA+B,SAEA9O,EAAA6J,IAAAkD,GAAA+B,SAAAyI,GAAAvZ,SAAAqC,IAAAgX,EAAArX,EAAA6J,IAAAkD,GAAA+B,SAAAyI,IACAvX,EAAA6J,IAAAkD,GAAA+B,SAAAyI,GAAAvZ,SAAAsC,IAAAgX,EAAAtX,EAAA6J,IAAAkD,GAAA+B,SAAAyI,IAIA,GAAAC,GAAA,GAAA3X,QAAAwX,EAAAC,EAEAD,GAAAI,KAAAlI,MAAAjE,KAAAkM,GACAF,EAAAG,KAAAlI,MAAAjE,KAAAkM,GAEAH,EAAAI,KAAAzK,YAEAwK,EAAAtU,QAGA,SAAA2T,EAAAC,EAAAC,EAAAC,GAEAxX,OAAAsO,KAAAhH,KACAgH,KAAA,WAEA,GAAAsB,GAAAtJ,EAAAC,UAAAgR,GACA1H,EAAAvJ,EAAAC,UAAAiR,EACA,OAAA5H,IAAAC,MACAD,GAAA6H,cAAAJ,GAAAlV,aAAA0N,EAAA4H,cAAAH,QADA9Q,SAAAkR,KAAA,uBAGAlJ,KAAA,WAEAlI,EAAA0D,KAAA1D,EAAAC,UAAAgR,GAAAF,EAAA/Q,EAAAC,UAAAiR,GAAAF,OAGAzW,EAAAnC,UAAAoC,EAAApC,UAAAmC,EAAA8W,OAAAjJ,GAAA5N,EAAA6W,OAAAjJ,KAGApI,EAAA4R,SAAA,SAAA7R,IAEA,SAAAyE,EAAA3E,GAEAnG,OAAAsO,KAAAhH,KACAgH,KAAA,WACA5O,EAAA4G,QAAAyE,MAAAD,EAAAzE,EAAAoI,UAAAtI,IAEAqI,KAAA,WACA9O,EAAA4G,QAAAiI,SAAApI,GAAA,OAGAE,EAAAgI,QAAAhI,EAAAqI,GAEA,KAAA,GAAAnB,KAAA/M,GAAA6J,IAEA7J,EAAA6J,IAAAkD,GAAAlH,IAAAA,IAEA7F,EAAA6J,IAAAkD,GAAA4K,iBACA3X,EAAA6J,IAAAkD,GAAAvM,SACAR,EAAA6J,IAAA4H,OAAA1E,EAAA,KAKAjH,EAAA8R,MAAA,SAAA/R,GAEArJ,EAAA,UAAAkF,OACA,IAAAiM,GAAA,GAAAkK,MAAA7X,EAAAwM,MAAA3G,EAAArG,OAAAC,GAAAmC,SAAAwH,SAAA5K,EAAAgB,OAAAC,GAAAmC,SAAAwH,SAAA3K,EAAA,IAAA,GAAAoH,EAAAuF,KACApL,GAAA6J,IAAAyB,KAAAqC,GACAA,EAAAuC,UAAA,EAEAxC,EAAAC,KAIAjP,KAAAyQ,WAAA,SAAA2I,EAAAC,GAEAD,EAAAjS,GAAAoI,UAAAjF,MAAA+O,EACAD,EAAAjS,GAAAuF,KAAA2M,EACAD,EAAA7K,OAAA+K,SAAAD,IAGArZ,KAAAuZ,kBAAA,SAAAF,GAEA3H,GAAA1R,KAAAyQ,WAAAiB,EAAA2H,IAGArZ,KAAAiX,iBAAA,WAEA,IAAA/H,EACA,IAAA,GAAAb,KAAA/M,GAAA6J,IAEA7J,EAAA6J,IAAAkD,GAAAlH,GAAAoI,UAAAO,WAAAxO,EAAA6J,IAAAkD,GAAAlH,GAAAoI,UAAAO,SAAA,GAEAxO,EAAA6J,IAAAkD,GAAAlH,GAAAoI,UAAAO,UAAAC,EAEAzO,EAAA6J,IAAAkD,GAAA7J,OAIAlD,EAAA6J,IAAAkD,GAAAtL,QAKA/C,KAAAwZ,mBAAA,WAEA,MAAAzJ,IAGA/P,KAAAmV,mBAAA,SAAA5W,GAEA,IAAAA,EAAAT,EAAA,wBAAAiF,OACAjF,EAAA,wBAAA0G,OAEAuL,EAAAxR,EACA+C,EAAA2V,mBAEAnZ,EAAA,UAAAkF,SAIAhD,KAAAkV,sBAAA,WAEA1U,EAAAgW,WAAAC,OAEA,IAAAgD,IAAA,EACAC,EAAA,CACA,IAAAjM,EAAAtE,OAAA,EAEA,IAAA,GAAAuJ,GAAA,EAAAA,EAAAjF,EAAAtE,OAAAuJ,IAEA,IAAA,GAAArE,GAAA,EAAAA,EAAAZ,EAAAiF,GAAA1C,QAAA7G,OAAAkF,IAEAZ,EAAAiF,GAAA1C,QAAA3B,GAAA/O,QAAAH,cAAAsO,EAAAiF,GAAA1C,QAAA3B,GAAA/O,QAAAqa,OAEA,IAAAD,IAEAD,GAAAhM,EAAAiF,GAAA1C,QAAA3B,GAAA/O,QAAAqa,KAAAC,gBAGAnM,EAAAiF,GAAA1C,QAAA3B,GAAA/O,QAAAqa,KAAAC,eAAAH,EACAnY,EAAAkV,SAAAqD,QAAApM,EAAAiF,GAAA1C,QAAA3B,GAAA/O,QAAAqa,MACAD,IAKAD,IACAjZ,EAAAgW,WAAAC,SAMAzW,KAAAiV,qBAAA,WAEA,GAAAxH,EAAAtE,OAAA,EACA,CACA,GAAAuJ,GAAA,EACAoH,EAAA,CACA,KAAApH,IAAAjF,GAAAqM,GAAArM,EAAAiF,GAAAvL,GAAAoI,UAAAM,UAAA/P,CAEA,IAAAia,GAAAD,EAAArM,EAAAtE,MAEA,KAAAuJ,IAAAjF,GAAAA,EAAAiF,GAAA9C,OAAAmK,EAAAtM,EAAAiF,GAAAvL,GAAAoI,UAAAM,UAAA9P,KAIAC,KAAAgV,oBAAA,WAEA,GAAAvH,EAAAtE,OAAA,EACA,CACA,GAAAuJ,GAAA,EACAoH,EAAA,CACA,KAAApH,IAAAjF,GACAqM,GAAArM,EAAAiF,GAAAvL,GAAAoI,UAAAM,UAAA9P,CAEA,IAAAga,GAAAD,EAAArM,EAAAtE,MAEA,KAAAuJ,IAAAjF,GACAA,EAAAiF,GAAA9C,OAAAnC,EAAAiF,GAAAvL,GAAAoI,UAAAM,UAAA/P,EAAAia,KAKA/Z,KAAAkU,kBAAA,WAEA,IAAA,GAAA7F,KAAAZ,GACAjN,EAAAC,QAAA2G,MAAAiI,SAAA5B,EAAAY,GAAAlH,GAAAqI,IAAA,IAGAxP,KAAA+O,iBAAA,SAAAqK,GAEA,IAAA,GAAA/K,KAAAZ,GAEA,GAAAA,EAAAY,IAAA+K,EAGA,WADA3L,GAAAsF,OAAA1E,EAAA,IAMArO,KAAAga,kBAAA,SAAAxK,GAEA,IAAA,GAAAnB,KAAA7N,GAAAC,QAAA0K,IAEA,GAAA3K,EAAAC,QAAA0K,IAAAkD,GAAAlH,GAAAqI,IAAAA,EAKA,MAHAhP,GAAAC,QAAAoN,cAAA,MACArN,EAAAC,QAAAoN,cAAArN,EAAAC,QAAA0K,IAAAkD,QACA7N,GAAAC,QAAA4Q,aAAA7Q,EAAAC,QAAA0K,IAAAkD,GAAAlH,KAMAnH,KAAAuR,kBAAA,SAAA/B,GAEA,IAAA,GAAAnB,KAAA7N,GAAAC,QAAA0K,IAEA,GAAA3K,EAAAC,QAAA0K,IAAAkD,GAAAlH,GAAAqI,IAAAA,EAKA,MAHAlO,GAAAuN,cAAArO,EAAAC,QAAA0K,IAAAkD,QACA/G,SAAAC,IAAA,yBAOAvH,KAAA6N,cAAA,SAAAuL,GAEA,GAAA,OAAAA,EAWA9X,EAAAuN,cAAAuK,GAEAA,EAAAtK,aAAA,OAbA,CAEArB,EAAAtE,OAAA,CACA,KAAA,GAAAkF,KAAA7N,GAAAC,QAAA0K,IAEA3K,EAAAC,QAAA0K,IAAAkD,GAAAS,aAAA,GACAtO,EAAAC,QAAA0K,IAAAkD,GAAA4K,mBAUAjZ,KAAA6O,cAAA,SAAAuK,GAEA,gBAAAA,EAAAjS,GAAAgI,SACA7N,EAAAwV,qBAAAsC,EAAAjS,GAAA8S,QAAA9b,KAEAib,EAAA7K,OAAAO,aAAA,EACA,KAAA,GAAAT,KAAAZ,GAAA,GAAAA,EAAAY,IAAA+K,EAAA,MACA3L,GAAAb,KAAAwM,IAGApZ,KAAAka,wBAAA,WAEA,IAAA,GAAA7L,KAAAZ,GACAA,EAAAY,GAAA8L,kBAGAna,KAAAoa,gBAAA,SAAAC,EAAAC,EAAAtN,EAAAC,EAAAhQ,GAEA,IAAA,GAAAoR,KAAAZ,GACAA,EAAAY,GAAAkM,OAAAF,EAAAC,EAAAtN,EAAAC,EAAAhQ,IAGA+C,KAAAwa,eAAA,SAAAhL,GAEAlO,EAAA+P,aAAA7Q,EAAA4G,QAAAC,UAAAmI,KAGAxP,KAAA4U,kBAAA,SAAAzN,GAEA,GAAAsT,KAEAA,GAAA/N,KAAAuF,EAAAvF,KACA+N,EAAAC,SAAAla,EAAA4G,QAAAsT,QAEA,IAAAC,GAAA,CACA,KAAA,GAAAtM,KAAA/M,GAAA6J,IAEA7J,EAAA6J,IAAAkD,GAAAC,YAAAqM,GAGA,IAAA5T,GAAAjG,OAAAC,GAAAmK,iBAAA,kBAAA0P,QAAAH,EACAI,OAEAC,OAAAta,EAAA4G,QAAA+D,IAAAhC,OACAwR,cAAAA,EACAI,eAAAjd,EAAA,gBAAAqL,SAMArL,GAAA,YAAAiJ,KAAAA,IAGA/G,KAAAgb,kBAAA,WAEA,GAAAC,GAAAnd,EAAA,yBAAAK,MACA+c,EAAApd,EAAA,2BAAAK,KAEA8T,GAAAvF,KAAAuO,EACAza,EAAA4G,QAAAsT,SAAAla,EAAA4G,QAAAsT,aACAla,EAAA4G,QAAAsT,SAAAS,SAAAD,GAuBAlb,KAAAqR,aAAA,SAAAlK,GAKA,GAFAuK,IAAAA,EAAA0J,eAAA,MAEA9Z,EAAAkV,SACA,CACA,GAAA6E,IAAA,CACA,KAAA,GAAAhN,KAAAlH,GAAA6I,QAEA7I,EAAA6I,QAAA3B,GAAAlP,eAEAmC,EAAAkV,SAAAqD,QAAA1S,EAAA6I,QAAA3B,GAAAsL,MAAAjN,KAAAvF,EAAA6I,QAAA3B,GAAA3B,OACA2O,GAAA,EAIAA,IAAA/Z,EAAAkV,SAAAqD,QAAA,MAIA,IAAA,GAAAyB,KAAAtb,MAAAmL,IACAnL,KAAAmL,IAAAmQ,GAAAnU,IAAAA,IACAuK,EAAA1R,KAAAmL,IAAAmQ,GAEA5J,GAAAvK,GAAAiU,eAAA3J,EAEAK,KACAyJ,kBACAC,mBAEA,IAAAzU,GAAAjG,OAAAC,GAAAmK,iBAAA,kBAAA/D,GAAAA,IACAsU,EAAA3d,EAAA,gBAAAiJ,OACA2U,EAAAnT,WAAAoT,QAAAF,EAEA1U,IAAAjG,OAAAC,GAAAmK,iBAAA,qBAAAZ,MAAA,MAEA,KAAA,GAAA+D,KAAAlH,GAAA6I,QAEA7I,EAAA6I,QAAA3B,GAAA0D,QAAA,MAAA1D,EACAkN,eAAA3O,KAAAzF,EAAA6I,QAAA3B,IAEAlH,EAAA6I,QAAA3B,GAAAkB,UAAAqM,WAAAJ,iBAAA5O,KAAAzF,EAAA6I,QAAA3B,KACAlH,EAAA6I,QAAA3B,GAAAjP,YAAA+H,EAAA6I,QAAA3B,GAAAlP,eAAA2S,EAAAlF,KAAAzF,EAAA6I,QAAA3B,IAEAtH,GAAA2U,GAAA1c,KAAAmI,EAAA6I,QAAA3B,GAAAwN,OAAA,KAAAC,QAAAzN,EAAA0N,SAAA,EAAA5U,GAAAA,GAGAJ,IAAAjG,OAAAC,GAAAmK,iBAAA,qBAAAZ,MAAA,MAAAnD,GAAAA,GAEA,KAAA,GAAAgJ,KAAAhJ,GAAAiJ,SAEAjJ,EAAAiJ,SAAAD,GAAA6L,WAAAC,qBAEA9U,EAAAiJ,SAAAD,GAAA4B,QAAA,OAAA5B,EACA2B,EAAAlF,KAAAzF,EAAAiJ,SAAAD,KAGApJ,GAAA2U,GAAA1c,KAAAmI,EAAAiJ,SAAAD,GAAA0L,OAAA,MAAAC,QAAA3L,EAAA4L,SAAA,EAAA5U,GAAAA,GAGAJ,IAAAjG,OAAAC,GAAAmK,iBAAA,kBAAA/D,GAAAA,IAEArJ,EAAA,YAAAiJ,KAAAA,GACA0K,GAEA,KAAA,GAAAyK,KAAA/U,GAAAiJ,UAEA,SAAA+L,GAEAre,EAAA,mBAAAqe,GAAA/R,GAAA,QAAA,SAAAnN,GAEAkK,EAAAiJ,SAAA+L,GAAAC,cACA9a,EAAA+P,aAAAlK,MAEA+U,EAGA,KAAA,GAAAG,KAAAlV,GAAA6I,SAEA,SAAAmM,GAEAhV,EAAA6I,QAAAmM,GAAAhd,cAAArB,EAAA,gBAAAqe,GAAAnU,SAAA,uBACAb,EAAA6I,QAAAmM,GAAAhd,cAAAgI,EAAA6I,QAAAmM,GAAAxC,KAAAC,gBAAA9b,EAAA,iBAAAqe,GAAAnU,SAAA,uBAEAlK,EAAA,iBAAAqe,GAAA/R,GAAA,QAAA,SAAAnN,GAEAkK,EAAA6I,QAAAmM,GAAAhd,eAEAgI,EAAA6I,QAAAmM,GAAAxC,KAAAC,gBAAAzS,EAAA6I,QAAAmM,GAAAxC,KAAAC,eACA9b,EAAA,iBAAAqe,GAAAG,YAAA,uBACAhb,EAAAkV,SAAAqD,QAAA1S,EAAA6I,QAAAmM,GAAAxC,MAAAjN,KAAAvF,EAAA6I,QAAAmM,GAAAzP,KAAA6P,aAAAre,WAAAJ,EAAA,YAAAqe,GAAAhe,YAIAL,EAAA,gBAAAqe,GAAA/R,GAAA,QAAA,SAAAnN,GAEA,GAAAa,EAAA,gBAAAqe,GAAAK,SAAA,uBACA,CAEA,GAAAre,GAAAmD,EAAAkV,SAAAiG,WAAAtV,EAAA6I,QAAAmM,GAAAxC,KASA,OARAxS,GAAA6I,QAAAmM,GAAAO,aAAA,GAEApb,EAAAkV,SAAAqD,QAAA,MAEA/b,EAAA,gBAAAqe,GAAAlU,YAAA,uBACAnK,EAAA,YAAAqe,GAAAhe,IAAAA,GACAL,EAAA,YAAAqe,GAAA3d,QAAA,aACAV,GAAA,YAAAqe,GAAAnZ,QAIAlF,EAAA,gBAAAqe,GAAAnU,SAAA,uBAEAb,EAAA6I,QAAAmM,GAAAQ,aACArb,EAAAkV,SAAAqD,QAAA1S,EAAA6I,QAAAmM,GAAAxC,MAAAjN,KAAAvF,EAAA6I,QAAAmM,GAAAzP,KAAA6P,aAAAre,WAAAJ,EAAA,YAAAqe,GAAAhe,YAEAke,EAGA,KAAA,GAAAO,KAAAzV,GAAA6I,SAEA,SAAAmM,GAEAre,EAAA,kBAAAqe,GAAA/R,GAAA,QAAA,SAAAnN,GAEAkK,EAAA6I,QAAAmM,GAAAC,cACA9a,EAAA+P,aAAAlK,MAEAyV,EAGA,KAAA,GAAAC,KAAA1V,GAAA6I,SAEA,SAAAmM,GAEAre,EAAA,YAAAqe,GAAA/R,GAAA,QAAA,SAAAnN,GAEA,GAAAgB,GAAA,GAAAH,EAAA,YAAAqe,GAAAhe,KAEA,KAAAgJ,EAAA6I,QAAAmM,GAAA5M,UAAAW,MAAA,UAAA/I,EAAA6I,QAAAmM,GAAA5M,UAAAW,KACA,CACA,GAAA9K,MAAAnH,IAAA,KAAAA,EAGA,WADAH,GAAA,YAAAqe,GAAAnU,SAAA,UAKAlK,GAAA,YAAAqe,GAAAlU,YAAA,WAGA,GAAA,OAAAd,EAAA6I,QAAAmM,GAAA5M,UAAAW,KACA,CACA,GAAA9K,MAAAnH,IAAA,KAAAA,EAGA,WADAH,GAAA,YAAAqe,GAAAnU,SAAA,UAKAlK,GAAA,YAAAqe,GAAAlU,YAAA,WACAhK,EAAAmV,SAAAnV,EAAA,IAIA,QAAAkJ,EAAA6I,QAAAmM,GAAA5M,UAAAU,UAEA,QAAAhS,GAAA,SAAAA,IAEAA,GAAA,EACAH,EAAA,YAAAqe,GAAAhe,IAAA,UAEAF,EAAA,QAAAA,GAAA,GACA,GAGAkJ,EAAA6I,QAAAmM,GAAAhe,IAAAF,EACAkJ,EAAA6I,QAAAmM,GAAAhd,eAEAmI,QAAAC,IAAA,kBAEA/G,EAAAgW,WAAAsG,yBAGAD,EAGA,KAAA,GAAAE,KAAAxB,gBACA,CACA,GAAAjc,GAAAic,eAAAwB,IACA,SAAAzd,GAEA,GAAAkQ,GAAA,mBAAAlQ,EAAAyS,OAEAjU,GAAA0R,GAAApF,GAAA,UAAA,WAEA9K,EAAAH,cAAAqB,EAAAgW,WAAAqD,QAAAva,EAAAqa,MAAAjN,KAAApN,EAAAoN,UAGApN,GAGA,IAAA,GAAA0d,KAAAxB,kBACA,CACA,GAAAlc,GAAAkc,iBAAAwB,IACA,SAAA1d,GAEA,GAAAkQ,GAAA,mBAAAlQ,EAAAyS,QACAkL,EAAA9Y,KAAAmE,MAAA,IAAAxK,EAAA0R,GAAAiJ,SAAAyE,KAAA,MAAAC,KAAA,eAAAhf,OACAif,EAAAjZ,KAAAmE,MAAA,IAAAxK,EAAA0R,GAAAiJ,SAAAA,SAAAyE,KAAA,MAAAC,KAAA,eAAAhf,OACAkf,EAAAlZ,KAAAmE,MAAA,IAAAxK,EAAA0R,GAAAiJ,SAAAA,SAAAyE,KAAA,MAAAA,KAAA,MAAAC,KAAA,eAAAhf,MAEAL,GAAA0R,GAAA8N,IAAA,mBAAA,OAAAL,EAAA,IAAAG,EAAA,IAAAC,EAAA,KAEAvf,EAAA0R,GAAA+N,aAEAC,SAAA,EACAC,OAAA,aACAC,SAAA,UACAC,eAAA,SAAAC,GAEA,GAAAC,GAAA7d,KAAA8d,MAAAD,MAEA/f,GAAA0R,GAAAiJ,SAAAyE,KAAA,MAAAC,KAAA,eAAAhf,IAAA0f,EAAAE,IAAA1V,GAAA7J,QAAA,SACAV,EAAA0R,GAAAiJ,SAAAA,SAAAyE,KAAA,MAAAC,KAAA,eAAAhf,IAAA0f,EAAAE,IAAAC,GAAAxf,QAAA,SACAV,EAAA0R,GAAAiJ,SAAAA,SAAAyE,KAAA,MAAAA,KAAA,MAAAC,KAAA,eAAAhf,IAAA0f,EAAAE,IAAA9Q,GAAAzO,QAAA,SAEAV,EAAA0R,GAAAiJ,SAAAyE,KAAA,MAAAC,KAAA,eAAAhf,IAAA0f,EAAAE,IAAA1V,GAAA7J,QAAA,SACAV,EAAA0R,GAAAiJ,SAAAA,SAAAyE,KAAA,MAAAC,KAAA,eAAAhf,IAAA0f,EAAAE,IAAAC,GAAAxf,QAAA,SACAV,EAAA0R,GAAAiJ,SAAAA,SAAAyE,KAAA,MAAAA,KAAA,MAAAC,KAAA,eAAAhf,IAAA0f,EAAAE,IAAA9Q,GAAAzO,QAAA,SAEAyf,OACA5V,EAAAlE,KAAAmE,MAAA,IAAAuV,EAAAE,IAAA1V,GAAA2V,EAAA7Z,KAAAmE,MAAA,IAAAuV,EAAAE,IAAAC,GAAA/Q,EAAA9I,KAAAmE,MAAA,IAAAuV,EAAAE,IAAA9Q,GACAuD,EAAAqN,EAAAK,IAAA1N,EAAAiK,EAAAoD,EAAAK,IAAAzD,EAAAxc,EAAA4f,EAAAK,IAAAjgB,EACAkgB,IAAAne,KAAA8d,MAAAD,OAAAM,KAGArgB,EAAA,QAAA,aAAAsgB,KAAA,WACApe,KAAAqT,MAAA4K,MAAAje,KAAAqe,UAAAC,OAAA,OAGAC,cAAA,SAAAC,GAEA,GAAAC,GAAAze,KAAA8d,MACAP,EAAAvd,IAEAwe,GAAAE,QAAA,oTAQAtU,GAAA,SAAA,QAAA,SAAAnN;AACA,GAAAoW,GAAArT,KAAAqT,MACAgL,EAAAre,KAAAqe,UACAnO,EAAAmO,EAAAM,MAAA,KAAA,GACAb,IAEAA,GAAA5N,GAAAmD,EACAoL,EAAAG,SAAA,QAAA1O,EAAAmD,EAAAyK,EACA,QAAA5N,EAAA,MAAA,YAAA2O,KAAA3O,GAAA,MAAA,OACAqN,EAAAuB,SACA9e,KAAA+e,aAKAzf,KAuBAU,KAAAoD,qBAAA,SAAA4b,GAEA,GAAAC,GAAAnhB,EAAA,cAAA,GAAAohB,cAEAD,GAAAA,EAAAlV,SACA,IAAAoV,GAAArhB,EAAA,cAAA,GAAAshB,gBAEAD,GAAArf,EAAAkf,EAAAK,QACAF,EAAApf,EAAAif,EAAAM,QAEAH,EAAAA,EAAAI,gBAAAN,EAEA,IAAArB,IAAA9d,EAAAqf,EAAArf,EAAAC,EAAAof,EAAApf,EACA,OAAA6d,IAGA5d,KAAAwf,WAAA,SAAAha,EAAAia,EAAAnV,GAEA,GACAnD,GADAuY,GAAApV,MAAAA,EAAAuF,WAAA/P,EAAAwQ,EAAAxQ,EAAAwQ,EAAAC,EAAA,EAAAxQ,EAAAuQ,EAAAvQ,EAAAuQ,EAAAE,EAAA,GAEA,SAAAiP,GAEAtY,EAAA3G,EAAA4G,QAAAyE,MAAA,wBAAA6T,GACAvY,EAAAK,QAAA,QAAArJ,IAAAqH,GAGA,QAAAia,GAAA,QAAAA,GAEAtY,EAAA3G,EAAA4G,QAAAyE,MAAA,iBAAA6T,GACAvY,EAAAK,QAAA,QAAArJ,IAAAqH,GAGA,QAAAia,GAAA,QAAAA,GAEAtY,EAAA3G,EAAA4G,QAAAyE,MAAA,2BAAA6T,GACAvY,EAAAK,QAAA,QAAArJ,IAAAqH,GAIA1E,OAAAC,GAAA2B,cAAA,sBAIAmP,IP7kDA,IAAA/Q,QAAAA,UACAA,QAAAC,GAAAD,OAAAC,OAmOAoW,QAAA5Z,GAAAoiB,SAAA,SAAAC,GAAA5f,KAAA4f,MAAAA,GACAzI,QAAA5Z,GAAAsiB,SAAA,WAAA,MAAA7f,MAAA4f,MAEA,IAAAE,QAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAjR,GA6CA,QAAA5M,KAEA8d,EAAAzI,aAAA,EAGA,QAAA0I,KAEAD,EAAAzI,aAAA,EAlDA,GAAA2I,IAAA,EACAX,EAAAzI,QAAArN,GAAA0W,MACAhJ,EAAA,KACAiJ,EAAA,KACAlQ,EAAA2P,EACA1P,EAAA2P,EACArgB,EAAAkgB,EACAjgB,EAAAkgB,EACAI,EAAAN,EACAzV,EAAA8V,CAEApgB,MAAAwO,QAAA,WAEA,MAAAgJ,IAGAxX,KAAAiC,UAAA,WAEA,MAAA,QAAAwe,GAGAzgB,KAAA0gB,SAAA,WAEA1gB,KAAAiC,cAEA2d,EAAAnJ,QACAe,EAAA1V,SACA2e,EAAA3e,SACA2e,EAAA,KACAjJ,EAAA,OAGAxX,KAAA2gB,SAAA,WAEA,MAAApQ,IAGAvQ,KAAA4gB,SAAA,SAAAV,GAEA3P,EAAA2P,EACAlgB,KAAAiC,aAAAuV,EAAA5W,MAAAqN,MAAAsC,IAaA,IAAAsQ,GAAA,SAAA/gB,EAAAC,EAAA2X,GAEA5Z,EAAA,UAAAkF,QACAqd,EAAAE,eAEAF,EAAAS,iBACApJ,EAAApZ,UAAAkC,IAAAC,QAAAoN,cAAA,MACArN,IAAAC,QAAAoN,cAAAwS,KAGAriB,EAAA,SAAAqc,EAAAC,EAAAtN,EAAAC,EAAAhQ,GAEAuD,IAAAC,QAAA2Z,gBAAAC,EAAAC,EAAAtN,EAAAC,EAAAhQ,IAGAU,EAAA,WAEA6C,IAAAC,QAAAyZ,0BACA1Z,IAAAC,QAAA4Q,aAAAgP,EAAAlZ,IAGAnH,MAAA+gB,MAAA,WAEA/gB,KAAAiC,cAEAuV,EAAAhX,IAAAC,QAAAC,WAAA6C,KAAA,EAAA,EAAAgN,EAAAC,GAAA5P,MAEAyB,KAAAvB,OAAAC,GAAAC,SAAAggB,UACAngB,OAAAC,OAAAC,GAAAC,SAAAigB,iBACA/f,eAAA,EACAggB,OAAA,SAEAT,EAAAjgB,IAAAC,QAAAC,WAAAygB,KAAA,EAAA5Q,EAAA,EAAA,EAAAC,EAAA,EAAA,EAAAlG,GACAxM,EAAA2iB,EAAA5d,MAAAya,KAAA8D,iBAAA,SAEA5J,EAAA6J,KAAArjB,EAAA6iB,EAAAljB,GACA6Z,EAAAjV,MAAAA,EAAA+d,GAEA9I,EAAA3U,KAAAye,WAAA,SAAA5J,GAEAlX,IAAAC,QAAAoN,cAAA,MACA,gBAAAwS,EAAAlZ,GAAAgI,SACA3O,IAAAC,QAAA0U,mBAAAkL,EAAAlZ,GAAA8S,QAAA9b,MAGAqZ,EAAA+J,UAAA,SAAA7J,GAEA2I,EAAA1I,YAAA,GAGA,gBAAAxI,GAEAqI,EAAA5W,MACAM,eAAA,EACAL,OAAAC,OAAAC,GAAAC,SAAAigB,mBAIArB,EAAAhT,KAAA4K,EAAAiJ,KAGAzgB,KAAA0E,WAAA,SAAAC,GAEA3E,KAAAiC,aACAuV,EAAA5W,KAAA+D,GAAAyJ,eAAA,IACAA,eAAA,MAGApO,KAAA8O,YAAA,SAAA0S,GAGAjB,EAAAiB,EAEAxhB,KAAAiC,aACAuV,EAAA5W,KAAA4gB,GAAAnf,KAAAvB,OAAAC,GAAAC,SAAAygB,oBACApf,KAAAvB,OAAAC,GAAAC,SAAAggB,aAGAhhB,KAAAsZ,SAAA,SAAAD,GAEA/O,EAAA+O,EACAoH,GAAAA,EAAA7f,MAAAugB,KAAA7W,KAGAtK,KAAA6f,SAAA,WAEA,MAAAD,IAIAA,EAAA8B,UAAA,IAAA5hB,EAAA,IAAAC,IAGAoZ,KAAA,SAAArL,EAAA3G,EAAArH,EAAAC,EAAAwQ,EAAAC,EAAAhO,GAEA,GAAAlB,GAAAtB,IACAA,MAAA6Q,SACA7Q,KAAAgQ,WACAhQ,KAAAoQ,WACA,IAAAuR,IAAA,CACA3hB,MAAAmH,GAAAA,CACA,IAAAya,IAAA,EAGAC,EAAA,GACAC,EAAA,GACAC,EAAA,GAGAC,EAAA,EACAC,EAAA,CACAjiB,MAAA4X,aAAA,EAEA5X,KAAA8B,OAAA,WAEA9B,KAAAuO,OAAAsR,WAAA/d,SACA9B,KAAAuO,OAAAmS,YAGA1gB,KAAAoR,YAAA,WAEA,MAAAjK,GAAAoI,UAAAO,SACA3I,EAAAoI,UAAAO,SADA,GAIA9P,KAAAugB,WAAA,WAEA,MAAAqB,IAEA5hB,KAAA+C,KAAA,WAEA4e,GAAA,EACA3hB,KAAAuO,OAAAmS,WACA1gB,KAAAuO,OAAAsR,WAAA9c,MAEA,IAAA2P,GAAA,CACA,KAAAA,IAAApR,GAAA0O,QAAA1O,EAAA0O,QAAA0C,GAAAgO,UACA,KAAAhO,IAAApR,GAAA8O,SAAA9O,EAAA8O,SAAAsC,GAAAgO,UAEA,KAAAhO,IAAApR,GAAAuP,MAEAvP,EAAAuP,MAAA6B,GAAA3P,OACAzB,EAAAuP,MAAA6B,GAAA7Q,iBAIA7B,KAAAwE,KAAA,WAEAmd,GAAA,EACA3hB,KAAAuO,OAAAwS,QACA/gB,KAAAuO,OAAAsR,WAAArb,MAGA,IAAAkO,GAAA,CACA,KAAAA,IAAApR,GAAA0O,QAAA1O,EAAA0O,QAAA0C,GAAAqO,MAAA/gB,KAAAuO,OAAAsR,WACA,KAAAnN,IAAApR,GAAA8O,SAAA9O,EAAA8O,SAAAsC,GAAAqO,MAAA/gB,KAAAuO,OAAAsR,WAIA,KAAAnN,IAAApR,GAAAuP,MAAAvP,EAAAuP,MAAA6B,GAAAlO,MAEAlD,GAAAsO,UAGA5P,KAAAsO,SAAA,WAEA,MAAAqT,IAGA3hB,KAAAkY,gBAAA,WAIA,IAFA,GAAArL,IAAA,EAEAA,GACA,CACAA,GAAA,CACA,KAAA,GAAA6F,KAAApR,GAAAuP,MAEA,OAAAvP,EAAAuP,MAAA6B,GAAA/Q,KAEAL,EAAAuP,MAAAkC,OAAAL,EAAA,GACA7F,GAAA,KAMA7M,KAAA8gB,eAAA,WAEA,IAAA9gB,KAAAsO,WAAA,CACAhN,EAAA4W,iBACA,KAAA,GAAAxF,KAAApR,GAAAuP,MAAAvP,EAAAuP,MAAA6B,GAAA1Q,kBAGAhC,KAAAiZ,eAAA,WAEA3X,EAAA4W,iBACA,KAAA,GAAAxF,KAAApR,GAAAuP,MAAAvP,EAAAuP,MAAA6B,GAAA7Q,iBAGA7B,KAAAma,eAAA,WAEArZ,OAAAsO,KAAAhH,KACAgH,KAAA,WAEA,IAEA,GAAA8S,GAAAxZ,KAAA+J,MAAAoP,EACAvgB,GAAAsO,OAAAsS,EAAArS,UAAA/P,EAAAoiB,EAAArS,UAAA9P,GACA,MAAA9C,MAEAqS,KAAA,eAKAwS,EAAA,GACAC,EAAA,GACAzgB,EAAAqW,YAAA,GAGA3X,KAAA4P,OAAA,SAAA9P,EAAAC,GAEAmF,SAAApF,KAEAkiB,EAAAliB,EACAmiB,EAAAliB,GAGAuB,EAAAiN,OAAAsR,YAEAve,EAAAiN,OAAAsR,WAAA6B,UAAA,IAAAM,EAAA,IAAAC,GAEA3gB,EAAA6F,GAAAoI,UAAAM,WAAA/P,EAAAkiB,EAAAjiB,EAAAkiB,EAEA,KAAA,GAAAvP,KAAApR,GAAAuP,MACAvP,EAAAuP,MAAA6B,GAAAvS,UAGAH,KAAAua,OAAA,SAAAF,EAAAC,EAAAtN,EAAAC,EAAAhQ,GAEA,GAAA,GAAAA,EAAAsB,OACA,GAAAtB,EAAAsB,MAAA,CAEAtB,EAAAT,WAAAS,EAEA,IAAA0N,GAAAnK,IAAAC,QAAA2C,qBAAAnG,EAEAqE,GAAA6F,GAAAoI,YAEAjO,EAAA6F,GAAAoI,aACAjO,EAAA6F,GAAAoI,UAAAM,WAAA/P,EAAA6K,EAAA7K,EAAAC,EAAA4K,EAAA5K,IAGA,IAAA+hB,GAAAxgB,EAAA6F,GAAAoI,UAAAM,YAEAgS,EAAAnZ,KAAAC,UAAArH,EAAA6F,GAAAoI,WACAuS,EAAAnX,EAAA7K,EAAAwB,EAAA6F,GAAAoI,UAAAM,UAAA/P,EACAiiB,EAAApX,EAAA5K,EAAAuB,EAAA6F,GAAAoI,UAAAM,UAAA9P,GAGA4K,EAAA7K,EAAA6K,EAAA7K,EAAAgiB,EACAnX,EAAA5K,EAAA4K,EAAA5K,EAAAgiB,CACA,IAAAI,GAAA,GACAC,EAAAzX,EAAA7K,EAAA,GAAAqiB,CACAC,GAAA,GAAAD,EAAAC,IAAAzX,EAAA7K,GAAAsiB,GACA,EAAAA,GAAAA,GAAAD,IAAAxX,EAAA7K,GAAAsiB,GAEAA,EAAAzX,EAAA5K,EAAA,GAAAoiB,EACAC,EAAA,GAAAD,EAAAC,IAAAzX,EAAA5K,GAAAqiB,GACA,EAAAA,GAAAA,GAAAD,IAAAxX,EAAA5K,GAAAqiB,GAQA9gB,EAAAsO,OAAAjF,EAAA7K,EAAA6K,EAAA5K,GACAuB,EAAAqW,YAAA,IAGA3X,KAAAuO,OAAA,GAAAuR,QAAA9f,KAAAF,EAAAC,EAAAwQ,EAAAC,EAAAhO,EAAAlB,EAAA6F,GAAAgI,SAEAnP,KAAA0E,WAAA,SAAA2d,GAEAriB,KAAAmH,GAAAxC,QAAA0d,EACAriB,KAAAuO,OAAA7J,WAAA2d,EAEA,KAAA,GAAAhU,GAAA,EAAAA,EAAArO,KAAA6Q,MAAA1H,OAAAkF,IAEArO,KAAA6Q,MAAAxC,GAAA3J,WAAA2d,IAKAriB,KAAA8O,YAAA,SAAA0S,GAEAI,EAAAJ,EACAA,EAAAlgB,EAAAwf,iBACAxf,EAAA2X,iBACA3X,EAAAqW,YAAA,EACA3X,KAAAuO,OAAAO,YAAA0S,IAIAxhB,KAAA2P,QAAA,SAAA2S,EAAAhjB,GAEA,GAAAijB,GAAAD,EAEAE,EAAAxiB,KAAAgQ,QAAA7G,MACAoZ,IAAAlS,eAAAmS,EAAAxiB,KAAAoQ,SAAAjH,OAGA,IAAAoH,IAAAzP,OAAAC,GAAAC,SAAAmB,SAAArB,OAAAC,GAAAC,SAAAyhB,aAAAD,CACAlhB,GAAAiN,OAAAoS,WAAApQ,EAAAzP,OAAAC,GAAAC,SAAAmB,UAAAb,EAAAiN,OAAAqS,SAAArQ,EAAAzP,OAAAC,GAAAC,SAAAmB,SAEA,IAAAnD,GAAA,GAAA8B,QAAAC,GAAA2hB,KAAApjB,EAEAN,GAAAC,UAAAsjB,EACAvjB,EAAAmI,GAAA7F,EAAA6F,GACAnI,EAAA+Z,KAAAzX,EACAtC,EAAAwjB,UAAAA,EAGAxiB,KAAAuO,OAAAC,WAAAxP,EAAA+hB,MAAA/gB,KAAAuO,OAAAsR,YAKA0C,GAAAlS,aAAArQ,KAAAoQ,SAAAxD,KAAA5N,GACAgB,KAAAgQ,QAAApD,KAAA5N,IQnmBA8B,QAAAC,GAAA2hB,KAAA,SAAApjB,GAaA,QAAAqjB,KAEA,IAAA,GAAAtU,GAAA,EAAAA,EAAA/M,EAAAyX,KAAAlI,MAAA1H,OAAAkF,KACA/M,EAAAyX,KAAAlI,MAAAxC,GAAA1M,GAAArC,SAAAgC,EAAAhC,SAAAgC,EAAAyX,KAAAlI,MAAAxC,GAAAzM,GAAAtC,SAAAgC,EAAAhC,UACAgC,EAAAyX,KAAAlI,MAAAxC,GAAA3J,WAAApD,EAAAhC,QAAAsjB,oBAGA,QAAAC,GAAA/iB,EAAAC,EAAAtD,GAEAqB,EAAA,UAAAkF,QACAyB,IAEAzE,KAAA8iB,OAAA9iB,KAAA0D,OAAAzG,EAAA+C,KAAAwD,MAAA1D,EACAE,KAAA+iB,OAAA/iB,KAAA0D,OAAAE,EAAA5D,KAAAwD,MAAAzD,GAIA,QAAAijB,GAAA3I,EAAAC,EAAAtN,EAAAC,EAAAxQ,GAEA,GAAA,GAAAA,EAAA8B,OACA,GAAA9B,EAAA8B,QAEA+C,EAAAhC,QAAAL,WAAAC,cAAAoC,EAAAhC,QAAAF,aAAAkC,EAAAhC,QAAAH,cAAA,CAiBA,GAfAsF,GAMAnD,EAAAyX,KAAApB,YAAA,EACAlb,EAAAD,WAAAC,GAEAgI,EAAAxE,UACAO,IAAAC,QAAA2C,qBAAA3G,GAAAqD,EACAU,IAAAC,QAAA2C,qBAAA3G,GAAAsD,IATA0E,EAAA,GAAA/E,MAAAM,KAAA8iB,OAAAhiB,OAAAC,GAAAC,SAAAmB,SAAA,EAAAnC,KAAA+iB,OAAAjiB,OAAAC,GAAAC,SAAAsD,YAaA2e,iBAAAA,gBAAA3jB,QAKA,CACA,GAAAkD,GAAA0gB,KAAAC,YAAAF,gBAAA3jB,QAAAgC,EAAAhC,QACAwB,QAAAC,GAAA2B,cAAA,YAAAF,EAAAnD,mBAAA4jB,gBAAA3jB,SACAkD,GAEAA,EAAA,YAAAA,EAAA,8BACA,+BAAAA,EACA1B,OAAAC,GAAA0B,YAAAhG,EAAA+F,EAAA,IAAAnD,mBAAA4jB,gBAAA3jB,cAVAwB,QAAAC,GAAA2B,cAAA,2BAcA+B,GAAAlE,SAAAK,KADAqiB,iBAAAA,gBAAA3jB,SAAA4jB,KAAAE,QAAAH,gBAAA3jB,QAAAgC,EAAAhC,UACAuB,OAAAC,OAAAC,GAAAC,SAAAC,YAEAJ,OAAAC,OAAAC,GAAAC,SAAAqiB,oBAGA,QAAAC,GAAA7mB,GAEA,GAAA,GAAAA,EAAA8B,MAGA,WADA+C,GAAAhC,QAAA8c,aAIA,IAAA6G,iBAAAA,gBAAA3jB,SAAA4jB,KAAAE,QAAAH,gBAAA3jB,QAAAgC,EAAAhC,SACA,CACA,GAAAwL,GAAAtK,IAAAC,QAAA2G,MAAA0D,KAAAmY,gBAAA9b,GAAA8b,gBAAA3jB,QAAAE,UAAA8B,EAAA6F,GAAA7F,EAAAhC,QAAAE,UACA,IAAAsL,EACA,CACA,GAAAgO,GAAA,GAAA3X,QAAA8hB,gBAAA3hB,EACA2hB,iBAAAlK,KAAAlI,MAAAjE,KAAAkM,GACAxX,EAAAyX,KAAAlI,MAAAjE,KAAAkM,QAKArc,GAAAD,WAAAC,GACAwmB,iBAAAA,gBAAA3jB,SAAAmF,GAEA3D,OAAAC,GAAAmC,SAAAC,aAAA3C,IAAAC,QAAA2C,qBAAA3G,GAAA6E,EAAA6F,GAAA7F,EAAAhC,QAIAmF,IAAAA,EAAAlE,UAAAkE,EAAAlE,SAAAuB,SACA2C,EAAA,KACAnD,EAAAyX,KAAApB,YAAA,EAKA,QAAApV,GAAA9F,GAEAwmB,gBAAA3hB,EACAA,EAAAiC,KAAAX,UACAtB,EAAAiC,KAAA3C,MAEAd,EAAAyjB,EAAA,IAAAziB,OAAAC,GAAAC,SAAAmB,SACApC,EAAAyjB,EAAA,IAAA1iB,OAAAC,GAAAC,SAAAmB,SACA8L,MAAA,IAAAnN,OAAAC,GAAAC,SAAAmB,SACA+L,OAAA,IAAApN,OAAAC,GAAAC,SAAAmB,SACAjB,eAAA,GAGA,IAAAsB,GAAAnD,mBAAAC,EACAwB,QAAAC,GAAA2B,cAAAF,GACA1B,OAAAC,GAAA0B,YAAAhG,EAAA+F,GAGA,QAAAihB,KAEA3iB,OAAAC,GAAA4B,cACAsgB,gBAAA,IAEA,IAAAS,GAAA,CACApiB,GAAArC,WAAAoR,eAAAqT,EAAA5iB,OAAAC,GAAAC,SAAAmB,SAAArB,OAAAC,GAAAC,SAAAsD,YAEAhD,EAAAiC,KAAA3C,MAEAyB,KAAAvB,OAAAC,GAAAC,SAAAoB,aAAAd,EAAAhC,SACA8O,eAAArP,eAAAuC,EAAAhC,SACA2O,MAAAnN,OAAAC,GAAAC,SAAAmB,SACA+L,OAAApN,OAAAC,GAAAC,SAAAsD,WACAxE,EAAAyjB,EACAxjB,EAAAyjB,EAAAE,EACAxiB,eAAA,IAGAJ,OAAAC,GAAA2B,cAAA,IA9IA,GAAApB,GAAAtB,IACAA,MAAAV,QAAA,KACAU,KAAAuD,KAAA,KACAvD,KAAAwiB,UAAA,EACAxiB,KAAAV,QAAAA,EACAU,KAAA+Y,KAAA,IACA,IAAAwK,GAAA,EACAC,EAAA,EAEA/e,EAAA,IAyIAzE,MAAAiC,UAAA,WAEA,MAAA,QAAAjC,KAAAuD,MAGAvD,KAAA0gB,SAAA,WAEApf,EAAAW,cACAjC,KAAAuD,KAAAogB,SACA3jB,KAAAuD,KAAA+c,QAAA/d,EAAAkhB,GACAzjB,KAAAuD,KAAAzB,SACA9B,KAAAuD,KAAA,KACAjE,EAAAskB,sBAAA,OAGA5jB,KAAA+gB,MAAA,SAAAnB,GAKA,GAFAtgB,EAAAskB,sBAAAjB,GAEArhB,EAAAW,cACAX,EAAAyX,KAAAzK,WAAA,CACA,GAAAuV,GAAA,EACAH,EAAA,EACAnT,GAAAzP,OAAAC,GAAAC,SAAAmB,SAAArB,OAAAC,GAAAC,SAAAyhB,aAAAnhB,EAAAkhB,SAEAlhB,GAAArC,WAAAoR,eAEAqT,EAAA5iB,OAAAC,GAAAC,SAAAmB,SAAArB,OAAAC,GAAAC,SAAAsD,WACAuf,EAAA,IAGAN,EAAA,EAAAhT,EACAiT,EAAA,EAAAK,EAEA7jB,KAAAuD,KAAA/C,IAAAC,QAAAC,WAAA6C,KAAAggB,EAAAG,EAAAF,EAAA1iB,OAAAC,GAAAC,SAAAmB,SAAArB,OAAAC,GAAAC,SAAAsD,YAAA1D,MACAM,eAAA,EACAmB,KAAAvB,OAAAC,GAAAC,SAAAoB,aAAAd,EAAAhC,SACA8O,eAAArP,eAAAuC,EAAAhC,WAGAsgB,EAAAhT,KAAA5M,KAAAuD,MAEAzF,EAAAwD,EAAAiC,KAAAV,MAAA/D,KAAA,cAAA,SAAA7B,GAEAA,EAAA0X,iBAAA1X,EAAA0X,kBACA1X,EAAA6O,gBAAA7O,EAAA6O,iBACA7O,EAAA6mB,cAAA,IAGAxiB,EAAAiC,KAAAhB,MAAAA,EAAAkhB,GACAniB,EAAAiC,KAAA8d,KAAA2B,EAAAH,EAAAS,KPjMA,IAAAS,WAAA,IACAC,WAAApf,OACAqf,MAAAF,UACAG,WAAA,EAEAC,KAAA,WAEArmB,EAAA8H,MAEAJ,IAAA,aAAAwe,WAAA,YAEAne,KAAA,WAEAoe,MAAAF,UACAG,WAAApjB,OAAAC,GAAA2B,cAAA,uCACAwhB,WAAA,IAEApe,KAAA,WAEAme,MAAA,EAAAF,UACAG,WAAA,EACApjB,OAAAC,GAAA2B,cAAA,kCAGAqJ,WAAAoY,KAAAF,OAGAE,QQvCArjB,OAAAA,WACAA,OAAAC,GAAAD,OAAAC,OAGAD,OAAAC,GAAAqjB,WAAA,WAEA,GAAAC,GAAA,GACAC,EAAA,GACAC,EAAA,GACAC,EAAA,GACAC,EAAA,EAEAzkB,MAAA0kB,OAAA,SAAAnmB,GAEA,gBAAAA,IAEA+lB,EAAA,WAAA9jB,IAAAC,QAAA4V,oBAAAhB,IACAkP,EAAA,WAAA/jB,IAAAC,QAAA4V,oBAAAhB,IAAA,WAEA,WAAA9W,IAEA+lB,EAAA,mBACAC,EAAA,YAGAzmB,EAAA,QAAAumB,GAAApc,YAAA,UAEAoc,EAAA9lB,EACAyB,KAAA2kB,QAGA3kB,KAAAgH,YAAA,SAAA7I,GAEAmJ,QAAAC,IAAA,MAAApJ,EAEA,IAAAymB,OAEAzmB,EAAA0mB,SAAA,SAAA1mB,EAAA0mB,SAAA,WAEAD,EAAAE,gBAAA3mB,EAGA,IAAA4I,GAAAjG,OAAAC,GAAAmK,iBAAA,kBAAA0Z,EAEA9mB,GAAA,gBAAAiJ,KAAAA,IAIA/G,KAAAwE,KAAA,SAAAugB,EAAAC,GAIA,GAFAlnB,EAAA,YAAAmnB,SAEAnnB,EAAA,YAAA4W,GAAA,YACA,CACA5W,EAAA,aAAAiJ,KAAAjG,OAAAC,GAAAmK,iBAAA,iBAEAsZ,EAAAO,EACAN,EAAAO,EAEAhlB,KAAA2kB,MAGA,IAAAxmB,GAAAL,EAAAinB,GAAA5mB,KACA6B,MAAAgH,YAAA7I,KAKA6B,KAAA2kB,KAAA,WAUA,QAAAO,GAAAT,EAAA9N,EAAAjH,GAEAA,IAAAA,EAAA4U,EAEA,IAAAvd,GAAA,EACA,KAAA,GAAAsH,KAAAsI,GAEA,GAAAA,EAAAtI,GAAA,CAGA,GADAsI,EAAAtI,GAAA8W,gBAAA,IACAxO,EAAAtI,GAAA+W,EAEA,GAAAzO,EAAAtI,GAAAgL,GAAAoL,EAEA9N,EAAAtI,GAAA8W,gBAAA,iBAGA,CACA,GAAA,SAAAV,EAAA,QACA9N,GAAAtI,GAAA8W,gBAAA,eAIAxO,EAAAtI,GAAAqB,IAAAiH,EAAAtI,GAAAqB,EAAAA,EAAAiH,EAAAtI,GAAAgX,GAGAte,GAAAjG,OAAAC,GAAAmK,iBAAA,gBAAArE,KAAA8P,EAAAtI,GAAAmW,QAAAA,EAAAC,WAAAA,IACA9N,EAAAtI,GAAA+W,IAEAre,GAAAme,EAAAT,EAAA9N,EAAAtI,GAAAiX,EAAA5V,EAAAiH,EAAAtI,GAAAgX,EAAA,MAGA,MAAAte,GAxCA,MAAA,KAAAsd,MAEArkB,MAAA0kB,OAAA,iBAIA5mB,EAAA,QAAAumB,GAAArc,SAAA,cAuCAlH,QAAA2F,IAAAL,IAAAme,EAAA,SAAA5N,GAEA,GAAA5P,GAAAme,EAAAT,EAAA9N,EAEA7Y,GAAA,cAAAiJ,KAAAA,QASAjG,OAAAC,GAAAwkB,WAAA,GAAAzkB,QAAAC,GAAAqjB,WChIAtjB,OAAAA,WACAA,OAAAC,GAAAD,OAAAC,OACAD,OAAAC,GAAAykB,cAAA1kB,OAAAC,GAAAykB,kBAGA1kB,OAAAC,GAAAykB,cAAAC,aAAA,KACA3kB,OAAAC,GAAAykB,cAAAE,UAAA,EAEA5kB,OAAAC,GAAAykB,cAAAG,mBAAA,SAAA5e,GAoCA,QAAAgE,GAAA9N,GAEA+N,EAAA,EACAC,EAAA,GApCAnK,OAAAC,GAAAgF,MAAAvB,KAAAuC,GAEAjJ,EAAA,kBAAAkF,QACAlF,EAAA,kBAAAsM,GAAA,QAAA,SAAAnN,GAEA,GAAAoO,GAAAvN,EAAA,kBAAAK,KAKAL,GAAA,iBAAAiJ,KAHAsE,EAGA,iCAAAA,EAAAC,cAAA,yBAFA,kCAMAxN,EAAA,uBAAAkK,SAAA,WAEA,IAAAgD,GAAA,EACAC,EAAA,SAAAM,GAEAP,GAAAO,EAEA,EAAAP,IAAAA,EAAA,EACA,IAAAQ,GAAA1N,EAAA,yBACA2N,EAAA3N,EAAA,gBACAkN,IAAAQ,EAAArC,SAAA6B,EAAA,GACA,EAAAA,IAAAA,EAAAQ,EAAArC,OAAA,EAEA,IAAAuC,GAAA,UACAD,GAAAxD,YAAAyD,GAEAF,EAAAvD,YAAAyD,GAAAC,GAAAX,GAAAhD,SAAA0D,GASA5N,GAAA,kBAAAsM,GAAA,QAAAW,GAEAjN,EAAA,kBAAAd,QAAA,SAAAC,GAEA,OAAAA,EAAAsB,OAEA,IAAA,IACA,GAAAqnB,GAAA9nB,EAAA,aAAA2H,KAAA,SACArI,UAAAyoB,SAAAC,KAAA,aAAAF,CACA,MAEA,KAAA,GAEA,MADA7a,MACA,CAGA,KAAA,IACA,KAOA,KAAA,IACA,KAOA,SAAA,OAEA9N,EAAA6O,mBAGAC,WAAA,WAAAjO,EAAA,kBAAAkF,SAAA,MAGAlC,OAAAC,GAAAykB,cAAAhhB,KAAA,YAGA1D,OAAAC,GAAAykB,cAAAC,cAAA3kB,OAAAC,GAAAykB,cAAAE,SAEA5kB,OAAA2F,IAAAL,IAAA,aAAA,SAAAX,GAEA3E,OAAAC,GAAAgF,MAAAsE,YAAA,0BACAvJ,OAAAC,GAAAykB,cAAAC,aAAA3kB,OAAAC,GAAAmK,iBAAA,kBAAA6a,SAAAtgB,IACA3E,OAAAC,GAAAykB,cAAAG,mBAAA7kB,OAAAC,GAAAykB,cAAAC,cACA3kB,OAAAC,GAAAykB,cAAAE,UAAA,IAIA5kB,OAAAC,GAAAykB,cAAAG,mBAAA7kB,OAAAC,GAAAykB,cAAAC,cCxGA,IAAArhB,KAAA,IACAC,IAAA,KACA2hB,QAAA,GAEAloB,GAAAV,UAAA6oB,MAAA,WAEAnoB,EAAA,kBAAAooB,UAAA,SAAAjpB,GAEAA,EAAA6O,iBACAhO,EAAAV,UAAA+oB,UAAA,SAAAlpB,GAEAA,EAAA6O,iBAEAtL,IAAAwV,cAAAtP,OAAA0f,WAAAnpB,EAAAoiB,QACA7e,IAAAwW,gBAIAlZ,EAAA,qBAAAooB,UAAA,SAAAjpB,GAEAA,EAAA6O,iBACAhO,EAAAV,UAAA+oB,UAAA,SAAAlpB,GAEAA,EAAA6O,iBAEAtL,IAAAyV,eAAAhZ,EAAAqiB,QACA9e,IAAAwW,gBAIAlZ,EAAA,qBAAAooB,UAAA,SAAAjpB,GAEAA,EAAA6O,iBACAhO,EAAAV,UAAA+oB,UAAA,SAAAlpB,GAEAA,EAAA6O,iBACAtL,IAAA6lB,aAAA3f,OAAA4f,YAAArpB,EAAAqiB,QACA9e,IAAAwW,gBAIAlZ,EAAA,uBAAAooB,UAAA,SAAAjpB,GAEAA,EAAA6O,iBACAhO,EAAAV,UAAA+oB,UAAA,SAAAlpB,GAEAA,EAAA6O,iBAEAtL,IAAAwV,cAAAtP,OAAA0f,WAAAnpB,EAAAoiB,QACA7e,IAAAyV,eAAAhZ,EAAAqiB,QACA9e,IAAAwW,gBAKAlZ,EAAAV,UAAAmpB,QAAA,SAAAtpB,GACAa,EAAAV,UAAAW,OAAA,iBCvDA+C,OAAA+W,GAAA9W,GAAAD,OAAA+W,GAAA9W,OAEAD,OAAA+W,GAAA2O,IAAAra,UAAAsa,MAAA,EACA3lB,OAAA+W,GAAA2O,IAAAra,UAAAjK,OAAA,KACApB,OAAA+W,GAAA2O,IAAAra,UAAAua,gBAAA,KACA5lB,OAAA+W,GAAA2O,IAAAra,UAAAwa,eAAA,KACA7lB,OAAA+W,GAAA2O,IAAAra,UAAAyV,UAAA,EACA9gB,OAAA+W,GAAA2O,IAAAra,UAAAya,YAAA,EAEA9lB,OAAA+W,GAAAgP,0BAAA,EACA/lB,OAAA+W,GAAAiP,SAAA,EACAhmB,OAAA+W,GAAAkP,UAAA,IACAjmB,OAAA+W,GAAAmP,WAAA,IAEAlmB,OAAA+W,GAAA2O,IAAAra,UAAA8a,WAAA,SAAAzF,GAEA,GAAA0F,GAAA,GACA7kB,EAAA,MACArC,MAAAmnB,aAEA9kB,EAAAvB,OAAAC,GAAAC,SAAAomB,SACAF,EAAA,IAGAlnB,KAAAkC,OAAAtB,MAAAwN,eAAA,KACApO,KAAAkC,OAAAtB,MAAAyC,GAAArD,KAAAF,EAAAwD,GAAAtD,KAAAD,EAAAqO,eAAA8Y,EAAA7kB,KAAAA,IAEArC,KAAA4hB,UAAA5hB,KAAAkC,OAAAtB,MAAAyB,KAAA,WAGAvB,OAAA+W,GAAA2O,IAAAra,UAAA2C,YAAA,SAAA0S,GAEAxhB,KAAA4hB,SAAAJ,EACAxhB,KAAAinB,cAGAnmB,OAAA+W,GAAA2O,IAAAra,UAAAuU,SAAA,WAEA1gB,KAAAqnB,uBAEArnB,KAAAqnB,qBAAA1D,SACA3jB,KAAAqnB,qBAAAvlB,SACA9B,KAAAqnB,sBAAA,GAGArnB,KAAAsnB,sBAEAtnB,KAAAsnB,oBAAA3D,SACA3jB,KAAAsnB,oBAAAxlB,SACA9B,KAAAsnB,qBAAA,GAGAtnB,KAAA0mB,kBAEA1mB,KAAA0mB,gBAAA/C,SACA3jB,KAAA0mB,gBAAA5kB,SACA9B,KAAA0mB,iBAAA,GAGA1mB,KAAA2mB,iBAEA3mB,KAAA2mB,eAAAhD,SACA3jB,KAAA2mB,eAAA7kB,SACA9B,KAAA2mB,gBAAA,GAGA3mB,KAAAkC,SAEAlC,KAAAkC,OAAAyhB,SACA3jB,KAAAkC,OAAAJ,SACA9B,KAAAkC,QAAA,IAMApB,OAAA+W,GAAA2O,IAAAra,UAAAgb,YAAA,EAEArmB,OAAA+W,GAAA2O,IAAAra,UAAAob,aAAA,SAAAC,GAIA,GAFAC,SAAAD,IAAAxnB,KAAAmnB,WAAAK,GAEAhnB,IAAAgW,WAAA,CAYA,GAXAxW,KAAAkC,QAAAlC,KAAA0nB,SACA1nB,KAAA2nB,aAAA7mB,OAAA+W,GAAA+P,eAAA5nB,KAAA0mB,iBAAA1mB,KAAA0nB,SAEAtiB,MAAApF,KAAAqT,SAAArT,KAAAqT,MAAA,GAEArT,KAAAF,EAAAE,KAAA6nB,KAAA/mB,OAAA+W,GAAAkP,UACA/mB,KAAAD,EAAAC,KAAAqT,OAAAvS,OAAA+W,GAAAmP,WAEAhnB,KAAA4mB,WACA5mB,KAAAkC,OAAAsC,OADAxE,KAAAkC,OAAAa,OAGA/C,KAAA2nB,aAAA7mB,OAAA+W,GAAA+P,cACA,CACA,GAAAE,GAAA9nB,KAAAF,EAAAE,KAAA+nB,QAAAjnB,OAAA+W,GAAAkP,UACAiB,EAAAhoB,KAAAD,EAAAC,KAAAioB,SAAAnnB,OAAA+W,GAAAmP,UACAhnB,MAAA0mB,gBAAA9lB,MAAAyC,GAAAykB,EAAAxkB,GAAA0kB,GAEA,IAAAE,GAAAloB,KAAAF,EAAAE,KAAAmoB,UAAArnB,OAAA+W,GAAAkP,UACAqB,EAAApoB,KAAAD,EAAAC,KAAAqoB,WAAAvnB,OAAA+W,GAAAmP,UACAhnB,MAAA2mB,eAAA/lB,MAAAyC,GAAA6kB,EAAA5kB,GAAA8kB,GAEA,IAAAE,GAAA,KAAAtoB,KAAAF,EAAA,IAAAE,KAAAD,EAAA,MAAA+nB,EAAA,IAAAE,EACAO,EAAA,KAAAvoB,KAAAF,EAAA,IAAAE,KAAAD,EAAA,MAAAmoB,EAAA,IAAAE,CAEApoB,MAAAqnB,qBAAAzmB,MAAAD,KAAA2nB,EAAAznB,OAAA,OAAAK,eAAA,IACAlB,KAAAsnB,oBAAA1mB,MAAAD,KAAA4nB,EAAA1nB,OAAA,OAAAK,eAAA,IAIAkE,MAAApF,KAAAF,KAEAE,KAAAF,EAAA,EACAwH,QAAAC,IAAA,mBAEAnC,MAAApF,KAAAD,KAEAC,KAAAD,EAAA,EACAuH,QAAAC,IAAA,mBAIAvH,KAAAinB,aACAjnB,KAAAmnB,YAAAnnB,KAAAkC,OAAAU,YAGA9B,OAAA+W,GAAA2O,IAAAra,UAAAub,OAAA,WAmGA,QAAA1pB,GAAAqc,EAAAC,EAAAtN,EAAAC,EAAAhQ,GAEAa,EAAA,aAAAkF,QAEA1B,EAAAqW,YAAA,EACArW,EAAAsgB,WAEAphB,IAAAgW,WAAAgS,eACAlnB,EAAAwN,aAAA,IAGAtO,IAAAgW,WAAAiS,iBAAApO,EAAAC,EAAAtN,EAAAC,EAAAhQ,GAGA,QAAAC,KAEAoE,EAAAqW,aAEA+Q,EAAApnB,EAAA8S,iBAEA9S,EAAAqW,YAAA,EAGA,QAAAha,KAEA6C,IAAAgW,WAAAmS,2BAEA7nB,OAAAsO,KAAAhH,KACAgH,KAAA,WAEA9N,EAAAkf,IAAAkI,GACAloB,IAAAgW,WAAAoS,WAEAtZ,KAAA,eAKAhO,EAAAqW,YAAA,EAMA,QAAAkR,GAAAxO,EAAAC,EAAAtN,EAAAC,EAAAhQ,GAEAqE,EAAAqW,YAAA,CACA,IAAAmR,GAAAtoB,IAAAgW,WAAApT,qBAAAnG,GACA8rB,EAAAvoB,IAAAgW,WAAAwS,iBAAAF,EAAAhpB,GACAuZ,EAAA/X,EAAAumB,KACA5pB,EAAAqD,EAAA+R,MACA4V,EAAAH,EAAA/oB,EAAAe,OAAA+W,GAAAmP,UAEA1lB,GAAA4nB,oBAAAH,EAAA1P,EAAA4P,EAAAhrB,GACAqD,EAAAimB,eAGA,QAAA4B,KAEA7nB,EAAAqW,YAAA,EACArW,EAAAxB,EAAA,GACAwB,EAAAvB,EAAA,GAOA,QAAAqpB,GAAA/O,EAAAC,EAAAtN,EAAAC,EAAAhQ,GAEAqE,EAAAqW,YAAA,CACA,IAAAmR,GAAAtoB,IAAAgW,WAAApT,qBAAAnG,GACA8rB,EAAAvoB,IAAAgW,WAAAwS,iBAAAF,EAAAhpB,GACAuZ,EAAA/X,EAAAumB,KACA5pB,EAAAqD,EAAA+R,MACA4V,EAAAH,EAAA/oB,EAAAe,OAAA+W,GAAAmP,UAEA1lB,GAAA+nB,mBAAAN,EAAA1P,EAAA4P,EAAAhrB,GACAqD,EAAAimB,eAGA,QAAA+B,KAEAhoB,EAAAqW,YAAA,EACArW,EAAAxB,EAAA,GACAwB,EAAAvB,EAAA,GAtLA,GAAAS,IAAAgW,WAAA,CACA,GAAAlV,GAAAtB,IAEAA,MAAAF,EAAAE,KAAA6nB,KAAA/mB,OAAA+W,GAAAkP,UACA/mB,KAAAD,EAAAC,KAAAqT,OAAAvS,OAAA+W,GAAAmP,WAEAhnB,KAAAupB,KAAAvpB,KAAAF,EAAAE,KAAA+nB,QAAAjnB,OAAA+W,GAAAkP,UACA/mB,KAAAwpB,KAAAxpB,KAAAD,EAAAC,KAAAioB,SAAAnnB,OAAA+W,GAAAmP,UAEA,IAAAyC,IAAApnB,KAAAvB,OAAAC,GAAAC,SAAAomB,SAAAvmB,OAAA,OAEAb,MAAAkC,QAEAlC,KAAA0gB,WAGA1gB,KAAA2nB,aAAA7mB,OAAA+W,GAAA+P,gBAEA5nB,KAAA0mB,kBACA1mB,KAAA0mB,gBAAAlmB,IAAAgW,WAAA9V,WAAAwB,OAAAlC,KAAAupB,KAAAvpB,KAAAwpB,KAAA,IAEAxpB,KAAA0mB,gBAAA9lB,MAAAyB,KAAA,OAAA+L,eAAA,KAEApO,KAAA2mB,iBACA3mB,KAAA2mB,eAAAnmB,IAAAgW,WAAA9V,WAAAwB,OAAAlC,KAAA0pB,OAAA1pB,KAAA2pB,OAAA,IAEA3pB,KAAA2mB,eAAA/lB,MAAAyB,KAAA,OAAA+L,eAAA,KAEApO,KAAAqnB,uBACArnB,KAAAqnB,qBAAA7mB,IAAAgW,WAAA9V,WAAAC,KAAA,WAEAX,KAAAsnB,sBACAtnB,KAAAsnB,oBAAA9mB,IAAAgW,WAAA9V,WAAAC,KAAA,YAGAX,KAAAkC,OAAA1B,IAAAgW,WAAA9V,WAAAwB,OAAAlC,KAAAF,EAAAE,KAAAD,EAAA,GACAC,KAAAkC,OAAAtB,KAAA6oB,GACAzpB,KAAAkC,OAAAU,UAEA5C,KAAAkC,OAAAW,KAAA+mB,QAAA,SAAA3sB,GAEAa,EAAA,aAAAkF,QACA/F,EAAAqB,UAAAkC,IAAAgW,WAAAgS,eAEAlnB,EAAAwN,YAAA7R,EAAAqB,UAAAgD,EAAAsgB,UAAA,GACA,GAGA,IAAA8G,MAEA5G,EAAA,GACAC,EAAA,EAEA/hB,MAAAma,eAAA,WAEA2H,EAAA,GACAC,EAAA,GACAzgB,EAAAqW,YAAA,GAGA3X,KAAAua,OAAA,SAAAF,EAAAC,EAAAtN,EAAAC,EAAAhQ,EAAA6rB,GAEA,GAAA9oB,KAAA4mB,WAAA,CAEA,IAAA9E,IAEAA,EAAAgH,EAAAhpB,EAAAwB,EAAAxB,EACAiiB,EAAA+G,EAAA/oB,EAAAuB,EAAAvB,GAGA+oB,EAAAhpB,EAAAgpB,EAAAhpB,EAAAgiB,EACAgH,EAAA/oB,EAAA+oB,EAAA/oB,EAAAgiB,CAEA,IAAA8F,GAAArnB,IAAAgW,WAAAwS,iBAAAF,EAAAhpB,GACA+pB,EAAAzW,UAAAyU,EAAA,GAAArnB,IAAAgW,WAAAsT,UAAAtpB,IAAAgW,WAAAsT,SAAA,GACAjC,GAAAgC,EAAArpB,IAAAgW,WAAAsT,SAIA,IAAAhpB,OAAA+W,GAAAiP,UAEAxlB,EAAAkf,KAAAqH,KAAAA,EAAAxU,MAAA/R,EAAA+R,QAGA,GAAAvS,OAAA+W,GAAAiP,UAEAxlB,EAAAkf,KAAAqH,KAAAA,EAAAxU,MAAAyV,EAAA/oB,GAAAe,OAAA+W,GAAAmP,aAGA,GAAAlmB,OAAA+W,GAAAiP,UAEAxlB,EAAAkf,KAAAqH,KAAAA,EAAAxU,MAAAyV,EAAA/oB,GAAAe,OAAA+W,GAAAmP,eA8CAhnB,KAAAkC,OAAAmf,KAAArjB,EAAAd,EAAAS,GAwBA2D,EAAAolB,iBAAAplB,EAAAolB,gBAAArF,KAAAwH,EAAAM,GAwBA7nB,EAAAqlB,gBAAArlB,EAAAqlB,eAAAtF,KAAA+H,EAAAE,KAIAxoB,OAAA+W,GAAAkS,KAAA5d,UAAA6d,gBAAA,WAEA,IAAA,GAAA3b,KAAArO,MAAAiqB,KAAA,GAAAjqB,KAAAiqB,KAAA5b,GAAAuT,SAAA,OAAA,GAGA9gB,OAAA+W,GAAAkS,KAAA5d,UAAA3H,KAAA,WAEAhE,IAAAgW,aACAxW,KAAAkqB,UACAlqB,KAAAkqB,QAAA1pB,IAAAgW,WAAA9V,WAAAC,KAAA,kBAGAG,OAAA+W,GAAAkS,KAAA5d,UAAAuU,SAAA,WAEA1gB,KAAAkqB,UAEAlqB,KAAAkqB,QAAAnnB,OACA/C,KAAAkqB,QAAApoB,SACA9B,KAAAkqB,SAAA,EAGA,KAAA,GAAA7b,KAAArO,MAAAiqB,KACAjqB,KAAAiqB,KAAA5b,GAAAqS,YAGA5f,OAAA+W,GAAAkS,KAAA5d,UAAAqc,aAAA,WAEA,IAAA,GAAAna,KAAArO,MAAAiqB,KACAjqB,KAAAiqB,KAAA5b,GAAAS,aAAA,IAGAhO,OAAA+W,GAAAkS,KAAA5d,UAAAge,YAAA,SAAA9Q,GAEA,IAAA,GAAAhL,KAAArO,MAAAiqB,KAEA,GAAAjqB,KAAAiqB,KAAA5b,GAAAwZ,MAAAxO,EAIA,MAFArZ,MAAAiqB,KAAA5b,GAAAqS,eACA1gB,MAAAiqB,KAAAlX,OAAA1E,EAAA,IAOAvN,OAAA+W,GAAAkS,KAAA5d,UAAAie,mBAAA,WAIA,IAFA,GAAAvd,IAAA,EAEAA,GACA,CACAA,GAAA,CACA,KAAA,GAAAwB,KAAArO,MAAAiqB,KAEA,GAAAjqB,KAAAiqB,KAAA5b,GAAAuT,UAAA5hB,KAAAiqB,KAAA5b,GAAAuY,WACA,CACA,EAAA,SAAAjN,EAAA0Q,GAEAvpB,OAAAsO,KAAAhH,KACAgH,KAAA,WACAuK,EAAA2Q,OAAA,GAAAxpB,QAAA+W,GAAA2O,IAAA6D,IACA1Q,EAAA4Q,WACA/pB,IAAAgW,WAAAoS,WAEAtZ,KAAA,WAEAqK,EAAAwQ,YAAAE,EAAAhR,GACA7Y,IAAAgW,WAAAoS,eAGA5oB,KAAAA,KAAAiqB,KAAA5b,GAAA+F,iBAEApU,KAAAiqB,KAAA5b,GAAAqS,WACA1gB,KAAAiqB,KAAAlX,OAAA1E,EAAA,GACAxB,GAAA,GAIA7M,KAAAuqB,YAIAzpB,OAAA+W,GAAA9W,GAAA+W,WAAA,WAsCA,QAAA0S,GAAA3C,GAEA,GAAAgC,GAAAzW,SAAAyU,EAAA4C,EAAA,GACA,OAAAZ,GAQA,QAAAa,KAEA,IAAA,GAAAhY,KAAAiY,GAGAA,EAAAjY,GAAAgO,UAYA5iB,GAAA,wBAAAqL,OAAA,GAEA7B,QAAAC,IAAA,6BAqFA,QAAAqjB,GAAA3tB,GAEA4tB,GACAC,EAAA7tB,GA8DA,QAAA8tB,GAAAlD,GAEA,EAAAA,IAAAA,EAAA,GACAziB,MAAAyiB,KAAAA,EAAA,GAEAmD,EAAAnD,EACAA,GAAA/mB,OAAA+W,GAAAkP,UACAkE,EAAArqB,MAAAD,KAAA,KAAAknB,EAAA,WAAAA,EAAA,UACAqD,EAAAtqB,MAAAD,KAAA,KAAAknB,EAAA,WAAAA,EAAA,UAqCA,QAAAsD,KAEAC,aAAAC,GACAA,EAAAtf,WAAAuf,EAAA,IAGA,QAAAA,KAEA,IAAA9qB,IAAAC,QAAAyO,YAEA,IAAA,GAAAqc,KAAAZ,GACA,CACA,GAAAprB,GAAA,KACAisB,EAAAb,EAAAY,EAGA,IAAAC,GAAA,IAAAA,EAAAvB,KAAA9gB,OAEAqiB,EAAA9K,eAGA,IAAA8K,EACA,CACAA,EAAAhnB,OACAgnB,EAAAjB,UAQA,KAAA,GAFAkB,IAHAnb,EAAAxQ,EAAAgB,OAAA+W,GAAAkP,UACAzW,EAAAC,EAAAzP,OAAA+W,GAAAkP,UAAA,KAEA,IAEA2E,EAAA,EAAAA,EAAAF,EAAAvB,KAAA9gB,OAAAuiB,IAMA,GAJAD,EAAA7e,KAAA4e,EAAAvB,KAAAyB,GAAA7D,KAAA,MACA4D,EAAA7e,KAAA4e,EAAAvB,KAAAyB,GAAA7D,MACA4D,EAAA7e,KAAA4e,EAAAvB,KAAAyB,GAAA7D,KAAA,MAEA2D,EAAAvB,KAAAyB,GAAA/D,aAAA7mB,OAAA+W,GAAA8T,eACAH,EAAAvB,KAAAyB,GAAA/D,aAAA7mB,OAAA+W,GAAA+T,iBACAF,EAAAF,EAAAvB,KAAA9gB,OAAA,EAIA,IAAA,GAFA0iB,GAAAL,EAAAvB,KAAAyB,EAAA,GAAA7D,KAAA2D,EAAAvB,KAAAyB,GAAA7D,KAEAnV,EAAA,EAAAmZ,EAAAnZ,EAAAA,GAAAmZ,EAAA,GAEAJ,EAAA7e,KAAA4e,EAAAvB,KAAAyB,GAAA7D,KAAAnV,EAIA+Y,GAAA7e,KAAA,IAGA,KAAA,GAAAyB,GAAA,EAAAA,EAAAod,EAAAtiB,OAAAkF,IACA,CAEA,GAAAgL,GAAAoS,EAAApd,GACApQ,EAAAutB,EAAAM,SAAAzS,EACA9Z,IAAA,OAAAA,EAAA,KACA,KACAA,GAAA8Z,EAAAvY,OAAA+W,GAAAkP,UAAA,IAAA9oB,GAAA6C,OAAA+W,GAAAmP,WAuBA,IAAA,GAAA0E,GAAA,EAAAA,EAAAF,EAAAvB,KAAA9gB,OAAAuiB,IACA,CACA,GAAAK,GAAA,IACAP,GAAAvB,KAAA9gB,OAAAuiB,EAAA,IAAAK,EAAAP,EAAAvB,KAAAyB,EAAA,IAGAF,EAAAvB,KAAAyB,GAAA9E,WADA9lB,OAAA+W,GAAAgP,0BACA,EAEA2E,GAAA7R,GAAA,GACA,EAEA6R,EAAAvB,KAAAyB,GAAAnE,aAAAiE,GAAA7R,GACA,OAAA6R,EAAAvB,KAAAyB,GAAAM,WAAAR,EAAAvB,KAAAyB,GAAAM,SAAAb,GAGAK,EAAAtB,QAAAtpB,MAAAD,KAAApB,IAEAisB,EAAAtB,SACAsB,EAAAtB,QAAAtpB,KAAA4qB,GAAA7R,GAAA9Y,OAAA,OAAAK,eAAA,IACAL,OAAA,OAAAK,eAAA,MAyJA,QAAA+qB,KAEAnrB,OAAA+W,GAAAiP,WACAhmB,OAAA+W,GAAAiP,SAAA,IAAAhmB,OAAA+W,GAAAiP,SAAA,GACA,IAAAhmB,OAAA+W,GAAAiP,WAEAhpB,EAAA,gBAAAkK,SAAA,eACAlK,EAAA,gBAAAmK,YAAA,eACAnK,EAAA,gBAAAmK,YAAA,cAEA,GAAAnH,OAAA+W,GAAAiP,WAEAhpB,EAAA,gBAAAkK,SAAA,eACAlK,EAAA,gBAAAmK,YAAA,eACAnK,EAAA,gBAAAmK,YAAA,cAEA,GAAAnH,OAAA+W,GAAAiP,WAEAhpB,EAAA,gBAAAkK,SAAA,aACAlK,EAAA,gBAAAmK,YAAA,eACAnK,EAAA,gBAAAmK,YAAA,gBAmKA,QAAAikB,GAAAjvB,GAEA,GAAA,GAAAA,EAAA0Q,QACA,CACA+c,GAEA,KAAA,GAAArc,GAAA,EAAAA,EAAAsc,EAAAxhB,OAAAkF,IAEA/G,QAAAC,IAAA,WAAAojB,EAAAtc,IACA/M,EAAAmb,WAAAkO,EAAAtc,GAGA/M,GAAAuY,QAAA,MACAyR,QAIAxqB,QAAA+W,GAAAgP,0BAAA/lB,OAAA+W,GAAAgP,yBACAvf,QAAAC,IAAA,sCAAAzG,OAAA+W,GAAAgP,yBAEAyE,KAqEA,QAAAR,GAAA7tB,GAEA,GAAA,GAAAA,EAAA0Q,SAAA,GAAA1Q,EAAA0Q,QACA,CACAkd,GAAA,EACA5tB,EAAAP,QAAAO,EAAAoiB,OACA,IAAAwI,GAAAvmB,EAAA6qB,iBAAAlvB,GACA4sB,EAAAzW,UAAAyU,EAAA,GAAA4C,GAAAA,EAAA,GACA5C,GAAAgC,EAAAY,EAEAjqB,IAAA4G,QAAAglB,MAAAC,QAAAxE,GACAvmB,EAAAgrB,aACAxuB,EAAA,aAAAkF,SAkBA,QAAA2U,KAEA,IAAA,GAAAjF,KAAAiY,GACA,IAAA,GAAAtc,KAAAsc,GAAAjY,GAAAuX,KACA,GAAAU,EAAAjY,GAAAuX,KAAA5b,GAAAsJ,cAAA,EACA,OAAA,CAEA,QAAA,EA8BA,QAAA4U,KAEA,GAAAC,GAAA,EAAA/B,CAEA+B,GAAA/B,EAAAA,EAAA,EACA3pB,OAAA+W,GAAAkP,UAAA,KAAAyF,EAAA/B,EAAA,GACA3pB,OAAA+W,GAAAkP,UAAA,KAAAyF,EAAA/B,EAAA,GACA3pB,OAAA+W,GAAAkP,UAAA,MAAAyF,EAAA/B,EAAA,GACA3pB,OAAA+W,GAAAkP,UAAA,MAAAyF,EAAA/B,EAAA,IAEA3pB,OAAA+W,GAAAkP,UAAA,MAAAyF,EAAA/B,EAAA,GAGA,KAAA,GAAApc,GAAA,EAAA,IAAAA,EAAAA,IACA,CACA,GACAgL,GADAwQ,EAAAxb,EAAAme,CAEAne,GAAAoe,EAAAtjB,OAAA,IAEAkQ,EAAAqT,EAAAvL,KAAA,GAAA,IAAA,IACAsL,EAAA7f,KAAAyM,GAGA,IAAA7W,GAAA4Q,SAAAyW,EAAA,GACA8C,KAAAnqB,GAAA,GAAA6L,EAAAme,EAAA/B,GAAAnM,OAAA,EAAA,GAAA,MAEAjF,EAAAoT,EAAApe,GACAgL,EAAAzY,MACAugB,KAAA,GAAA3e,EACA1C,EAAAuO,EAAAme,EAAA/B,EAAA3pB,OAAA+W,GAAAkP,UACAhnB,EAAA,KACAsC,KAAA,OACAuqB,YAAA,MAkHA,QAAAxf,KAEAC,EAAA,KACAC,EAAA,KACAC,GAAAA,EAAA3M,MACAd,EAAA,EAAAC,EAAA,EAAAkO,MAAA,EAAAC,OAAA,EACAhN,eAAA,EACAkN,eAAA,IAIA,QAAAV,GAAAzQ,GAEA,GAAA,GAAAA,EAAA0Q,UAAAC,EACA,CACAP,IACAA,EAAA/L,EAAA8B,qBAAAnG,IACAqQ,EAAAhM,EAAA8B,qBAAAnG,GAEAsQ,IAAAA,EAAAO,EAAAvK,KAAA,EAAA,EAAA,GAAA,IAAA3C,SAEA,IAAAf,IAAAC,EAAAuN,EAAAvN,EAAAC,EAAAsN,EAAAtN,GACAG,GAAAJ,EAAAwN,EAAAxN,EAAAC,EAAAuN,EAAAvN,EAEA,IAAAG,EAAAJ,EAAAD,EAAAC,EAAA,EACA,CACA,GAAAiO,GAAAlO,EAAAC,CACAD,GAAAC,EAAAI,EAAAJ,EACAI,EAAAJ,EAAAiO,EAGA,GAAA7N,EAAAH,EAAAF,EAAAE,EAAA,EACA,CACA,GAAAiO,GAAAnO,EAAAE,CACAF,GAAAE,EAAAG,EAAAH,EACAG,EAAAH,EAAAiO,EAcA,GAXAT,EAAA3M,MACAd,EAAAD,EAAAC,EACAC,EAAAF,EAAAE,EACAkO,MAAA/N,EAAAJ,EAAAD,EAAAC,EACAoO,OAAAhO,EAAAH,EAAAF,EAAAE,EACAc,OAAAC,OAAAC,GAAAC,SAAAmN,gBACA9L,KAAAvB,OAAAC,GAAAC,SAAAmN,gBACAjN,eAAA,EACAkN,eAAA,MAGAzJ,EAAA,MACA,IAAA+U,GAAA,CAEA,KAAA,GAAAhH,KAAAiY,GAEA,IAAA,GAAAtc,KAAAsc,GAAAjY,GAAAuX,KACA,CACA,GAAA1mB,GAAAonB,EAAAjY,GAAAuX,KAAA5b,GAAAnM,MACA,IAAAyoB,EAAAjY,GAAAuX,KAAA5b,GAAAuY,WACA,CACA,GAAAnY,GAAAlL,EAAA3C,KAAA,MACA8N,EAAAnL,EAAA3C,KAAA,KAEA+pB,GAAAjY,GAAAuX,KAAA5b,GAAAS,aAAA,GACAL,EAAA5O,EAAAC,GAAA2O,EAAAvO,EAAAJ,GAAA4O,EAAA7O,EAAAE,GAAA2O,EAAAxO,EAAAH,IAEA4qB,EAAAjY,GAAAuX,KAAA5b,GAAAS,aAAA,GACA4K,MAOA5Y,OAAAC,GAAA2B,cAAAgX,EAAA,mBAljCA,GAAApY,GAAAtB,KAEA6sB,EAAA,GAAA/rB,QAAA+W,GAAAkS,KACApQ,EAAA,KACArJ,GAAAxQ,EAAA,IAAAC,EAAA,KAAAwQ,EAAA,KAAAC,EAAA,KACAia,EAAA,GACAO,EAAA,EAEAL,KAEA7c,EAAAqJ,QAAA,WAAA,EAAA,GACAuV,EAAAvV,QAAA,eAAA,EAAA,GACA0T,GAAA,EACAlmB,GAAA,EACAmoB,GAAA,EAIAzf,EAAA,KACAC,EAAA,KACAC,EAAA,KAEAwf,EAAA,KACAJ,GAAA,EAEA1B,EAAAnd,EAAAnN,KAAA,gBACAsqB,GAAArqB,MAAAC,OAAAC,OAAAC,GAAAC,SAAAgsB,YAAA9rB,eAAA,GAEA,IAAAgqB,GAAAwB,EAAA/rB,KAAA,gBACAuqB,GAAAtqB,MAAAC,OAAAC,OAAAC,GAAAC,SAAAgsB,YAAA9rB,eAAA,IAEAlB,KAAA8pB,OAAA,WAEA,MAAAW,IASAzqB,KAAAU,SAAA,WAEA,MAAAoN,IA0BA9N,KAAAitB,QAAA,SAAAC,GAEA,GAAA,OAAAA,EAAA,CAEA,GAAA7e,GAAA,CAOA6e,GAAA1oB,MAGA,KADA,GAAAqI,IAAA,EACAA,GACA,CACAA,GAAA,CACA,KAAAwB,IAAAsc,GAEA9d,GAAA8d,EAAAtc,GAAAuL,gBAAA+Q,EAAAtc,IAAA6e,IAEA5lB,QAAAC,IAAA,cAAA8G,GAEAsc,EAAAtc,GAAAqS,WACA,GAAAiK,EAAAxhB,OAAAwhB,EAAAxhB,OAAA,EAEAwhB,EAAAA,EAAAwC,MAAA9e,EAAA,GAGAxB,GAAA,GAKA8d,EAAA/d,KAAAsgB,KAsBAltB,KAAAyc,WAAA,SAAA2Q,GAEA,GAAAA,EAAA,CACA,GAAAjvB,GAAAivB,EAAAtB,SAAAd,EAEAoC,GAAAxT,gBAAA,CAGA,KAAA,GAAAvL,KAAAsc,GAEA,GAAAA,EAAAtc,IAAAsc,EAAAtc,IAAA+e,EAQA,MANAA,GAAA1M,WACAiK,EAAAA,EAAAwC,MAAA9e,EAAA,GACA/M,EAAA2rB,QAAAJ,GACAnC,IACAY,IACAtrB,KAAA4oB,UACAzqB,CAIA,OAAA,KASA6B,KAAAqtB,QAAA,WAEA,MAAA1T,IAGA3Z,KAAA6Z,QAAA,SAAAqT,EAAAI,GAEA,GAAA9sB,IAAAgW,WAAA,CAOA,GANA1Y,EAAAV,UAAA0B,KAAA,YAAA8rB,GAEAsC,GAAAA,GAAAL,GAAArsB,IAAA+sB,aAEA7C,KAEAwC,GAAA,OAAAA,EAOA,MALAvT,GAAAkT,EACAnC,IACAY,IACAxtB,EAAA,kBAAAiJ,KAAA,SACApC,GAAA,EAIAuoB,GAAApf,MAAAA,EACA6L,EAAAuT,EACAvoB,GAAA,EACA3E,KAAAitB,QAAAtT,GAEA7b,EAAA,kBAAAiJ,KAAAumB,GAAAA,EAAA5gB,KAAA4gB,EAAA5gB,KACA,IAEA4gB,GAAAA,EAAAhhB,eAAA,iBAAA,IAAAqN,EAAAsQ,KAAA9gB,SAEAwQ,EAAAsQ,KAAArd,KAAA,GAAA9L,QAAA+W,GAAA2O,KAAAqB,KAAAmD,EAAA3X,MAAAia,EAAA/Q,gBACAvc,KAAAwtB,gBAGAlC,IACA3R,EAAAuQ,SAAAvQ,EAAAuQ,QAAAtnB,SACA,KAAA,GAAAyL,KAAAsL,GAAAsQ,KAEAtQ,EAAAsQ,KAAA5b,GAAAnM,QAAAyX,EAAAsQ,KAAA5b,GAAAqZ,SACA/N,EAAAsQ,KAAA5b,GAAAkZ,cAAA,EAYA,QAAA5N,EAAAqS,WAAArS,EAAAqS,SAAAb,IAeA,IAAAsC,GAAA3f,EAAAnN,KAAA,mBACA8sB,GAAA7sB,MAAAC,OAAA,OAAAK,eAAA,IAEAlB,KAAA4W,cAAA,WAEAjS,GAAA+lB,IAEA5c,EAAA+I,WACAvG,EAAAxQ,EACAwQ,EAAAvQ,EACAjC,EAAA,aAAAmQ,QACAqC,EAAAE,GAAA,GAGAkc,EAAA7V,WACAvG,EAAAxQ,EACA,KACAhC,EAAA,aAAAmQ,QACA,KAAA,GAGAqC,EAAAC,EAAAzS,EAAA,aAAAmQ,QAEAye,EAAAgB,OAAAC,aAAA,sBAAA,kBACA7f,EAAA4f,OAAAC,aAAA,sBAAA,kBACArC,KAGAtrB,KAAA4oB,QAAA,WAEAuC,IAGA,IAAAE,GAAA,CA6GArrB,MAAAoD,qBAAA,SAAA4b,GAEA,MAAAhf,MAAA4tB,mBAAA,gBAAA5O,IAGAhf,KAAA6tB,gCAAA,SAAA7O,GAEA,MAAAhf,MAAA4tB,mBAAA,oBAAA5O,IAGAhf,KAAA8tB,WAAA,SAAAC,GAEAvtB,IAAA4G,QAAAglB,MAAA4B,UAAAD,GACAzsB,EAAAgrB,aACAhrB,EAAA2sB,mBAAA3sB,EAAAksB,gBAGAxtB,KAAAkuB,SAAA,WAGA1tB,IAAA4G,QAAAglB,MAAAC,QAAA,GAEAtB,EAAA,GAEAzpB,EAAAksB,gBAGAxtB,KAAA4tB,mBAAA,SAAApe,EAAAwP,GAEA,GAAAC,GAAAnhB,EAAA0R,GAAA,GAAA0P,cAEAD,GAAAA,EAAAlV,SACA,IAAAoV,GAAArhB,EAAA0R,GAAA,GAAA4P,gBAEAD,GAAArf,EAAAkf,EAAAK,QACAF,EAAApf,EAAAif,EAAAM,QAEAH,EAAAA,EAAAI,gBAAAN,EAEA,IAAArB,IAAA9d,EAAAqf,EAAArf,EAAAC,EAAAof,EAAApf,EACA,OAAA6d,GAGA,IAAAhQ,IAAA,CAEA5N,MAAAmuB,QAAA,SAAAhmB,GAEA,GAAAimB,GAAA,IAEA,KAAA,GAAA7C,KAAAZ,GACA,CACA,GAAAxO,GAAAwO,EAAAY,GAAA8C,YAAArD,GACAsD,EAAAlb,SAAA+I,EAAA,IAAA/I,SAAAjL,EAAA,GAKA,IAHA,GAAAmmB,GAAAtD,EAAAL,EAAAY,GAAAtB,KAAA,GAAApC,OAAAyG,EAAA,GACAA,GAAA3D,EAAAY,GAAAtB,KAAA9gB,OAAA,GAAA6hB,EAAAL,EAAAY,GAAAtB,KAAAU,EAAAY,GAAAtB,KAAA9gB,OAAA,GAAA0e,OAAAyG,EAAA3D,EAAAY,GAAAtB,KAAA9gB,OAAA,GAEAwhB,EAAAY,GAAAtB,KAAA9gB,OAAAmlB,GAAAA,GAAA,EACA,CACA,GAAAC,GAAA5D,EAAAY,GAAAtB,KAAAqE,GAAAzG,IAEAuG,KAAAA,EAAAzD,EAAAY,GAAAtB,KAAAqE,IAEAnqB,KAAAI,IAAAymB,EAAAuD,GAAApqB,KAAAI,IAAAymB,EAAAoD,EAAAvG,QAEAuG,EAAAzD,EAAAY,GAAAtB,KAAAqE,KAKAF,IAEA5tB,IAAA4G,QAAAglB,MAAAC,QAAA+B,EAAAvG,MACAvmB,EAAAgrB,cAEA8B,EAAAvG,KAAA7nB,KAAAwuB,gBAAAJ,EAAAvG,KAAA7nB,KAAAyuB,gBAAAzuB,KAAAwtB,iBAIA1vB,EAAA,aAAA2W,MAAA,SAAAxX,GAEA,OAAAA,EAAAsB,OAEA,IAAA,IACAqP,GAAA,KAKA9P,EAAA,aAAAd,QAAA,SAAAC,GAEA,OAAAA,EAAAsB,OAEA,IAAA,IAAA,IAAA,GACA,IAAA,GAAAmU,KAAAiY,GAAAA,EAAAjY,GAAA0X,oBACAkB,KACAruB,EAAA0X,iBAAA1X,EAAA0X,kBACA1X,EAAA6O,gBAAA7O,EAAA6O,gBACA,MAEA,KAAA,IACA8B,GAAA,CACA,MAGA,KAAA,IACAtM,EAAAotB,cACAptB,EAAAqtB,YACA,MAGA,KAAA,KACA1xB,EAAA4X,SAAA5X,EAAA6X,UAAAxT,EAAAstB,eACA,MAEA,KAAA,IACAtnB,QAAAC,IAAA,YAAAoS,EAAAsQ,KACA,MAEA,KAAA,KACAhtB,EAAA4X,SAAA5X,EAAA6X,WAEA7X,EAAAqB,SAAAwC,OAAAsO,KAAAE,OACAxO,OAAAsO,KAAAA,OAEA,MAEA,KAAA,IACA,GAAAyf,GAAA,CACA5xB,GAAAqB,WAAAuwB,EAAA,GACA,IAAA9F,GAAAyB,EAAAlpB,EAAAwtB,UAAA,EAAArE,EAAAoE,EAAA,KACAruB,KAAA4G,QAAAglB,MAAAC,QAAAtD,EAAA0B,EACA,MAEA,KAAA,IACA,GAAAoE,GAAA,CACA5xB,GAAAqB,WAAAuwB,EAAA,GACA,IAAA9F,GAAAyB,EAAAlpB,EAAAwtB,UAAA,EAAArE,EAAAoE,EAAA,KACAruB,KAAA4G,QAAAglB,MAAAC,QAAAtD,EAAA0B,EACA,MAEA,SACAnjB,QAAAC,IAAA,OAAAtK,EAAAsB,UA6BAyB,KAAAyuB,YAAA,WAEA,MAAAne,GAAAxQ,EAAAgB,OAAA+W,GAAAkP,WAGA/mB,KAAAwuB,aAAA,WAEA,MAAAxuB,MAAAyuB,cAAAne,EAAAC,EAAAzP,OAAA+W,GAAAkP,WAGA/mB,KAAA+uB,WAAA,WAEApV,EAAAqV,MAAArV,EAAAqV,KACA1D,KAGAtrB,KAAAwtB,aAAA,WAEA,GAAA3tB,GAAAmrB,EAAAlqB,OAAA+W,GAAAkP,UACA9Y,EAAAqC,EAAAC,EACA0e,EAAApvB,EAAAoO,EAAA,CAEA,GAAAghB,IAAAA,EAAA,GAEA3e,EAAAxQ,EAAAmvB,EAEA3tB,EAAAsV,gBACA2V,KAGAvsB,KAAA2uB,WAAA,WAEA,IAAAnuB,IAAAC,QAAAyO,YAAA,CAEA,GAAAggB,GAAA,OACAC,EAAA,SAEAnF,GAAA,CACA,KAAA,GAAAuB,KAAAZ,GACAA,EAAAY,GAAAvB,oBAAAA,GAAA,EAEA,IAAAtQ,GAAA,CACA,KAAA,GAAA6R,KAAAZ,GAEA,IAAA,GAAAtc,KAAAsc,GAAAY,GAAAtB,OAEAD,GAAAW,EAAAY,GAAAtB,KAAA5b,GAAAuT,YAEAlI,IACAwV,EAAA/qB,KAAAE,IAAA6qB,EAAAvE,EAAAY,GAAAtB,KAAA5b,GAAAwZ,MACAsH,EAAAhrB,KAAAC,IAAA+qB,EAAAxE,EAAAY,GAAAtB,KAAA5b,GAAAwZ,MAIA,KAAAnO,IAEAwV,EAAA,GACAC,EAAA,IAEAD,GAAAC,IAEAD,GAAA,EACAC,GAAA,EACA,EAAAA,IAAAA,EAAA,IAGAruB,OAAA+W,GAAAkP,UAAAzW,EAAAC,GAAA2e,EAAAC,GAAA,GACA7e,EAAAxQ,EAAAqvB,EAAAruB,OAAA+W,GAAAkP,UAAA,KAAAmI,EAAAC,GAAAruB,OAAA+W,GAAAkP,UACAzf,QAAAC,IAAA,uBAAA4nB,EAAAD,EAAAxV,GAGApY,EAAAsV,gBACA2V,KAGA,IAAA6C,GAAA,CACApvB,MAAA8c,mBAAA,WAEAsO,aAAAgE,GACAA,EAAArjB,WAAAzK,EAAAotB,YAAA,KAIA,IAAAW,GAAA,EACAC,EAAA,CACAtvB,MAAA0uB,YAAA,WAEA,GAAAa,GAAA,OACAC,EAAA,SAEAxF,GAAA,CACA,KAAA,GAAAuB,KAAAZ,GACAA,EAAAY,GAAAvB,oBAAAA,GAAA,EAEA,IAAAtQ,GAAA,CACA,KAAA,GAAA6R,KAAAZ,GAEA,IAAA,GAAAtc,KAAAsc,GAAAY,GAAAtB,OAEAD,GAAAW,EAAAY,GAAAtB,KAAA5b,GAAAuT,YAEAlI,IACA6V,EAAAprB,KAAAE,IAAAkrB,EAAA5E,EAAAY,GAAAtB,KAAA5b,GAAAgF,OACAmc,EAAArrB,KAAAC,IAAAorB,EAAA7E,EAAAY,GAAAtB,KAAA5b,GAAAgF,OAKA,IAAAgc,GAAAE,GAAAD,GAAAE,EACA,CACAH,EAAAE,EACAD,EAAAE,EAEA,IAAA9V,IAEA6V,EAAA,EACAC,EAAA,IAGAD,GAAAC,IAEAD,GAAA,EACAC,GAAA,EAGA,IAAA/U,GAAAtW,KAAAI,IAAAgrB,GAAAprB,KAAAI,IAAAirB,EACAluB,GAAAmuB,cAAA3xB,EAAA,aAAAoQ,SAAA,KAAAuM,EAAA,GAAAtW,KAAAI,IAAAkW,KAEAnK,EAAAvQ,EAAA,KAAAwvB,EAAAzuB,OAAA+W,GAAAmP,WACA1lB,EAAAsV,kBAKA5W,KAAA4uB,cAAA,WAEA,IAAA,GAAArD,KAAAZ,GACA,IAAA,GAAAtc,KAAAsc,GAAAY,GAAAtB,KACAU,EAAAY,GAAAtB,KAAA5b,GAAAuY,YACA+D,EAAAY,GAAAtB,KAAA5b,GAAAS,aAAA,EACAwc,MAGAtrB,KAAA0vB,sBAAA,SAAAzyB,GAEA,IAAA,GAAAsuB,KAAAZ,GACA,CACAA,EAAAY,GAAAoE,cAAA1yB,CACA,KAAA,GAAAoR,KAAAsc,GAAAY,GAAAtB,KAEAU,EAAAY,GAAA7K,WAEAiK,EAAAY,GAAAtB,KAAA5b,GAAAuT,UACA+I,EAAAY,GAAAtB,KAAA5b,GAAAuhB,UAAA3yB,GAGAquB,KA2BAxtB,EAAA,gBAAAgB,KAAA,QAAAmtB,GACAnuB,EAAA,mBAAAgB,KAAA,QAAAkB,KAAA0uB,aACA5wB,EAAA,kBAAAgB,KAAA,QAAAkB,KAAA2uB,YASA7wB,EAAA,SAAAgB,KAAA,QAAAkB,KAAA+uB,YACAjxB,EAAA,iBAAAgB,KAAA,QAAAkB,KAAAwtB,cACA1vB,EAAA,iBAAAgB,KAAA,YAAA,WAAAguB,GAAA,IACAhvB,EAAA,iBAAAgB,KAAA,UAAA,WAAAguB,GAAA,IAEAhvB,EAAA,+BAAAgB,KAAA,YAAAotB,GAWApuB,EAAA,mBAAAgB,KAAA,QAAA,SAAA7B,GAEA0c,EAAAsQ,KAAArd,KAAA,GAAA9L,QAAA+W,GAAA2O,KAAA1Y,MAAAA,EAAA+Z,KAAAmD,EAAA3X,MAAAsG,EAAAmS,SAAAd,MACAM,KAGA,IAAAuE,GAAA,CACA/xB,GAAA,aAAAgB,KAAA,YAAA,SAAArC,GAEAozB,EAAAC,KAAAC,QAEAjyB,EAAA,aAAAgB,KAAA,UAAA,SAAArC,GAEAqzB,KAAAC,MAAAF,EAAA,MAAApzB,EAAA6B,WAAAusB,IAAAlT,KAAArW,EAAAknB,eAEApb,GAEA,KAAA,GAAAsF,KAAAiY,GACA,IAAA,GAAAtc,KAAAsc,GAAAjY,GAAAuX,KACAU,EAAAjY,GAAAuX,KAAA5b,GAAAsJ,YAAA,IAGA7Z,EAAA,iBAAAgB,KAAA,UAAA,SAAA7B,GAEA4tB,GAAA,IAGAnkB,OAAArJ,iBAAA,SAAA,SAAAZ,GAEA6E,EAAAsV,kBAIA9Y,EAAAV,UAAA0B,KAAA,UAAA,SAAA7B,GAEA4tB,GAAA,IAkBA/sB,EAAA,eAAAgB,KAAA,YAAA,SAAA7B,GAEAa,EAAA,aAAAkF,QACA,SAAA/F,EAAA+yB,OAAAC,UAAAhzB,EAAA6O,mBAGAhO,EAAA,iBAAAgB,KAAA,YAAA,SAAA7B,GAEAa,EAAAV,UAAA0B,KAAA,YAAA8rB,GACA9sB,EAAA,aAAAkF,QACA/F,EAAAT,WAAAS,GACA6tB,EAAA7tB,GACAA,EAAA6O,kBAaA,IAAAokB,GAAA,EAAAC,EAAA,CACAryB,GAAA,aAAAgB,KAAA,YAAA,SAAA7B,GAEA,IAAA4tB,EAAA,CAGA,GAFA5tB,EAAAT,WAAAS,GAEA,GAAAA,EAAA0Q,SAAA,GAAA1Q,EAAA0Q,SAAA,GAAA1Q,EAAA0Q,SAAAC,EACA,CACA0C,EAAAxQ,GAAAowB,EAAA5uB,EAAA8B,qBAAAnG,GAAA6C,EACAwQ,EAAAvQ,GAAAowB,EAAA7uB,EAAA8B,qBAAAnG,GAAA8C,CAEA,EAAAuQ,EAAAxQ,EAAAgB,OAAA+W,GAAAkP,UAEAzlB,EAAAsV,gBAGAsZ,EAAA5uB,EAAA8B,qBAAAnG,GAAA6C,EACAqwB,EAAA7uB,EAAA8B,qBAAAnG,GAAA8C,EAEA4X,KAIAjK,EAAAzQ,KAGA,IAAAwvB,KAqCAzsB,MAAA8uB,QAAA,WAEA,MAAA9D,IAGAhrB,KAAAyvB,cAAA,SAAAxxB,GAEA6C,OAAA+W,GAAAmP,WAAA/oB,EACAqtB,IACAiB,KAGAvsB,KAAAowB,aAAA,SAAAnyB,GAEAgtB,EAAAloB,MACA,IAAAstB,GAAArwB,KAAAgpB,iBAAA1Y,EAAAxQ,GACAwwB,EAAAtwB,KAAAuwB,kBAAAvF,EAMAlqB,QAAA+W,GAAAkP,UAAA9oB,EAEAqS,EAAAxQ,EAAAuwB,EAAAvvB,OAAA+W,GAAAkP,UAAA,CAEA,IAAAyJ,GAAAxwB,KAAAuwB,kBAAAvF,EACA1a,GAAAxQ,IAAAwwB,EAAAE,GAAA,EAGAlF,IAEAhqB,EAAAsV,gBACA2V,IAEAzuB,EAAA,aAAAkF,QACAioB,EAAAzmB,OACAumB,EAAA/qB,KAAA8uB,YAGA9uB,KAAAmsB,iBAAA,SAAAlvB,GAEA,GAAA4qB,GAAAvmB,EAAAusB,gCAAA5wB,GAAA6C,CAEA,OADA+nB,IAAA/mB,OAAA+W,GAAAkP,WAIA/mB,KAAAiuB,gBAAA,WAEA,MAAAjD,GAAA1pB,EAAA0nB,iBAAA1Y,EAAAxQ,IAAAkrB,EAAA1pB,EAAA0nB,iBAAA1Y,EAAAC,GAAAjP,EAAA0nB,iBAAA1Y,EAAAxQ,IAEAE,KAAAuwB,kBAAA,SAAAlX,GAEA,MAAAA,GAAAvY,OAAA+W,GAAAkP,WAEA/mB,KAAAgpB,iBAAA,SAAAtsB,GAEA,GAAAmrB,GAAAnrB,CAEA,OADAmrB,IAAA/mB,OAAA+W,GAAAkP,WAIA/mB,KAAAywB,sBAAA,WAEA9D,GAAAA,EACArlB,QAAAC,IAAA,kBAAAolB,GACA3sB,KAAAssB,aACAC,IAGA,IAAAmE,GAAA,EACA1wB,MAAAssB,WAAA,WAEA,GAAAzE,GAAArnB,IAAA4G,QAAAglB,MAAA0C,SACA/D,GAAAlD,GACAiF,GAAAxrB,EAAAksB,eAGAkD,GAAA7I,IAEA6I,EAAA7I,EAGA/pB,EAAA,iBAAAiJ,KADA4lB,EACA,wBAAAnC,EAAA3C,GAAA,aAAAA,EAAA,IAAAvJ,OAAA,EAAA,GAAA,KAEA,yBAAAuJ,EAAA,IAAAvJ,OAAA,EAAA,GAAA,cAAAkM,EAAA3C,GAAA,MAEA,OAAAkF,IAAAA,EAAA4D,YAAArvB,EAAAgrB,WAAA,MAGAtsB,KAAA4wB,WAAA,SAAAnwB,GAEAD,IAAA4G,QAAAglB,MAAAwE,aAEApwB,IAAA4G,QAAAglB,MAAAyE,aAQA/yB,EAAA,iBAAAmK,YAAA,WACAnK,EAAA,iBAAAkK,SAAA,YACAhI,KAAAssB,eARAxuB,EAAA,iBAAAmK,YAAA,YACAnK,EAAA,iBAAAkK,SAAA,WACAhI,KAAAssB,eA2FAtsB,KAAAiU,KAAA,SAAAhX,GAEA,GAAAgtB,KACA,KAAA,GAAA5b,KAAAsL,GAAAsQ,KAEAtQ,EAAAsQ,KAAA5b,GAAAuT,UAEAqI,EAAArd,KAAA+M,EAAAsQ,KAAA5b,GAAA+F,gBAIA,IAAAE,IAAA2V,KAAAA,GACA1V,EAAA7L,KAAAC,UAAA2L,EAEAxT,QAAAC,GAAA2B,cAAAunB,EAAA9gB,OAAA,mBAEAlM,EAAAmV,cAAAoC,QAAA,aAAAD,GACAtX,EAAA6O,kBAGA9L,KAAAgU,IAAA,SAAA/W,GAEA0H,IACArD,EAAA2S,KAAAhX,GACA0c,EAAAyQ,qBACAkB,MAGAtrB,KAAAmS,MAAA,SAAAlV,GAEA,GAAA0H,GACA1H,EAAAmV,cAAAC,MAAAC,QAAA,cAAA,GACA,CACArV,EAAA6O,gBAEA,IAAAvM,GAAAtC,EAAAmV,cAAAG,QAAA,aAEAtV,GAAA6O,gBAEA,IAAA0G,GAAA9J,KAAA+J,MAAAlT,EACA,IAAAiT,GAEAA,EAAAyX,KACA,CACA,GAAA5b,GAAA,EAEAyiB,EAAApd,OAAAC;;AACA,IAAAtF,IAAAmE,GAAAyX,KAEA6G,EAAA3sB,KAAAC,IAAA0sB,EAAAte,EAAAyX,KAAA5b,GAAAgL,EAGAvY,QAAAC,GAAA2B,cAAA8P,EAAAyX,KAAA9gB,OAAA,kBAEA,KAAAkF,IAAAmE,GAAAyX,KAEAzX,EAAAyX,KAAA5b,GAAAgL,EAAA7G,EAAAyX,KAAA5b,GAAAgL,EAAAyX,EAAA9F,EACArR,EAAA2Q,OAAA,GAAAxpB,QAAA+W,GAAA2O,IAAAhU,EAAAyX,KAAA5b,IAGAsL,GAAA4Q,UAEA,KAAAlc,IAAAsL,GAAAsQ,KAEAtQ,EAAAsQ,KAAA5b,GAAAkZ,cAAA,EAIA,YADA+D,KAIAxqB,OAAAC,GAAA2B,cAAA,8CAOA1C,KAAA2oB,yBAAA,WAEA,IAAA,GAAAta,KAAAsc,GAEA,GAAAA,EAAAtc,GAEA,IAAA,GAAAyE,KAAA6X,GAAAtc,GAAA4b,KACA,CACA,GAAA8G,GAAApG,EAAAtc,GAAA4b,KAAAnX,EACAie,GAAAnP,UAEAmP,EAAA5W,mBAOAna,KAAAyoB,iBAAA,SAAApO,EAAAC,EAAAtN,EAAAC,EAAAhQ,GAEA,GAAA6rB,GAAAtoB,IAAAgW,WAAApT,qBAAAnG,EAKAkH,MAAAI,IAAAtH,EAAAoiB,QAAA7e,IAAAgW,WAAAsY,UAAAhuB,OAAA+W,GAAAkP,WAAA,KAEA+B,EAAAhpB,EAAAU,IAAAgW,WAAAsY,UAAAhuB,OAAA+W,GAAAkP,UAGA,KAAA,GAAA1Y,KAAAsc,GAEA,GAAAA,EAAAtc,GAEA,IAAA,GAAAyE,KAAA6X,GAAAtc,GAAA4b,KACA,CACA,GAAA8G,GAAApG,EAAAtc,GAAA4b,KAAAnX,EACAie,GAAAnP,UAEAmP,EAAAxW,OAAAF,EAAAC,EAAAtN,EAAAC,EAAAhQ,EAAA6rB,KAOA9oB,KAAAwoB,aAAA,WAEA,IAAA,GAAAna,KAAAsc,GAEAA,EAAAtc,IAEAsc,EAAAtc,GAAAma,gBAKAxoB,KAAAyW,MAAA,WAEA,IAAA,GAAApI,KAAAsc,GAKAA,EAAAtc,GAAAqS,WACA7T,OAAA,CAGA8d,GAAAxhB,OAAA,GAGAnJ,KAAAssB,aACAtsB,KAAA6Z,QAAAgT,GACAN,IACAvsB,KAAAwtB,eACAlC,IACAtrB,KAAA6Z,QAAAgT,GACAvrB,EAAAsV,gBACAtV,EAAAuY,QAAAgT,IVxmDA/rB,OAAAA,WACAA,OAAAC,GAAAD,OAAAC,OAEAD,OAAAC,GAAAmK,iBAAA,SAAAwB,EAAA4H,GAEA,GAAA0c,GAAAlzB,EAAA,IAAA4O,GAAA3F,OACAkqB,EAAA1oB,WAAAoT,QAAAqV,GACAvoB,EAAA6L,CACA,OAAA2c,GAAAxoB,IAOA3H,OAAAC,GAAAwW,cAAA,SAAA9a,GAEA,GAAAy0B,EACA,IAAAz0B,EAAA00B,WAEAD,EAAAz0B,EAAA00B,WAAA,IAAA,IAAA,EAAA10B,EAAA00B,WAAA,IAAA10B,EAAA00B,WAAA,OAGA,CACA,GAAAC,GAAA30B,EAAA40B,OAAA50B,EAAA40B,OAAA50B,EAAA60B,MACAJ,KAAAE,EAAA,EAAA,GAAAA,EAAAA,EAAA,GAEA,MAAAF,IAAA,GW1BA,IAAAK,gBAAA,IAEAzwB,QAAAC,GAAAD,OAAAC,OAEAD,OAAAC,GAAA0B,YAAA,SAAAxF,EAAAuF,GAEA1E,EAAA,YAAA0G,OACA1G,EAAA,YAAAwf,IAAA,MAAArgB,EAAAqiB,QAAA,IACAxhB,EAAA,YAAAwf,IAAA,OAAArgB,EAAAoiB,QAAA,IACAvhB,EAAA,YAAAiJ,KAAAvE,IAIA1B,OAAAC,GAAA4B,YAAA,WAEA7E,EAAA,YAAAiF,QAGAjF,EAAAV,UAAAgN,GAAA,sBAAA,MAAA,SAAAnN,GAEAmuB,aAAAmG,eACA,IAAA/uB,GAAA1E,EAAAkC,MAAAyF,KAAA,KACA8rB,gBAAAxlB,WAAA,WAEAjL,OAAAC,GAAA0B,YAAAxF,EAAAuF,IACA,OAGA1E,EAAAV,UAAAgN,GAAA,WAAA,MAAA,WAEAghB,aAAAmG,gBACAzwB,OAAAC,GAAA4B,gBC7BA7B,OAAAC,GAAAD,OAAAC,OACAD,OAAAsO,KAAA,GAAAoiB,aAEA1wB,OAAAC,GAAA0wB,IAAA,WAibA,QAAAC,KAEA,GAAAC,GAAA,GAAAC,OAEAD,GAAAE,SAAA,KAAAzrB,IAAA,SAAA3J,EAAAq1B,KAEAC,aAAAC,MAAA,KAAAD,aAAAC,MAAAD,aAAAC,KAAA7oB,OAAA,KACA7H,EAAA8F,MAAAqP,QAEAnV,EAAAb,QAAA2G,MAAA2M,YAAAge,aAAAC,QAGAL,EAAAE,SAAA,gBAAAzrB,IAAA,SAAA3J,EAAAq1B,GAEAhxB,OAAAC,GAAAgF,MAAAsE,YAAA,WAEAvJ,OAAA2F,IAAAL,IAAA,WAAA0rB,EAAAtiB,GAAA,SAAA+G,GAEAjV,EAAAb,QAAAsW,WAAAR,OAIAob,EAAA9xB,MAAA,KArcA,GAAAyB,GAAAtB,KACAutB,GAAA,EACA0E,GAAA,EACA/a,EAAA,GAAAgb,MACAhb,GAAA1W,KAAA,CACA,IAAA2xB,GAAA,IAEAnyB,MAAAwW,SAAA,WAEA,MAAA2b,GAAA3b,UAGAxW,KAAAoH,MAAA,WAEA,MAAA8P,IAGAlX,KAAAS,MAAA,WAEA,MAAA0xB,IAGAnyB,KAAAqmB,aAAA,IACArmB,KAAAgW,cAAA,IACAhW,KAAAiW,eAAA,IAEAjW,KAAAgX,UAAA,YAEAyQ,SAAAnmB,EAAA0U,eAAAyR,SAAAnmB,EAAA2U,gBAAA3U,EAAA0U,cAAA,IAAAtP,OAAA0f,YAAA9kB,EAAA2U,eAAA,IAAAvP,OAAA4f,eAEAhlB,EAAA0U,cAAA,GAAAtP,OAAA0f,WACA9kB,EAAA2U,eAAA,IAAAvP,OAAA4f,YAGA,IAAA8L,GAAA,GACAC,EAAA,GACAC,EAAA,IAEAC,EAAA,GACAC,EAAA,GAEAC,EAAA/rB,OAAA4f,YAAA8L,EAAAC,EAAA,EAEAK,EAAAhsB,OAAA0f,WAAA9kB,EAAA0U,cAAA,EACA2c,EAAA,CAcA,IAZApF,GAEAkF,EAAAA,EAAAzyB,KAAAqmB,aAAA,EAEAvoB,EAAA,iBAAAwf,IAAA,SAAA,IACAxf,EAAA,iBAAAwf,IAAA,OAAAoV,EAAA,KAIAD,GAAAF,EAGAN,EACA,CACA,GAAAW,GAAA,EACA90B,GAAA,WAAA0G,OACA1G,EAAA,cAAAwf,IAAA,SAAAsV,GACA90B,EAAA,cAAAwf,IAAA,MAAA+U,EAAA,GAEAK,GAAA,EACAC,EAAAD,EACA50B,EAAA,QAAAwf,IAAA,SAAAmV,EAAA,EAAAG,GACA90B,EAAA,QAAAwf,IAAA,QAAAoV,GACA50B,EAAA,QAAAwf,IAAA,MAAA+U,EAAA,EAAAO,GACA90B,EAAA,QAAAwf,IAAA,OAAA,OAIAxf,GAAA,WAAAiF,MAMAjF,GAAA,cAAAwf,IAAA,SAAAmV,EAAA,GACA30B,EAAA,cAAAwf,IAAA,QAAA5W,OAAA0f,WAAA9kB,EAAA0U,cAAA,GAEAlY,EAAA,kBAAAwf,IAAA,OAAA5W,OAAA0f,WAAA9kB,EAAA0U,cAAA,GACAlY,EAAA,kBAAAwf,IAAA,SAAAmV,EAAAF,EAAA,GACAz0B,EAAA,kBAAAwf,IAAA,MAAA+U,GACAv0B,EAAA,qBAAAwf,IAAA,MAAAhc,EAAA2U,gBACAnY,EAAA,qBAAAwf,IAAA,QAAAhc,EAAA0U,eACAlY,EAAA,uBAAAwf,IAAA,QAAAhc,EAAA0U,cAAA,IACAlY,EAAA,uBAAAwf,IAAA,MAAAhc,EAAA2U,eAAA,IAEAnY,EAAA,UAAAwf,IAAA,SAAAmV,EAAA,GACA30B,EAAA,UAAAwf,IAAA,QAAAoV,GACA50B,EAAA,UAAAwf,IAAA,MAAA+U,EAAA,GACAv0B,EAAA,UAAAwf,IAAA,OAAAqV,GAEA70B,EAAA,eAAAwf,IAAA,QAAA5W,OAAA0f,WAAA9kB,EAAA0U,cAAA,GAEAlY,EAAA,WAAAwf,IAAA,QAAA5W,OAAA0f,WAAA9kB,EAAA0U,cAAA,GACAlY,EAAA,WAAAwf,IAAA,SAAA8U,GAKA7E,GAEAzvB,EAAA,WAAAwf,IAAA,SAAAtd,KAAAqmB,cAEAvoB,EAAA,iBAAAwf,IAAA,QAAA5W,OAAA0f,WAAA9kB,EAAA0U,cAAA,GACAlY,EAAA,iBAAAwf,IAAA,SAAAtd,KAAAqmB,aAAAmM,GACA10B,EAAA,iBAAAwf,IAAA,aAAAiV,GAEAz0B,EAAA,qBAAAwf,IAAA,QAAA5W,OAAA0f,WAAA9kB,EAAA0U,cAAA,GACAlY,EAAA,qBAAAwf,IAAA,SAAAtd,KAAAqmB,aAAAmM,EAAAD,EAAAH,GAEAt0B,EAAA,iBAAAwf,IAAA,QAAA5W,OAAA0f,WAAA9kB,EAAA0U,cAAA,GACAlY,EAAA,iBAAAwf,IAAA,SAAAtd,KAAAqmB,aAAAmM,GACA10B,EAAA,iBAAAwf,IAAA,aAAAiV,EAAAC,GACA10B,EAAA,iBAAA0G,OACA1G,EAAA,iBAAA0G,OACA1G,EAAA,gBAAA0G,OAEA1G,EAAA,qBAAA0G,OACA1G,EAAA,qBAAAwf,IAAA,SAAAtd,KAAAqmB,aAAAmM,EAAAD,EAAA,KAIAz0B,EAAA,gBAAAiF,OACAjF,EAAA,iBAAAiF,OACAjF,EAAA,iBAAAiF,OACAjF,EAAA,WAAAwf,IAAA,SAAAiV,GAEAz0B,EAAA,qBAAAiF,QAGAzB,EAAAkV,YAAAlV,EAAAkV,WAAAI,gBAEA9Y,EAAA,qBAAAwf,IAAA,QAAA5W,OAAA0f,WAAA9kB,EAAA0U,cAAA,GAEAlY,EAAA,YAAAwf,IAAA,OAAA5W,OAAA0f,WAAA9kB,EAAA0U,cAAA,GACAlY,EAAA,YAAAwf,IAAA,MAAAhc,EAAA2U,gBACAnY,EAAA,YAAAwf,IAAA,QAAAgV,GACAx0B,EAAA,YAAAwf,IAAA,SAAA5W,OAAA4f,YAAAhlB,EAAA2U,eAAAmc,GAEAt0B,EAAA,SAAAwf,IAAA,QAAA,GACAxf,EAAA,SAAAwf,IAAA,MAAAhc,EAAA2U,gBACAnY,EAAA,SAAAwf,IAAA,QAAAhc,EAAA0U,cAAAsc,GACAx0B,EAAA,SAAAwf,IAAA,SAAA5W,OAAA4f,YAAAhlB,EAAA2U,eAAAmc,GAEAt0B,EAAA,yBAAAwf,IAAA,SAAA8U,GAEAt0B,EAAA,yBAAAwf,IAAA,QAAAhc,EAAA0U,cAAAsc,EAAAx0B,EAAA,yBAAAmQ,QAAA,GAIAnQ,EAAA,YAAAwf,IAAA,MAAA,GACAxf,EAAA,YAAAwf,IAAA,QAAA5W,OAAA0f,WAAA9kB,EAAA0U,cAAA,IACAlY,EAAA,YAAAwf,IAAA,SAAA+U,GAEA,IAAA/wB,EAAA0U,eAEAlY,EAAA,aAAA8C,KAAA,QAAA8F,OAAA0f,YACAtoB,EAAA,aAAA8C,KAAA,SAAA8F,OAAA4f,aACAxoB,EAAA,aAAAwf,IAAA,UAAA,QAIAxf,EAAA,aAAA8C,KAAA,QAAAU,EAAA0U,eACAlY,EAAA,aAAA8C,KAAA,SAAAU,EAAA2U,iBAEAnV,OAAAC,GAAA2B,cAAA,+BAAApB,EAAA0U,cAAA,MAAA1U,EAAA2U,iBAGAjW,KAAA6yB,aAAA,WAEA,GAAA9rB,GAAA,EACAA,IAAA,oBACAA,GAAA,wCACAA,GAAA,QACAA,GAAA,QACAA,GAAA,mJACAjG,OAAAC,GAAAgF,MAAAvB,KAAAuC,IAGA/G,KAAA8yB,aAAA,WAEA,GAAA/rB,GAAA,EACAA,IAAA,oBACAA,GAAA,wCACAjG,OAAAC,GAAAgF,MAAAvB,KAAAuC,GACAjJ,EAAA,eAAAK,IAAAmD,EAAAb,QAAA2G,MAAAyO,aAGA,IAAAkd,GAAAC,CACAhzB,MAAAizB,kBAAA,WAEA3rB,QAAAC,IAAA,qBAEA,IAAAjG,EAAA0U,eAEA+c,EAAAzxB,EAAA0U,cACAgd,EAAA1xB,EAAA2U,eACA3U,EAAA0U,cAAA,IAIA1U,EAAA0U,cAAA+c,EACAzxB,EAAA2U,eAAA+c,GAGA1xB,EAAA0V,aAGAhX,KAAAkzB,gBAAA,WAEA,MAAA3F,IAGAvtB,KAAAutB,WAAA,WAEAA,GAAA,EACAjsB,EAAA0V,aAGAhX,KAAAmzB,aAAA,WAEA5F,GAAAA,EACAjsB,EAAA0V,aAGAhX,KAAAozB,YAAA,SAAA5O,EAAAC,GAEA3jB,OAAAC,GAAAwkB,WAAA/gB,KAAAggB,EAAAC,IAIAzkB,KAAAqzB,cAAA,WAEAvyB,OAAA2F,IAAAF,KAAA,WAAAmG,KAAA4mB,OAAA,cAAA,KAAA,SAAAlO,GAEAtkB,OAAAC,GAAAykB,cAAAE,UAAA,EAEAtoB,SAAAyoB,SAAAC,KAAA,aAAAV,EAAA/P,OAIArV,KAAAuzB,SAAA,WAEA,GAAAxsB,GAAAjG,OAAAC,GAAAmK,iBAAA,QACApK,QAAAC,GAAAgF,MAAAvB,KAAAuC,IAGA/G,KAAAwzB,qBAAA,WAEAC,QAAA,aAEA3yB,OAAA2F,IAAA3F,UAAA,WAAAQ,EAAAb,QAAA4V,oBAAAhB,OACA,WAEAvU,OAAAC,GAAAykB,cAAAE,UAAA,KAKA1lB,KAAAlB,KAAA,WAEAhB,EAAA,aAAA8C,KAAA,WAAA,KAEA9C,EAAA,wBAAAgB,KAAA,YAAA,SAAArC,GAAA6E,EAAA6xB,iBACAr1B,EAAA,2BAAAgB,KAAA,YAAA,SAAArC,GAAA6E,EAAA2xB,sBACAn1B,EAAA,8BAAAgB,KAAA,YAAA,SAAArC,GAAA6E,EAAAb,QAAAgV,uBACA3X,EAAA,iBAAAgB,KAAA,YAAA,SAAArC,GAAAqE,OAAAC,GAAAmC,SAAAC,cAAArD,EAAA,EAAAC,EAAA,MACAjC,EAAA,wBAAAgB,KAAA,QAAA,SAAArC,GAAA6E,EAAAb,QAAA0U,mBAAA,KACArX,EAAA,oBAAAgB,KAAA,QAAA,SAAArC,GAAA6E,EAAAb,QAAAmU,sBAEA9W,EAAA,SAAAgB,KAAA,QAAA,SAAArC,GAAA6E,EAAAiyB,aAEA7sB,OAAArJ,iBAAA,SAAAiE,EAAA0V,WAAA,GAEA5Z,SAAAC,iBAAA,OAAA,SAAAJ,GAEAa,EAAA,UAAA4W,GAAA,WAAApT,EAAAb,QAAAwT,KAAAhX,GACAa,EAAA,aAAA4W,GAAA,WAAApT,EAAAb,QAAA+V,SAAAvC,KAAAhX,KAGAG,SAAAC,iBAAA,QAAA,SAAAJ,GAEAa,EAAA,UAAA4W,GAAA,WAAApT,EAAAb,QAAA0R,MAAAlV,GACAa,EAAA,aAAA4W,GAAA,WAAApT,EAAAb,QAAA+V,SAAArE,MAAAlV,KAGAG,SAAAC,iBAAA,MAAA,SAAAJ,GAEAa,EAAA,UAAA4W,GAAA,WAAApT,EAAAb,QAAAuT,IAAA/W,GACAa,EAAA,aAAA4W,GAAA,WAAApT,EAAAb,QAAA+V,SAAAxC,IAAA/W,IAGA,IAAAy2B,GAAA,CAGA51B,GAAA,qBAAA2W,MAAA,SAAAxX,GAEA,OAAAA,EAAAsB,OAEA,IAAA,IACA,GAAAo1B,GAAA7D,KAAAC,MAAA2D,CACA,KAAAC,GAAAryB,EAAAkV,WAAAoa,aACA8C,EAAA,KAKA51B,EAAAV,UAAAJ,QAAA,SAAAC,GAEA,OAAAA,EAAAsB,OAEA,QACA+I,QAAAC,IAAA,UAAAtK,EAAAsB,MAEA,MACA,KAAA,IACA,GAAAtB,EAAAqB,SACA,CACA2zB,GAAAA,EACA3wB,EAAA0V,WAEA,IAAA4c,GAAAC,IAAAC,KAAA,MACAF,GAAAG,SAAA,sBACAH,EAAAI,QAAAC,QAAA,uBACAL,EAAAM,SAGA,KAEA,KAAA,KACAj3B,EAAA4X,SAAA5X,EAAA6X,WAEAhU,OAAAC,GAAAykB,cAAAhhB,OACAvH,EAAA6O,iBAEA,MACA,KAAA,KACA7O,EAAA4X,SAAA5X,EAAA6X,WAEA7X,EAAAqB,SAQAwC,OAAA2F,IAAAF,KAAA,WAAAmG,KAAA4mB,OAAA,cAAA,KAAA,SAAAlO,GAEAtkB,OAAAC,GAAAykB,cAAAE,UAAA,EACApkB,EAAAb,QAAAgV,mBAAA,WACArY,SAAAyoB,SAAAC,KAAA,aAAAV,EAAA/P,KACA+P,EAAA/P,IAAA+P,EAAA1Y,SAXApL,EAAAb,QAAAgV,qBACA3U,OAAAC,GAAAykB,cAAAE,UAAA,EACAzoB,EAAA6O,kBAcA,MACA,KAAA,KACA7O,EAAA4X,SAAA5X,EAAA6X,UAEAxT,EAAA+xB,eAEA,MACA,KAAA,IACA,GAAAp2B,EAAA4X,SAAA5X,EAAA6X,QAGA,WADAhU,QAAAC,GAAAykB,cAAAhhB,MAIA1G,GAAA,YAAAiF,OAEA,IAAAzB,EAAA0U,cAEA1U,EAAA2xB,oBAGAn1B,EAAA,YAAA4W,GAAA,YAEA5W,EAAA,YAAAiF,OAGAjF,EAAA,YAAA4W,GAAA,YAEA5W,EAAA,YAAAq2B,SAAAlmB,MAAA,UAAA,KAGAnQ,EAAA,iBAAA4W,GAAA,YAEA5W,EAAA,iBAAAiF,OAGAjF,EAAA,iBAAA4W,GAAA,YAEA5T,OAAAC,GAAAgF,MAAAhD,OAIAjC,OAAAC,GAAAmC,SAAAC,cAAArD,EAAA,EAAAC,EAAA,OAOAjC,EAAA,qBAAAd,QAAA,SAAAC,GAEA,OAAAA,EAAAsB,OAEA,IAAA,IACA,IAAAm1B,IAAAA,EAAA5D,KAAAC,MACA,MAEA,KAAA,IACAzuB,EAAAkV,WAAA2X,QAAA,GACA,MACA,KAAA,IACA7sB,EAAAkV,WAAA2X,QAAA,OAiCAnuB,KAAAo0B,aAAA,SAAA5kB,GAEA1O,OAAA2F,IAAAL,IAAA,gBAAAoJ,EACA,SAAA/J,GAEA6B,QAAAC,IAAA,OAAA9B,MAMAzF,KAAAq0B,SAAA,WAEAvzB,OAAA2F,IAAAL,IAAA,UACA,SAAAX,GAEAA,EAAA6uB,OAEAx2B,EAAA,cAAAiF,OACAjF,EAAA,aAAA0G,OACA1G,EAAA,aAAAiJ,KAAAtB,EAAA6uB,KAAAC,YAEA,SAAA9uB,GAEA3H,EAAA,cAAA0G,OACA1G,EAAA,aAAAiF,UAIA/C,KAAAw0B,KAAA,WAEArC,EAAA,GAAArxB,QAAAC,GAAAmM,MAAAlN,MACAmyB,EAAA3tB,KAAA0S,GAEAwa,IACApwB,EAAA+yB,aAMAj3B,SAAAC,iBAAA,mBAAA,SAAAZ,GAEAqB,EAAAV,UAAA0B,KAAA,cAAA,SAAA7B,GAEAA,EAAA6O,gBAAA7O,EAAA6O,mBAGAtL,IAAA,GAAAM,QAAAC,GAAA0wB,IAGAjxB,IAAAg0B,OACAh0B,IAAA1B,SCngBAgC,OAAAC,GAAAD,OAAAC,OAEAD,OAAAC,GAAAC,UAEAmB,SAAA,GACAmC,WAAA,EACAme,YAAA,EAEAngB,gBAAA,OACArB,UAAA,OACAwzB,eAAA,OACApR,iBAAA,OACArC,UAAA,OACAS,kBAAA,OACAiT,UAAA,UACAvmB,gBAAA,UACAwmB,eAAA,OACA1T,iBAAA,UAEA2T,cAAA,OACAxN,SAAA,UACAyN,cAAA,UACA7H,YAAA,UAEAhb,oBAAA,IACA8iB,gBAAAvkB,EAAA,IAAAC,EAAA,MAAAD,EAAA,KAAAC,EAAA,MAAAD,EAAA,KAAAC,EAAA,MAAAD,EAAA,EAAAC,EAAA,IAEApO,aAAA,SAAApD,GAEA,IAAAA,EAAA,MAAA,SACA,IAAAkR,GAAAlR,EAAAgd,SACA,OAAA9L,IAAA+L,mBAAA,UACA/L,GAAA6kB,sBAAA,UACA7kB,GAAA8kB,oBAAA,UACA9kB,GAAA+kB,mBAAA,UACA/kB,GAAAglB,qBAAA,OAEA,WAGAzwB,aAEAvD,eAAA,ICzCApD,EAAA,QAAAsM,GAAA,WAAA,SAAA3N,GAEAA,EAAAqP,iBACArP,EAAAkY,kBACA7W,EAAAkC,MAAAgI,SAAA,YACAlH,OAAAC,GAAAgF,MAAAvB,KAAA,yBACA2wB,OAAA14B,MAAA24B,MAAAxoB,KAAA,kBAGA9O,EAAA,QAAAsM,GAAA,YAAA,SAAA3N,GAEAA,EAAAqP,iBACArP,EAAAkY,kBACA7W,EAAAkC,MAAAiI,YAAA,cAGAnK,EAAA,QAAAsM,GAAA,OAAA,SAAA3N,GAEAA,EAAAqP,iBACArP,EAAAkY,kBAEA7T,OAAAC,GAAAgF,MAAAsE,YAAA,YAEA,IAAAsM,GAAAla,EAAA44B,aAAA1e,MACAnR,EAAA,gBAAAhF,IAAAC,QAAA4V,oBAAAhB,IAAA,QAEAigB,EAAA,GAAAC,SACAz3B,GAAAsgB,KAAAzH,EAAA,SAAAoa,EAAA1d,GAEAiiB,EAAAnrB,OAAA4mB,EAAA1d,IAIA,IAAAmiB,GAAA,GAAAC,eACAD,GAAAE,KAAA,OAAAlwB,GAEAgwB,EAAAG,OAAAC,WAAA,SAAAn5B,GAEA,GAAAA,EAAAo5B,iBACA,CACA,GAAAC,GAAAr5B,EAAAs5B,OAAAt5B,EAAAu5B,MAAA,IAAA,CACAl1B,QAAAC,GAAAgF,MAAAsE,YAAA,aAAAyrB,EAAA,OAIAN,EAAAS,OAAA,SAAAh5B,GAGA,GADAuD,IAAAC,QAAAiW,qBACA,MAAA8e,EAAAU,OAEAp1B,OAAAC,GAAAgF,MAAAhD,WAGA,CACA,GAAAuS,GAAA,UACAsI,EAAAlV,KAAA+J,MAAAxV,EAAA+yB,OAAAmG,SACA7gB,GAAAsI,EAAAtI,IAEAxU,OAAAC,GAAAgF,MAAAvB,KAAA,iBAAAgxB,EAAAU,OAAA,MAAA5gB,KAIAkgB,EAAAY,KAAAd","file":"cablesui.min.js","sourcesContent":["\nCABLES.UI=CABLES.UI || {};\n\nCABLES.UI.setStatusText=function(txt)\n{\n    $('#statusbar').html('&nbsp;'+txt);\n};\n\n\nCABLES.UI.showPreview=function(opid,which,onoff)\n{\n    var op=gui.scene().getOpById(opid);\n    if(!op)\n    {\n        console.log('opid not found:',opid);\n        return;\n    }\n    var port=op.getPort(which);\n    if(!port)\n    {\n        console.log('port not found:',which);\n        return;\n    }\n\n    port.doShowPreview(onoff);\n    if(!onoff)CGL.Texture.previewTexture=null;\n};\n\n\nCABLES.UI.togglePortValBool=function(which,checkbox)\n{\n    var bool_value = $('#'+which).val() == 'true';\n    bool_value=!bool_value;\n\n    if(bool_value)\n    {\n        $('#'+checkbox).addClass('fa-check-square-o');\n        $('#'+checkbox).removeClass('fa-square-o');\n    }\n    else\n    {\n        $('#'+checkbox).addClass('fa-square-o');\n        $('#'+checkbox).removeClass('fa-check-square-o');\n    }\n\n    $('#'+which).val(bool_value);\n    $('#'+which).trigger('input');\n};\n\n\nCABLES.UI.inputIncrement=function(v,dir)\n{\n    if(v=='true') return 'false';\n    if(v=='false') return 'true';\n\n    var val=parseFloat(v);\n    var add=0.1;\n    // if(val.)\n    // if(Math.abs(val)<2) add=0.1;\n    //     else if(Math.abs(val)<100) add=1;\n    //         else add=10;\n\n    var r=val+add*dir;\n\n    if(isNaN(r))r=0.0;\n    else\n        r= Math.round(1000*r)/1000;\n    return r;\n};\n\n\nfunction mouseEvent(event)\n{\n    if(!event.offsetX) event.offsetX = event.layerX;//(event.pageX - $(event.target).offset().left);\n    if(!event.offsetY) event.offsetY = event.layerY;//(event.pageY - $(event.target).offset().top);\n    return event;\n}\n\nHandlebars.registerHelper('json', function(context) {\n    return JSON.stringify(context);\n});\n\nHandlebars.registerHelper('console', function(context) {\n    return console.log(context);\n});\n\nHandlebars.registerHelper('compare', function(left_value, operator, right_value, options) {\n    var operators, result;\n\n    if (arguments.length < 4) {\n        throw new Error(\"Handlerbars Helper 'compare' needs 3 parameters, left value, operator and right value\");\n    }\n\n    operators = {\n        '==':       function(l,r) { return l == r; },\n        '===':      function(l,r) { return l === r; },\n        '!=':       function(l,r) { return l != r; },\n        '<':        function(l,r) { return l < r; },\n        '>':        function(l,r) { return l > r; },\n        '<=':       function(l,r) { return l <= r; },\n        '>=':       function(l,r) { return l >= r; },\n        'typeof':   function(l,r) { return typeof l == r; }\n    };\n\n    if ( ! operators[operator]) {\n        throw new Error(\"Handlerbars Helper 'compare' doesn't know the operator \"+ operator);\n    }\n\n    result = operators[operator](left_value, right_value);\n\n    if (result === true) {\n        return options.fn(this);\n    } else {\n        return options.inverse(this);\n    }\n});\n\n\n\nfunction valueChanger(ele)\n{\n    var isDown=false;\n    var startVal=$('#'+ele).val();\n    var el=document.getElementById(ele);\n\n    function keydown(e)\n    {\n    }\n\n    function down(e)\n    {\n        isDown=true;\n        document.addEventListener('pointerlockchange', lockChange, false);\n        document.addEventListener('mozpointerlockchange', lockChange, false);\n        document.addEventListener('webkitpointerlockchange', lockChange, false);\n\n        document.addEventListener('keydown', keydown, false);\n\n        el.requestPointerLock = el.requestPointerLock ||\n                                    el.mozRequestPointerLock ||\n                                    el.webkitRequestPointerLock;\n        el.requestPointerLock();\n    }\n\n    function up(e)\n    {\n        isDown=false;\n        document.removeEventListener('pointerlockchange', lockChange, false);\n        document.removeEventListener('mozpointerlockchange', lockChange, false);\n        document.removeEventListener('webkitpointerlockchange', lockChange, false);\n        document.removeEventListener('keydown', keydown, false);\n        document.exitPointerLock();\n\n        $( document ).unbind( \"mouseup\", up );\n        $( document ).unbind( \"mousedown\", down );\n\n        document.removeEventListener(\"mousemove\", move, false);\n    }\n\n    function move(e)\n    {\n        var v=parseFloat( $('#'+ele).val() ,10);\n        var inc=e.movementY*-0.5;\n        if(e.shiftKey || e.which==3)inc*=0.005;\n        \n        v+=inc;\n\n        $('#'+ele).val(v);\n        $('#'+ele).trigger('input');\n    }\n\n     function lockChange(e)\n     {\n        if (document.pointerLockElement === el || document.mozPointerLockElement === el || document.webkitPointerLockElement === el)\n        {\n            document.addEventListener(\"mousemove\", move, false);\n        }\n        else\n        {\n            //propably cancled by escape key / reset value\n            $('#'+ele).val(startVal);\n            $('#'+ele).trigger('input');\n            up();\n        }\n        \n    }\n\n    $( document ).bind( \"mouseup\", up );\n    $( document ).bind( \"mousedown\", down );\n\n}\n","var CABLES=CABLES || {};\nCABLES.UI= CABLES.UI || {};\n\nfunction getPortOpacity(port)\n{\n    if(!port)return;\n    if(port.direction==PORT_DIR_IN && (port.isAnimated() || port.isLinked() ))return 1.0;\n    return 0.6;\n}\n\nfunction getPortDescription(thePort)\n{\n    var str='<b>'+thePort.getName()+'</b>';\n    str+=' ['+thePort.getTypeString()+']';\n    if(thePort.isLinked() )str+=' press right mouse button to unlink port';\n    return str;\n}\n\n\nfunction Line(startX, startY)\n{\n    var start={ x:startX,y:startY};\n\n    this.updateEnd=function(x, y)\n    {\n        end.x = x;\n        end.y = y;\n        this.redraw();\n    };\n\n    var end = { x: startX, y: startY };\n    this.getPath = function()\n    {\n        var startX=start.x;\n        var startY=start.y;\n        var endX=end.x;\n        var endY=end.y;\n\n        return \"M \"+startX+\" \"+startY+\" L\" + endX + \" \" + endY;\n    };\n    this.thisLine = gui.patch().getPaper().path(this.getPath());\n    this.thisLine.attr({ stroke: CABLES.UI.uiConfig.colorLink, \"stroke-width\": 2});\n    this.redraw = function() { this.thisLine.attr(\"path\", this.getPath()); };\n}\n\nfunction UiLink(port1, port2)\n{\n    var self=this;\n    var middlePosX=30;\n    var middlePosY=30;\n    var addCircle=null;\n    this.linkLine=null;\n    this.p1=port1;\n    this.p2=port2;\n\n    this.hideAddButton=function()\n    {\n        if(addCircle)addCircle.remove();\n        addCircle=null;\n\n        if(this.linkLine)\n            this.linkLine.attr(\n            {\n                \"stroke-opacity\": 1,\n                \"stroke-width\": 1\n            });\n    };\n\n    this.showAddButton=function()\n    {\n        if(!this.isVisible())return;\n\n        this.linkLine.attr(\n        {\n            \"stroke-opacity\": 1.0,\n            \"stroke-width\": 2\n        });\n\n        if(addCircle===null)\n        {\n            addCircle = gui.patch().getPaper().circle(middlePosX,middlePosY, CABLES.UI.uiConfig.portSize*0.5).attr(\n            {\n                \"stroke\": CABLES.UI.uiConfig.getPortColor(self.p1.thePort ),\n                \"stroke-width\": 2,\n                \"fill\": CABLES.UI.uiConfig.colorBackground,\n            });\n\n            addCircle.hover(function (e)\n            {\n                var txt='left click: insert op / right click: delete link';\n                CABLES.UI.showToolTip(e,txt);\n                CABLES.UI.setStatusText(txt);\n            },function()\n            {\n                CABLES.UI.hideToolTip();\n            });\n            addCircle.toFront();\n\n            addCircle.node.onmousedown = function (event)\n            {\n                $('#library').hide();\n                $('#patch').focus();\n        \n                if(self.p1!==null)\n                {\n                    if(event.which==3)\n                    {\n                        self.p1.thePort.removeLinkTo( self.p2.thePort );\n                    }\n                    else\n                    {\n                        event=mouseEvent(event);\n                        CABLES.UI.OPSELECT.showOpSelect(gui.patch().getCanvasCoordsMouse(event),null,null,self);\n                    }\n                }\n            };\n        }\n        else\n        {\n            addCircle.attr({\n                cx:middlePosX,\n                cy:middlePosY\n            });\n            addCircle.toFront();\n\n        }\n    };\n\n    this.getPath = function()\n    {\n        if(!port2.rect)return '';\n        if(!port1.rect)return '';\n\n        if(!port2.rect.attrs)return '';\n        if(!port1.rect.attrs)return '';\n\n        var fromX=port1.rect.matrix.e+port1.rect.attrs.x+CABLES.UI.uiConfig.portSize/2;\n        var fromY=port1.rect.matrix.f+port1.rect.attrs.y;\n        var toX=port2.rect.matrix.e+port2.rect.attrs.x+CABLES.UI.uiConfig.portSize/2;\n        var toY=port2.rect.matrix.f+port2.rect.attrs.y;\n\n        middlePosX=0.5*(fromX+toX);\n        middlePosY=0.5*(fromY+toY);\n\n        var cp1X=0;\n        var cp1Y=0;\n\n        var cp2X=0;\n        var cp2Y=0;\n\n        cp1Y=Math.min(fromY,toY)+(Math.max(fromY,toY)-Math.min(fromY,toY))/2;\n        cp2Y=Math.min(fromY,toY)+(Math.max(fromY,toY)-Math.min(fromY,toY))/2;\n\n        if(toY > fromY)fromY+=CABLES.UI.uiConfig.portHeight;\n        if(fromY > toY) toY+=CABLES.UI.uiConfig.portHeight;\n\n        cp1X=Math.min(fromX,toX)+(Math.max(fromX,toX)-Math.min(fromX,toX))/4;\n        cp2X=Math.min(fromX,toX)+(Math.max(fromX,toX)-Math.min(fromX,toX))/4;\n\n\n        var difx=Math.min(fromX,toX)+Math.abs(toX-fromX);\n\n        cp1X=fromX-0;\n        cp2X=toX+0;\n\n        return \"M \"+fromX+\" \"+fromY+\" C \" + (cp1X) + \" \" + (cp1Y) +\" \"+ (cp2X) + \" \" + (cp2Y) +\" \"+ toX + \" \" + toY;\n    };\n\n\n    this.isVisible=function()\n    {\n        return self.linkLine!==null;\n    };\n\n    self.hide=function()\n    {\n        if(!this.isVisible())return;\n        this.linkLine.remove();\n        this.linkLine=null;\n    };\n\n    self.show=function()\n    {\n        if(this.isVisible())return;\n        this.redraw();\n    };\n\n    this.remove=function()\n    {\n        self.hide();\n    };\n\n    this.redraw = function()\n    {\n        if(!this.linkLine)\n        {\n            this.linkLine = gui.patch().getPaper().path(this.getPath());\n            this.linkLine.attr( CABLES.UI.uiConfig.linkingLine );\n            this.linkLine.attr({ \"stroke\": CABLES.UI.uiConfig.getPortColor(port1.thePort) });\n            \n            // this.linkLine.hover(function ()\n            // {\n            //     this.attr({stroke:CABLES.UI.uiConfig.colorLinkHover});\n            // }, function ()\n            // {\n            //     this.attr({stroke:CABLES.UI.uiConfig.getPortColor(self.p1.thePort)});\n            // });\n        }\n\n        this.linkLine.attr(\"path\", this.getPath());\n        this.linkLine.toFront();\n        this.showAddButton();\n    };\n\n    this.setEnabled=function(enabled)\n    {\n        if(enabled) this.linkLine.attr(\"opacity\", 1.0);\n            else this.linkLine.attr(\"opacity\", 0.3);\n    };\n}\n\n\n\n\n\n\n\n\nRaphael.el.setGroup = function (group) { this.group = group; };\nRaphael.el.getGroup = function () { return this.group; };\n\nvar OpRect = function (_opui,_x, _y, _w, _h, _text,objName)\n{\n    var isSelected=true;\n    var group = Raphael.fn.set();\n    var background = null;\n    var label=null;\n    var w=_w;\n    var h=_h;\n    var x=_x;\n    var y=_y;\n    var opui=_opui;\n    var title=_text;\n\n    this.getRect=function()\n    {\n        return background;\n    };\n\n    this.isVisible=function()\n    {\n        return label!==null;\n    };\n\n    this.removeUi=function()\n    {\n        if(!this.isVisible())return;\n\n        group.clear();\n        background.remove();\n        label.remove();\n        label=null;\n        background=null;\n    };\n\n    this.getWidth=function()\n    {\n        return w;\n    };\n\n    this.setWidth=function(_w)\n    {\n        w=_w;\n        if(this.isVisible()) background.attr({width:w});\n    };\n\n    function hover()\n    {\n        opui.isMouseOver=true;\n    }\n\n    function unhover()\n    {\n        opui.isMouseOver=false;\n    }\n\n    var dragger = function(x,y,ev)\n    {\n        $('#patch').focus();\n        if(opui.isSelected())return;\n\n        opui.showAddButtons();\n        if(!ev.shiftKey) gui.patch().setSelectedOp(null);\n        gui.patch().setSelectedOp(opui);\n    };\n\n    var move = function (dx, dy,a,b,e)\n    {\n        gui.patch().moveSelectedOps(dx,dy,a,b,e);\n    };\n\n    var up = function ()\n    {\n        gui.patch().moveSelectedOpsFinished();\n        gui.patch().showOpParams(opui.op);\n    };\n\n    this.addUi=function()\n    {\n        if(this.isVisible())return;\n\n        background=gui.patch().getPaper().rect(0, 0, w, h).attr(\n        {\n            \"fill\": CABLES.UI.uiConfig.colorOpBg,\n            \"stroke\": CABLES.UI.uiConfig.colorPatchStroke,\n            \"stroke-width\":0,\n            \"cursor\": \"move\"\n        });\n        label = gui.patch().getPaper().text(0+w/2,0+h/2+0, title);\n        $(label.node).css({'pointer-events': 'none'});\n\n        background.drag(move, dragger, up);\n        background.hover(hover,unhover);\n\n        background.node.ondblclick = function (ev)\n        {\n            gui.patch().setSelectedOp(null);\n            if(opui.op.objName=='Ops.Ui.Patch')\n                gui.patch().setCurrentSubPatch(opui.op.patchId.val);\n        };\n\n        background.onmouseup = function (ev)\n        {\n            opui.isDragging=false;\n        };\n\n        if(objName=='Ops.Ui.Patch')\n        {\n            background.attr({\n                'stroke-width':4,\n                'stroke': CABLES.UI.uiConfig.colorPatchStroke\n            });\n        }\n\n        group.push(background,label);\n    };\n\n    this.setEnabled=function(enabled)\n    {\n        if(this.isVisible())\n            if(enabled) background.attr( { \"fill-opacity\": 1 });\n                else background.attr( { \"fill-opacity\": 0.5 });\n    };\n\n    this.setSelected=function(sel)\n    {\n        // if(isSelected==sel)return;\n        isSelected=sel;\n        \n        if(this.isVisible())\n            if(sel) background.attr( { \"fill\": CABLES.UI.uiConfig.colorOpBgSelected });\n                else background.attr( { \"fill\": CABLES.UI.uiConfig.colorOpBg });\n    };\n\n    this.setTitle=function(t)\n    {\n        title=t;\n        if(label) label.attr({text:title});\n    };\n\n    this.getGroup=function()\n    {\n        return group;\n    };\n\n    // group.push(background);\n    group.transform('t'+x+','+y);\n};\n\nvar OpUi=function(paper,op,x,y,w,h,txt)\n{\n    var self=this;\n    this.links=[];\n    this.portsIn=[];\n    this.portsOut=[];\n    var hidden=false;\n    this.op=op;\n    var selected=false;\n    var width=w;\n\n    var oldUiAttribs='';\n    var startMoveX=-1;\n    var startMoveY=-1;\n    var olsPosX=0;\n    var olsPosY=0;\n    var posx=0;\n    var posy=0;\n    this.isMouseOver=false;\n\n    this.remove=function()\n    {\n        this.oprect.getGroup().remove();\n        this.oprect.removeUi();\n    };\n\n    this.getSubPatch=function()\n    {\n        if(!op.uiAttribs.subPatch)return 0;\n        else return op.uiAttribs.subPatch;\n    };\n\n    this.isSelected=function()\n    {\n        return selected;\n    };\n    this.hide=function()\n    {\n        hidden=true;\n        this.oprect.removeUi();\n        this.oprect.getGroup().hide();\n\n        var j=0;\n        for(j in self.portsIn) self.portsIn[j].removeUi();\n        for(j in self.portsOut) self.portsOut[j].removeUi();\n\n        for(j in self.links)\n        {\n            self.links[j].hide();\n            self.links[j].hideAddButton();\n        }\n    };\n\n    this.show=function()\n    {\n        hidden=false;\n        this.oprect.addUi();\n        this.oprect.getGroup().show();\n        \n\n        var j=0;\n        for(j in self.portsIn) self.portsIn[j].addUi(this.oprect.getGroup());\n        for(j in self.portsOut) self.portsOut[j].addUi(this.oprect.getGroup());\n        \n        // this.oprect.getGroup().transform('t'+posx+','+posy);\n\n        for(j in self.links) self.links[j].show();\n\n        self.setPos();\n    };\n\n    this.isHidden=function()\n    {\n        return hidden;\n    };\n\n    this.removeDeadLinks=function()\n    {\n        var found=true;\n\n        while(found)\n        {\n            found=false;\n            for(var j in self.links)\n            {\n                if(self.links[j].p1===null)\n                {\n                    self.links.splice(j,1);\n                    found=true;\n                }\n            }\n        }\n    };\n\n    this.showAddButtons=function()\n    {\n        if(this.isHidden())return;\n        self.removeDeadLinks();\n        for(var j in self.links) self.links[j].showAddButton();\n    };\n\n    this.hideAddButtons=function()\n    {\n        self.removeDeadLinks();\n        for(var j in self.links) self.links[j].hideAddButton();\n    };\n\n    this.doMoveFinished=function()\n    {\n        CABLES.undo.add({\n            undo: function()\n            {\n                try\n                {\n                    var u=JSON.parse(oldUiAttribs);\n                    self.setPos(u.translate.x,u.translate.y);\n                }catch(e){}\n            },\n            redo: function()\n            {\n            }\n        });\n\n        startMoveX=-1;\n        startMoveY=-1;\n        self.isDragging=false;\n    };\n\n    this.setPos=function(x,y)\n    {\n        if(isNumber(x))\n        {\n            posx=x;\n            posy=y;\n        }\n\n        if(self.oprect.getGroup())\n        {\n            self.oprect.getGroup().transform('t'+posx+','+posy);\n        }\n        self.op.uiAttribs.translate={x:posx,y:posy};\n\n        for(var j in self.links)\n            self.links[j].redraw();\n    };\n\n    this.doMove = function (dx, dy,a,b,e)\n    {\n        if(e.which==3)return;\n        if(e.which==2)return;\n\n        e=mouseEvent(e);\n\n        var pos=gui.patch().getCanvasCoordsMouse(e);\n\n        if(!self.op.uiAttribs)\n        {\n            self.op.uiAttribs={};\n            self.op.uiAttribs.translate={x:pos.x,y:pos.y};\n        }\n\n        if(startMoveX==-1 && self.op.uiAttribs.translate)\n        {\n            oldUiAttribs=JSON.stringify(self.op.uiAttribs);\n            startMoveX=pos.x-self.op.uiAttribs.translate.x;\n            startMoveY=pos.y-self.op.uiAttribs.translate.y;\n        }\n\n        pos.x=pos.x-startMoveX;\n        pos.y=pos.y-startMoveY;\n        var snapRange=10;\n        var snap=(pos.x%65)-snapRange;\n        if(snap>0 && snap<snapRange) pos.x-=snap;\n        if(snap<0 && snap>-snapRange) pos.x-=snap;\n\n        snap=(pos.y%50)-snapRange;\n        if(snap>0 && snap<snapRange) pos.y-=snap;\n        if(snap<0 && snap>-snapRange) pos.y-=snap;\n\n        // if(e.shiftKey===true)\n        // {\n        //     pos.x=parseInt(pos.x/25,10)*25;\n        //     pos.y=parseInt(pos.y/25,10)*25;\n        // }\n\n        self.setPos(pos.x,pos.y);\n        self.isDragging=true;\n    };\n\n    this.oprect=new OpRect(this,x,y,w,h, txt,self.op.objName);\n\n    this.setEnabled=function(en)\n    {\n        this.op.enabled=en;\n        this.oprect.setEnabled(en);\n\n        for(var i=0;i<this.links.length;i++)\n        {\n            this.links[i].setEnabled(en);\n        }\n\n    };\n\n    this.setSelected=function(sel)\n    {\n        selected=sel;\n        if(sel) self.showAddButtons();\n            else self.hideAddButtons();\n        self.isDragging=false;\n        this.oprect.setSelected(sel);\n    };\n\n\n    this.addPort=function(_inout,thePort)\n    {\n        var inout=_inout;\n\n        var portIndex=this.portsIn.length;\n        if(inout==PORT_DIR_OUT) portIndex=this.portsOut.length;\n\n\n        var w=(CABLES.UI.uiConfig.portSize+CABLES.UI.uiConfig.portPadding)*portIndex;\n        if(self.oprect.getWidth()<w+CABLES.UI.uiConfig.portSize) self.oprect.setWidth(w+CABLES.UI.uiConfig.portSize);\n\n        var port=new CABLES.UI.Port(thePort);\n\n        port.direction=inout;\n        port.op=self.op;\n        port.opUi=self;\n        port.portIndex=portIndex;\n\n\n        if(this.oprect.getRect()) port.addUi(this.oprect.getGroup());\n        \n\n\n\n        if(inout==PORT_DIR_OUT) this.portsOut.push(port);\n            else this.portsIn.push(port);\n\n    };\n};\n","function guid()\n{\n  function s4()\n  {\n    return Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  }\n  return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\n    s4() + '-' + s4() + s4() + s4();\n}\n\nvar pingDelay=10000;\nvar windowUUID=guid();\nvar delay=pingDelay;\nvar hasFailed=false;\n\nvar ping=function()\n{\n    $.ajax(\n    {\n        url: \"/api/ping/\"+windowUUID+'/editor',\n    })\n    .done(function()\n    {\n        delay=pingDelay;\n        if(hasFailed) CABLES.UI.setStatusText('connection to server ESTABLISHED...');\n        hasFailed=false;\n    })\n    .fail(function()\n    {\n        delay=pingDelay*2;\n        hasFailed=true;\n        CABLES.UI.setStatusText('connection to server lost...');\n    });\n\n    setTimeout(ping,delay);\n};\n\nping();\n","CABLES =CABLES || {};\nCABLES.UI =CABLES.UI || {};\n\nCABLES.UI.getHandleBarHtml=function(name,obj)\n{\n    var source   = $(\"#\"+name).html();\n    var template = Handlebars.compile(source);\n    var context = obj;\n    return template(context);\n};\n\nfunction isNumber (o) {\n  return ! isNaN (o-0) && o !== null && o !== \"\" && o !== false;\n}\n\nCABLES.UI.getWheelSpeed=function(event)\n{\n    var normalized;\n    if (event.wheelDelta)\n    {\n        normalized = (event.wheelDelta % 120 - 0) == -0 ? event.wheelDelta / 120 : event.wheelDelta / 12;\n    }\n    else\n    {\n        var rawAmmount = event.deltaY ? event.deltaY : event.detail;\n        normalized = -(rawAmmount % 3 ? rawAmmount * 10 : rawAmmount / 3);\n    }\n    return normalized*-0.2;\n};","\nvar CABLES=CABLES || {};\n\n\nCABLES.API=function()\n{\n\n    function request(method,url,data,cbSuccess,cbError)\n    {\n\n        $.ajax(\n        {\n            method: method,\n            url: \"/api/\"+url,\n            data: data\n        })\n        .done(function(data)\n        {\n            // console.log( \"success \"+data );\n            if(cbSuccess) cbSuccess(data);\n        })\n        .fail(function(data)\n        {\n            if(CABLES && CABLES.UI && CABLES.UI.MODAL)\n            {\n                if(data.statusText=='NOT_LOGGED_IN')\n                {\n                    CABLES.UI.MODAL.showError('not logged in','<br/>you are not logged in, so you can not save projects, or upload files. so all will be lost :/<br/><br/><br/><a class=\"bluebutton\" href=\"/signup\">sign up</a> <a class=\"bluebutton\" style=\"background-color:#222\" onclick=\"CABLES.UI.MODAL.hide()\">continue</a> <br/><br/> ');\n                }\n                else\n                {\n                    CABLES.UI.MODAL.show('ajax error: '+data.statusText);\n                }\n\n            }\n        \n            if(cbError)cbError(data.responseJSON);\n        })\n        .always(function()\n        {\n            // console.log( \"complete\" );\n        });\n\n    }\n\n    this.get=function(url,cb,cbErr)\n    {\n        request(\"GET\",url,{},cb,cbErr);\n    };\n\n    this.post=function(url,data,cb,cbErr)\n    {\n        request(\"POST\",url,data,cb,cbErr);\n    };\n\n    this.delete=function(url,data,cb,cbErr)\n    {\n        request(\"DELETE\",url,data,cb,cbErr);\n    };\n\n    this.put=function(url,data,cb,cbErr)\n    {\n        request(\"PUT\",url,data,cb,cbErr);\n    };\n\n\n\n};\n\nif(!CABLES.api) CABLES.api=new CABLES.API();","\nwindow.onerror=function(err,file,row)\n{\n    var str=\"\";\n    str+='<h2><span class=\"fa fa-exclamation-triangle\"></span> cablefail :/</h2>';\n    str+='error:'+err+'<br/>';\n    str+='<br/>';\n    str+='file: '+file+'<br/>';\n    str+='row: '+row+'<br/>';\n\n    CABLES.UI.MODAL.show(str);\n};\n","//http://html5doctor.com/drag-and-drop-to-server/\n\n\nCABLES =CABLES || {};\nCABLES.UI =CABLES.UI || {};\nCABLES.UI.MODAL=CABLES.UI.MODAL || {};\n\nCABLES.UI.MODAL.hide=function()\n{\n    mouseNewOPX=0;\n    mouseNewOPY=0;\n\n    $('#modalcontent').html('');\n    $('#modalcontent').hide();\n    $('#modalbg').hide();\n    $('.tooltip').hide();\n    \n};\n\nCABLES.UI.MODAL.show=function(content)\n{\n    $('#modalcontent').html('<div class=\"modalclose\"><a class=\"button fa fa-times\" onclick=\"CABLES.UI.MODAL.hide();\"></a></div>');\n    $('#modalcontent').append(content);\n    $('#modalcontent').show();\n    $('#modalbg').show();\n\n    $('#modalbg').on('click',function(){\n        CABLES.UI.MODAL.hide();\n    });\n};\n\n\nCABLES.UI.MODAL.showLoading=function(title,content)\n{\n    $('#modalcontent').html('<div style=\"text-align:center;\"><h3>'+title+'</h3><i class=\"fa fa-4x fa-cog fa-spin\"></i><br/><br/><div>');\n    $('#modalcontent').append(content);\n    $('#modalcontent').show();\n    $('#modalbg').show();\n};\n\nCABLES.UI.MODAL.showError=function(title,content)\n{\n\n$('#modalcontent').html('<div class=\"modalclose\"><a class=\"button fa fa-times\" onclick=\"CABLES.UI.MODAL.hide();\"></a></div>');\n    $('#modalcontent').append('<h2><span class=\"fa fa-exclamation-triangle\"></span>&nbsp;'+title+'</h2>');\n    $('#modalcontent').append(content);\n    $('#modalcontent').show();\n    $('#modalbg').show();\n\n    $('#modalbg').on('click',function(){\n        CABLES.UI.MODAL.hide();\n    });\n};\n\n","CABLES =CABLES || {};\nCABLES.UI =CABLES.UI || {};\nCABLES.UI.OPSELECT=CABLES.UI.OPSELECT || {};\n\nCABLES.UI.OPSELECT.linkNewLink=null;\nCABLES.UI.OPSELECT.linkNewOpToPort=null;\nCABLES.UI.OPSELECT.linkNewOpToOp=null;\nCABLES.UI.OPSELECT.newOpPos={x:0,y:0};\n\nCABLES.UI.OPSELECT.showOpSelect=function(pos,linkOp,linkPort,link)\n{\n    CABLES.UI.OPSELECT.linkNewLink=link;\n    CABLES.UI.OPSELECT.linkNewOpToPort=linkPort;\n    CABLES.UI.OPSELECT.linkNewOpToOp=linkOp;\n    CABLES.UI.OPSELECT.newOpPos=pos;\n\n    var html = CABLES.UI.getHandleBarHtml('op_select',{ops: CABLES.UI.OPSELECT.getOpList() });\n    CABLES.UI.MODAL.show(html);\n\n    $('#opsearch').focus();\n    $('#opsearch').on('input',function(e)\n    {\n        var searchFor= $('#opsearch').val();\n\n        if(!searchFor)\n            $('#search_style').html('.searchable:{display:block;}');\n        else\n            $('#search_style').html(\".searchable:not([data-index*=\\\"\" + searchFor.toLowerCase() + \"\\\"]) { display: none; }\");\n    });\n\n\n    $( \".searchresult:first\" ).addClass( \"selected\" );\n\n    var displayBoxIndex=0;\n    var Navigate = function(diff)\n    {\n        displayBoxIndex += diff;\n\n        if (displayBoxIndex < 0) displayBoxIndex = 0;\n        var oBoxCollection = $(\".searchresult:visible\");\n        var oBoxCollectionAll = $(\".searchresult\");\n        if (displayBoxIndex >= oBoxCollection.length) displayBoxIndex = 0;\n        if (displayBoxIndex < 0) displayBoxIndex = oBoxCollection.length - 1;\n\n        var cssClass = \"selected\";\n        oBoxCollectionAll.removeClass(cssClass);\n\n        oBoxCollection.removeClass(cssClass).eq(displayBoxIndex).addClass(cssClass);\n    };\n\n    function onInput(e)\n    {\n        // $(\".searchresult:visible\").first().addClass( \"selected\" );\n        displayBoxIndex=0;\n        Navigate(0);\n    }\n\n    $('#opsearch').on('input',onInput);\n\n    $('#opsearch').keydown(function(e)\n    {\n        switch(e.which)\n        {\n            case 13:\n                var opname=$('.selected').data('opname');\n                gui.scene().addOp(opname);\n                CABLES.UI.MODAL.hide();\n            break;\n\n            case 8:\n                onInput();\n                return true;\n            break;\n\n            case 37: // left\n            break;\n\n            case 38: // up\n                $('.selected').removeClass('selected');\n                Navigate(-1);\n            break;\n\n            case 39: // right\n            break;\n\n            case 40: // down\n                $('.selected').removeClass('selected');\n                Navigate(1);\n            break;\n\n            default: return; // exit this handler for other keys\n        }\n        e.preventDefault(); // prevent the default action (scroll / move caret)\n    });\n\n    setTimeout(function(){$('#opsearch').focus();},100);\n\n};\n\nCABLES.UI.OPSELECT.getOpList=function()\n{\n    var ops=[];\n\n    function getop(val,parentname)\n    {\n        if (Object.prototype.toString.call(val) === '[object Object]')\n        {\n            for (var propertyName in val)\n            {\n                if (val.hasOwnProperty(propertyName))\n                {\n                    var html='';\n                    var opname='Ops.'+ parentname + propertyName + '';\n\n                    var isOp=false;\n                    var isFunction=false;\n                    if(eval('typeof('+opname+')')==\"function\") isFunction=true;\n\n                    if(isFunction)\n                    {\n                        var op=\n                        {\n                            isOp:isOp,\n                            name:opname,\n                            lowercasename:opname.toLowerCase()\n                        };\n                        ops.push(op);\n                    }\n\n                    found=getop(val[propertyName],parentname+propertyName+'.');\n                }\n            }\n        }\n    }\n\n    getop(Ops,'');\n\n    ops.sort(function(a, b)\n    {\n        return a.name.length - b.name.length; // ASC -> a - b; DESC -> b - a\n    });\n\n\n    return ops;\n};\n\n\n\n","\nvar CABLES=CABLES || {};\nCABLES.UI= CABLES.UI || {};\n\nCABLES.UI.Patch=function(_gui)\n{\n    var self=this;\n    this.ops=[];\n    this.scene=null;\n    var gui=_gui;\n    \n    var watchPorts=[];\n    var currentProject=null;\n    var currentOp=null;\n    var spacePressed=false;\n    var selectedOps=[];\n    var currentSubPatch=0;\n\n    var viewBox={x:0,y:0,w:1100,h:1010};\n    var lastMouseMoveEvent=null;\n\n    var rubberBandStartPos=null;\n    var rubberBandPos=null;\n    var mouseRubberBandStartPos=null;\n    var mouseRubberBandPos=null;\n    var rubberBandRect=null;\n    var isLoading=false;\n\n    this.isLoading=function()\n    {\n        return isLoading;\n    };\n\n    this.getPaper=function()\n    {\n        return self.paper;\n    };\n\n    this.paste=function(e)\n    {\n        if(e.clipboardData.types.indexOf('text/plain') > -1)\n        {\n            var str=e.clipboardData.getData('text/plain');\n\n            e.preventDefault();\n\n            var json=JSON.parse(str);\n\n        console.log('paste json',json);\n        \n\n            if(json)\n            {\n                if(json.ops)\n                {\n\n                            \n                    var i=0,j=0;\n                    { // change ids\n\n                        for(i in json.ops)\n                        {\n                            var searchID=json.ops[i].id;\n                            var newID=json.ops[i].id=generateUUID();\n\n                            json.ops[i].uiAttribs.pasted=true;\n\n\n                            for(j in json.ops)\n                            {\n                                if(json.ops[j].portsIn)\n                                for(var k in json.ops[j].portsIn)\n                                {\n                                    if(json.ops[j].portsIn[k].links)\n                                    {\n                                        var l=json.ops[j].portsIn[k].links.length;\n                                        while(l--)\n                                        {\n                                            console.log('json.ops[j].portsIn[k].links[l]',json.ops[j].portsIn[k].links[l]);\n                                                    \n                                            if(json.ops[j].portsIn[k].links[l]===null)\n                                            {\n                                                        console.log('delete null link');\n                                                        \n                                                json.ops[j].portsIn[k].links.splice(l,1);\n                                            }\n                                            \n                                        }\n\n                                        \n                                        for(var l in json.ops[j].portsIn[k].links)\n                                        {\n                                            if(json.ops[j].portsIn[k].links[l].objIn==searchID) json.ops[j].portsIn[k].links[l].objIn=newID;\n                                            if(json.ops[j].portsIn[k].links[l].objOut==searchID) json.ops[j].portsIn[k].links[l].objOut=newID;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n\n                    { // set correct subpatch\n\n                        var fixedSubPatches=[];\n                        for(i=0;i<json.ops.length;i++)\n                        {\n\n                            if(json.ops[i].objName=='Ops.Ui.Patch')\n                            {\n\n                                for(var k in json.ops[i].portsIn)\n                                {\n                                    if(json.ops[i].portsIn[k].name=='patchId')\n                                    {\n                                        var oldSubPatchId=parseInt(json.ops[i].portsIn[k].value,10);\n                                        var newSubPatchId=json.ops[i].portsIn[k].value=Ops.Ui.Patch.maxPatchId+1;\n        \n                                        console.log('oldSubPatchId',oldSubPatchId);\n                                        console.log('newSubPatchId',newSubPatchId);\n\n                                        for(j=0;j<json.ops.length;j++)\n                                        {\n                                            console.log('json.ops[j].uiAttribs.subPatch',json.ops[j].uiAttribs.subPatch);\n                                                    \n                                            if(parseInt(json.ops[j].uiAttribs.subPatch,10)==oldSubPatchId)\n                                            {\n                                                console.log('found child patch');\n                                                        \n                                                json.ops[j].uiAttribs.subPatch=newSubPatchId;\n                                                fixedSubPatches.push(json.ops[j].id);\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n\n                        for(i in json.ops)\n                        {\n                            var found=false;\n                            for(j=0;j<fixedSubPatches.length;j++)\n                            {\n                                if(json.ops[i].id==fixedSubPatches[j])\n                                {\n                                    found=true;\n                                    break;\n                                }\n                            }\n                            if(!found)\n                            {\n                                json.ops[i].uiAttribs.subPatch=currentSubPatch;\n                            }\n                        }\n                    }\n\n                    { // change position of ops to paste\n                        var minx=Number.MAX_VALUE;\n                        var miny=Number.MAX_VALUE;\n\n                        for(i in json.ops)\n                        {\n                            if(json.ops[i].uiAttribs && json.ops[i].uiAttribs && json.ops[i].uiAttribs.translate)\n                            {\n                                minx=Math.min(minx, json.ops[i].uiAttribs.translate.x);\n                                miny=Math.min(miny, json.ops[i].uiAttribs.translate.y);\n                            }\n                        }\n\n                        for(i in json.ops)\n                        {\n                            if(json.ops[i].uiAttribs && json.ops[i].uiAttribs && json.ops[i].uiAttribs.translate)\n                            {\n\n                                var mouseX=0,\n                                    mouseY=0;\n                                if(lastMouseMoveEvent)\n                                {\n                                    mouseX=gui.patch().getCanvasCoordsMouse(lastMouseMoveEvent).x;\n                                    mouseY=gui.patch().getCanvasCoordsMouse(lastMouseMoveEvent).y;\n                                }\n\n                                json.ops[i].uiAttribs.translate.x=json.ops[i].uiAttribs.translate.x+mouseX-minx;\n                                json.ops[i].uiAttribs.translate.y=json.ops[i].uiAttribs.translate.y+mouseY-miny;\n                            }\n                        }\n                    }\n\n                    CABLES.UI.setStatusText('pasted '+json.ops.length+' ops...');\n                    self.setSelectedOp(null);\n                    gui.patch().scene.deSerialize(json);\n\n\n                    // setTimeout(function()\n                    // {\n                    //     for(i in json.ops)\n                    //     {\n                    //         console.log('json.ops[i].id',json.ops[i].id);\n\n                    //         self.addSelectedOpById(json.ops[i].id);\n                    //     }\n                    // },500);\n\n\n\n\n\n                    return;\n                }\n            }\n            CABLES.UI.setStatusText(\"paste failed / not cables data format...\");\n        }\n    };\n\n    this.cut=function(e)\n    {\n        self.copy(e);\n        self.deleteSelectedOps();\n    };\n\n    this.copy=function(e)\n    {\n        var ops=[];\n        var opIds=[];\n        var j=0,i=0,k=0,l=0;\n        for(i in selectedOps)\n        {\n            ops.push( selectedOps[i].op.getSerialized() );\n            opIds.push(selectedOps[i].op.id);\n        }\n\n\n        // remove links that are not fully copied...\n        for(i=0;i<ops.length;i++)\n        {\n            for( j=0;j<ops[i].portsIn.length;j++)\n            {\n                if(ops[i].portsIn[j].links)\n                {\n                    k=ops[i].portsIn[j].links.length;\n                    while(k--)\n                    {\n                        if(ops[i].portsIn[j].links[k] && ops[i].portsIn[j].links[k].objIn && ops[i].portsIn[j].links[k].objOut)\n                        {\n                            if(!arrayContains(opIds,ops[i].portsIn[j].links[k].objIn) || !arrayContains(opIds,ops[i].portsIn[j].links[k].objOut))\n                            {\n                                ops[i].portsIn[j].links[k]=null;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        var obj={\"ops\":ops};\n        var objStr=JSON.stringify(obj);\n\n        CABLES.UI.setStatusText('copied '+selectedOps.length+' ops...');\n\n        e.clipboardData.setData('text/plain', objStr);\n        e.preventDefault();\n    };\n\n    $('#patch').keyup(function(e)\n    {\n        switch(e.which)\n        {\n            case 32:\n                spacePressed=false;\n            break;\n        }\n    });\n\n    $('#patch').keydown(function(e)\n    {\n        switch(e.which)\n        {\n            case 32:\n                spacePressed=true;\n            break;\n\n            case 46: case 8: // delete\n                if($(\"input\").is(\":focus\")) return;\n\n                self.deleteSelectedOps();\n                if(e.stopPropagation) e.stopPropagation();\n                if(e.preventDefault) e.preventDefault();\n                self.showProjectParams();\n            break;\n\n            case 68: // d - disable\n                for(var j in selectedOps)\n                    selectedOps[j].setEnabled(!selectedOps[j].op.enabled);\n            break;\n\n            case 90: // z undo\n                if(e.metaKey || e.ctrlKey)\n                {\n                    if(e.shiftKey) CABLES.undo.redo();\n                    else CABLES.undo.undo();\n                }\n            break;\n\n            case 65: // a - align\n                if(e.metaKey || e.ctrlKey)\n                {\n                    self.selectAllOps();\n                }\n                else\n                {\n                    if(e.shiftKey) self.alignSelectedOpsHor();\n                    else self.alignSelectedOpsVert();\n                }\n            break;\n\n            case 71: // g show graphs\n                // self.setCurrentSubPatch(0);\n                self.showSelectedOpsGraphs();\n            break;\n\n\n            case 49: // / - test\n                self.setCurrentSubPatch(0);\n            break;\n\n            default:\n                // console.log('key ',e.which);\n            break;\n\n        }\n    });\n    \n\n    this.exportStatic=function()\n    {\n        CABLES.UI.MODAL.showLoading('exporting project');\n\n        CABLES.api.get(\n            'project/'+currentProject._id+'/export',\n            function(r)\n            {\n                var msg='';\n\n                if(r.error)\n                {\n                    msg=\"<h2>export error</h2>\";\n                    msg+='<div class=\"shaderErrorCode\">'+JSON.stringify(r)+'<div>';\n                }\n                else\n                {\n                    msg=\"<h2>export finished</h2>\";\n                    msg+='size: '+r.size+' mb';\n                    msg+='<br/><br/><br/>';\n                    msg+='<a class=\"bluebutton\" href=\"'+r.path+'\">download</a>';\n                    msg+='<br/><br/>';\n                    msg+='<pre>'+r.log+'<pre>';\n                }\n\n                CABLES.UI.MODAL.show(msg);\n            });\n        \n    };\n\n    this.saveCurrentProject=function(cb,_id,_name)\n    {\n        CABLES.UI.MODAL.showLoading('saving project');\n\n        gui.patch().scene.cgl.doScreenshot=true;\n    \n        var id=currentProject._id;\n        var name=currentProject.name;\n        if(_id)id=_id;\n        if(_name)name=_name;\n\n        setTimeout(function()\n        {\n            var data=gui.patch().scene.serialize(true);\n\n            data.ui={viewBox:{}};\n            data.ui.viewBox.w=viewBox.w;\n            data.ui.viewBox.h=viewBox.h;\n            data.ui.viewBox.x=viewBox.x;\n            data.ui.viewBox.y=viewBox.y;\n\n            data.ui.renderer={};\n            data.ui.renderer.w=gui.rendererWidth;\n            data.ui.renderer.h=gui.rendererHeight;\n\n            data=JSON.stringify(data);\n            console.log('data.length',data.length);\n                    \n\n            CABLES.api.put(\n                'project/'+id,\n                {\n                    \"name\":name,\n                    \"data\":data,\n                    \"screenshot\":gui.patch().scene.cgl.screenShotDataURL\n                },\n                function(r)\n                {\n                    if(r.success===true) CABLES.UI.setStatusText('project saved');\n                    else CABLES.UI.setStatusText('project NOT saved');\n\n                    CABLES.UI.MODAL.hide();\n                    if(cb)cb();\n                });\n        },30);\n    };\n\n    this.getCurrentProject=function()\n    {\n        return currentProject;\n    };\n\n    this.setCurrentProject=function(proj)\n    {\n        if(self.timeLine) self.timeLine.clear();\n\n        currentProject=proj;\n        if(currentProject===null)\n        {\n            $('#serverproject').hide();\n            $('#projectfiles').hide();\n        }\n        else\n        {\n            $('#projectfiles').show();\n            $('#serverproject').show();\n            $('#serverprojectname').html(proj.name);\n            self.updateProjectFiles(proj);\n            $('.viewProjectLink').attr('href','/view/'+proj._id);\n        }\n    };\n\n    this.updateProjectFiles=function(proj)\n    {\n        if(!proj)proj=currentProject;\n        $('#projectfiles').html('');\n\n        CABLES.api.get(\n            'project/'+currentProject._id+'/files',\n            function(files)\n            {\n                proj.files=files;\n                var html='';\n                html+=CABLES.UI.getHandleBarHtml('tmpl_projectfiles_list',proj);\n                html+=CABLES.UI.getHandleBarHtml('tmpl_projectfiles_upload',proj);\n\n                $('#projectfiles').html(html);\n            });\n    };\n\n    this.updateViewBox=function()\n    {\n        if(!isNaN(viewBox.x) && !isNaN(viewBox.y) && !isNaN(viewBox.w) && !isNaN(viewBox.h))\n            self.paper.setViewBox( viewBox.x, viewBox.y, viewBox.w, viewBox.h );\n    };\n\n    function rubberBandHide()\n    {\n        mouseRubberBandStartPos=null;\n        mouseRubberBandPos=null;\n        if(rubberBandRect) rubberBandRect.hide();\n    }\n\n    function setStatusSelectedOps()\n    {\n        var txt='';\n        txt+=selectedOps.length+\" ops selected / [del] delete ops / [a] align ops / [g] show grapghs \";\n        // txt+='<a class=\"fa fa-line-chart\" data-tt=\"show graphs of all selected ops\" onclick=\"gui.patch().showSelectedOpsGraphs()\" ></a>';\n        CABLES.UI.setStatusText(txt);\n    }\n\n    this.selectAllOpsSubPatch=function(subPatch)\n    {\n        for(var i in self.ops)\n        {\n            if(self.ops[i].getSubPatch()==subPatch)\n            {\n                self.addSelectedOp(self.ops[i]);\n                self.ops[i].setSelected(true);\n            }\n        }\n        setStatusSelectedOps();\n\n    };\n\n    this.selectAllOps=function()\n    {\n        this.selectAllOpsSubPatch(currentSubPatch);\n    };\n\n    function rubberBandMove(e)\n    {\n                \n\n\n        if(e.buttons==1 && !spacePressed)\n        {\n            if(!mouseRubberBandStartPos)\n            {\n                gui.patch().setSelectedOp(null);\n                mouseRubberBandStartPos=gui.patch().getCanvasCoordsMouse(e);//e.offsetX,e.offsetY);\n            }\n                    console.log('rubber!');\n                    \n            mouseRubberBandPos=gui.patch().getCanvasCoordsMouse(e);//e.offsetX,e.offsetY);\n\n            if(!rubberBandRect) rubberBandRect=self.paper.rect( 0,0,10,10).attr({ });\n            rubberBandRect.show();\n            var start={x:mouseRubberBandStartPos.x,y:mouseRubberBandStartPos.y};\n            var end={x:mouseRubberBandPos.x,y:mouseRubberBandPos.y};\n\n            if(end.x-start.x<0)\n            {\n                var tempx=start.x;\n                start.x=end.x;\n                end.x=tempx;\n            }\n            if(end.y-start.y<0)\n            {\n                var tempy=start.y;\n                start.y=end.y;\n                end.y=tempy;\n            }\n\n            rubberBandRect.attr({\n                    x:start.x,\n                    y:start.y,\n                    width:end.x-start.x,\n                    height:end.y-start.y,\n                    \"stroke\": CABLES.UI.uiConfig.colorRubberBand,\n                    \"fill\": CABLES.UI.uiConfig.colorRubberBand,\n                    \"stroke-width\": 2,\n                    \"fill-opacity\": 0.1\n               });\n\n            for(var i in self.ops)\n            {\n                if(!self.ops[i].isHidden() )\n                {\n\n\n                    var rect=self.ops[i].oprect.getRect();\n                    if(rect && rect.matrix)\n                    {\n                        var opX=rect.matrix.e;\n                        var opY=rect.matrix.f;\n                        var opW=rect.attr(\"width\");\n                        var opH=rect.attr(\"height\");\n\n                        if(\n                            (opX>start.x && opX<end.x && opY>start.y && opY<end.y) ||  // left upper corner\n                            (opX+opW>start.x && opX+opW<end.x && opY+opH>start.y && opY+opH<end.y)  // right bottom corner\n\n                            )\n                        {\n                            self.addSelectedOp(self.ops[i]);\n                            self.ops[i].setSelected(true);\n\n\n                        }\n                        else\n                        {\n                            self.removeSelectedOp(self.ops[i]);\n                            self.ops[i].setSelected(false);\n                        }\n\n                    }\n                }\n            }\n\n            if(selectedOps.length===0) CABLES.UI.setStatusText('');\n                else setStatusSelectedOps();\n        }\n    }\n\n    // ---------------------------------------------\n\n    this.setProject=function(proj)\n    {\n        if(proj.ui)\n        {\n            if(proj.ui.viewBox)\n            {\n                viewBox.x=proj.ui.viewBox.x;\n                viewBox.y=proj.ui.viewBox.y;\n                viewBox.w=proj.ui.viewBox.w;\n                viewBox.h=proj.ui.viewBox.h;\n            }\n\n            if(proj.ui.renderer)\n            {\n                gui.rendererWidth=proj.ui.renderer.w;\n                gui.rendererHeight=proj.ui.renderer.h;\n                gui.setLayout();\n            }\n        }\n        self.updateViewBox();\n        currentSubPatch=0;\n        self.setCurrentProject(proj);\n        gui.scene().clear();\n\n        gui.scene().deSerialize(proj);\n        CABLES.undo.clear();\n        CABLES.UI.MODAL.hide();\n        self.updateSubPatches();\n    };\n\n    this.show=function(_scene)\n    {\n        this.scene=_scene;\n\n        $('#timing').append(CABLES.UI.getHandleBarHtml('timeline_controler'),{});\n        $('#meta').append();\n\n        this.paper= Raphael(\"patch\",0, 0);\n        this.bindScene(self.scene);\n\n        viewBox={x:0,y:0,w:$('#patch svg').width(),h:$('#patch svg').height()};\n        self.updateViewBox();\n\n        $('#patch svg').bind(\"mousewheel\", function (event,delta,nbr)\n        {\n            delta=CABLES.UI.getWheelSpeed(event);\n                    // console.log('delta',delta);\n                    \n            event=mouseEvent(event);\n            if(viewBox.w-delta >0 &&  viewBox.h-delta >0 )\n            {\n                viewBox.x+=delta/2;\n                viewBox.y+=delta/2;\n                viewBox.w-=delta;\n                viewBox.h-=delta;\n            }\n\n            self.updateViewBox();\n        });\n\n        var background = self.paper.rect(-99999, -99999, 2*99999, 2*99999).attr({\n            fill: CABLES.UI.uiConfig.colorBackground,\n            \"stroke-width\":0\n        });\n\n        background.toBack();\n\n        background.node.onmousedown = function (ev)\n        {\n            $('#library').hide();\n            $('#patch').focus();\n\n            gui.patch().setSelectedOp(null);\n            self.showProjectParams();\n        };\n\n        $('#patch').on(\"mousemove\", function(e)\n        {\n\n            if(e.buttons==1 && !spacePressed)\n            {\n                for(var i in self.ops)\n                    if(!self.ops[i].isHidden() && ( self.ops[i].isDragging || self.ops[i].isMouseOver))\n                        return;\n\n                rubberBandMove(e);\n            }\n        });\n\n        $('#patch svg').bind(\"mouseup\", function (event)\n        {\n            rubberBandHide();\n        });\n    \n        $('#patch svg').bind(\"mousemove\", function (e)\n        {\n            e=mouseEvent(e);\n\n            if(mouseRubberBandStartPos && e.buttons!=1) rubberBandHide();\n\n            if(e.buttons==2 || e.buttons==3 || (e.buttons==1 && spacePressed))\n            {\n                var mouseX=gui.patch().getCanvasCoordsMouse(lastMouseMoveEvent).x;\n                var mouseY=gui.patch().getCanvasCoordsMouse(lastMouseMoveEvent).y;\n\n                viewBox.x+=mouseX-gui.patch().getCanvasCoordsMouse(e).x;//.offsetX,e.offsetY).x;\n                viewBox.y+=mouseY-gui.patch().getCanvasCoordsMouse(e).y;//e.offsetX,e.offsetY).y;\n\n                self.updateViewBox();\n            }\n\n            lastMouseMoveEvent=e;\n\n        });\n\n        this.timeLine=new CABLES.TL.UI.TimeLineUI();\n\n        gui.setLayout();\n    };\n\n    function doLink()\n    {\n\n    }\n\n    function doAddOp(uiOp)\n    {\n        var op=uiOp.op;\n\n        if(!isLoading)\n        {\n            var undofunc=function(opid,objName)\n            {\n                CABLES.undo.add({\n                    undo: function() {\n                        gui.scene().deleteOp( opid,true);\n                    },\n                    redo: function() {\n                        gui.scene().addOp(objName,op.uiAttribs,opid);\n                    }\n                });\n\n            }(op.id,op.objName);\n        }\n\n        op.onAddPort=function(p)\n        {\n            uiOp.addPort(p.direction,p);\n            uiOp.setPos(op.uiAttribs.translate.x,op.uiAttribs.translate.y);\n        };\n\n\n        if(op.uiAttribs && op.uiAttribs.subPatch)\n        {\n            if(op.uiAttribs.subPatch!=currentSubPatch) uiOp.hide();\n        }\n\n\n        for(var i in op.portsIn)\n        {\n            var p=op.portsIn[i];\n\n            if(!p.uiAttribs )p.uiAttribs={};\n\n            if(p.uiAttribs.display!='readonly')\n                uiOp.addPort(PORT_DIR_IN,p);\n\n    \n            if(p.uiAttribs.hasOwnProperty('display'))\n            {\n                if(p.uiAttribs.display=='dropdown') p.uiAttribs.type='string';\n                if(p.uiAttribs.display=='file') p.uiAttribs.type='string';\n                if(p.uiAttribs.display=='bool') p.uiAttribs.type='bool';\n            }\n\n        }\n\n        for(var i2 in op.portsOut)\n        {\n            uiOp.addPort(PORT_DIR_OUT,op.portsOut[i2]);\n        }\n\n        if(!op.uiAttribs)\n        {\n            op.uiAttribs={};\n        }\n\n        if(!op.uiAttribs.translate)\n        {\n            if(CABLES.UI.OPSELECT.newOpPos.y===0 && CABLES.UI.OPSELECT.newOpPos.x===0) op.uiAttribs.translate={x:viewBox.x+viewBox.w/2,y:viewBox.y+viewBox.h/2};\n                else op.uiAttribs.translate={x:CABLES.UI.OPSELECT.newOpPos.x,y:CABLES.UI.OPSELECT.newOpPos.y};\n        }\n\n\n        if(op.uiAttribs.hasOwnProperty('translate'))\n        {\n            uiOp.setPos(op.uiAttribs.translate.x,op.uiAttribs.translate.y);\n            // uiOp.oprect.getRect().getGroup().translate(op.uiAttribs.translate.x,op.uiAttribs.translate.y);\n        }\n        if(op.uiAttribs.hasOwnProperty('title'))\n        {\n            gui.patch().setOpTitle(uiOp,op.uiAttribs.title);\n        }\n\n        if(!op.uiAttribs.hasOwnProperty('subPatch'))\n        {\n            op.uiAttribs.subPatch=currentSubPatch;\n        }\n\n        if(CABLES.UI.OPSELECT.linkNewLink)\n        {\n            console.log('add into link...');\n\n            var op1=CABLES.UI.OPSELECT.linkNewLink.p1.op;\n            var port1=CABLES.UI.OPSELECT.linkNewLink.p1.thePort;\n            var op2=CABLES.UI.OPSELECT.linkNewLink.p2.op;\n            var port2=CABLES.UI.OPSELECT.linkNewLink.p2.thePort;\n\n            for(var il in port1.links)\n            {\n                if(\n                    port1.links[il].portIn==port1 && port1.links[il].portOut==port2 ||\n                    port1.links[il].portOut==port1 && port1.links[il].portIn==port2)\n                    {\n                        port1.links[il].remove();\n                    }\n            }\n\n            var foundPort1=op.findFittingPort(port1);\n            var foundPort2=op.findFittingPort(port2);\n\n            if(foundPort2 && foundPort1)\n            {\n                gui.scene().link(\n                    op,\n                    foundPort1.getName(),\n                    op1,\n                    port1.getName()\n                    );\n\n                gui.scene().link(\n                    op,\n                    foundPort2.getName(),\n                    op2,\n                    port2.getName()\n                    );\n            }\n        }\n        else\n        if(CABLES.UI.OPSELECT.linkNewOpToPort)\n        {\n            var foundPort=op.findFittingPort(CABLES.UI.OPSELECT.linkNewOpToPort);\n\n            if(foundPort)\n            {\n                var link=gui.patch().scene.link(\n                    CABLES.UI.OPSELECT.linkNewOpToOp,\n                    CABLES.UI.OPSELECT.linkNewOpToPort.getName(),\n                    op,\n                    foundPort.getName());\n            }\n        }\n\n        uiOp.setPos(op.uiAttribs.translate.x,op.uiAttribs.translate.y);\n\n        CABLES.UI.OPSELECT.linkNewOpToOp=null;\n        CABLES.UI.OPSELECT.linkNewLink=null;\n        CABLES.UI.OPSELECT.linkNewOpToPort=null;\n        CABLES.UI.OPSELECT.newOpPos={x:0,y:0};\n\n        uiOp.setPos();\n\n        if(!isLoading)\n        {\n            setTimeout(function()\n            {\n                if(currentSubPatch==uiOp.getSubPatch()) uiOp.show();\n                gui.patch().setSelectedOp(null);\n                gui.patch().setSelectedOp(uiOp);\n                gui.patch().showOpParams(op);\n            },30);\n        }\n\n\n        // select ops after pasing...\n        setTimeout(function()\n        {\n            if(uiOp.op.uiAttribs.pasted)\n            {\n                delete uiOp.op.uiAttribs.pasted;\n                gui.patch().addSelectedOpById(uiOp.op.id);\n                uiOp.setSelected(true);\n                setStatusSelectedOps();\n            }\n        } ,30);\n\n        uiOp.wasAdded=true;\n    }\n\n    this.bindScene=function(scene)\n    {\n        scene.onLoadStart=function()\n        {\n            isLoading=true;\n        };\n        scene.onLoadEnd=function()\n        {\n            isLoading=false;\n            self.setCurrentSubPatch(currentSubPatch);\n        };\n\n        scene.onUnLink=function(p1,p2)\n        {\n            // console.log('on unlink');\n\n            for(var i in self.ops)\n            {\n                self.ops[i].removeDeadLinks();\n\n                for(var j in self.ops[i].links)\n                {\n                    if(\n                        (self.ops[i].links[j].p1.thePort==p1 && self.ops[i].links[j].p2.thePort==p2) ||\n                        (self.ops[i].links[j].p1.thePort==p2 && self.ops[i].links[j].p2.thePort==p1))\n                        {\n                            var undofunc=function(p1Name,p2Name,op1Id,op2Id)\n                            {\n\n                                CABLES.undo.add({\n                                    undo: function()\n                                    {\n                                        scene.link(scene.getOpById(op1Id), p1Name , scene.getOpById(op2Id), p2Name);\n                                    },\n                                    redo: function()\n                                    {\n                                        var op1=scene.getOpById(op1Id);\n                                        var op2=scene.getOpById(op2Id);\n                                        if(!op1 || !op2){ console.warn('undo: op not found'); return; }\n                                        op1.getPortByName(p1Name).removeLinkTo( op2.getPortByName(p2Name) );\n                                    }\n                                });\n                            }(self.ops[i].links[j].p1.thePort.getName(),\n                                self.ops[i].links[j].p2.thePort.getName(),\n                                self.ops[i].links[j].p1.thePort.parent.id,\n                                self.ops[i].links[j].p2.thePort.parent.id\n                                );\n\n                            self.ops[i].links[j].hideAddButton();\n                            self.ops[i].links[j].p1=null;\n                            self.ops[i].links[j].p2=null;\n                            self.ops[i].links[j].remove();\n\n                        }\n                }\n            }\n        };\n\n        scene.onLink=function(p1,p2)\n        {\n            var uiPort1=null;\n            var uiPort2=null;\n            for(var i in self.ops)\n            {\n                for(var j in self.ops[i].portsIn)\n                {\n                    if(self.ops[i].portsIn[j].thePort==p1) uiPort1=self.ops[i].portsIn[j];\n                    if(self.ops[i].portsIn[j].thePort==p2) uiPort2=self.ops[i].portsIn[j];\n                }\n                for(var jo in self.ops[i].portsOut)\n                {\n                    if(self.ops[i].portsOut[jo].thePort==p1) uiPort1=self.ops[i].portsOut[jo];\n                    if(self.ops[i].portsOut[jo].thePort==p2) uiPort2=self.ops[i].portsOut[jo];\n                }\n            }\n    \n            var thelink=new UiLink(uiPort1,uiPort2);\n\n            uiPort1.opUi.links.push(thelink);\n            uiPort2.opUi.links.push(thelink);\n\n            if(!uiPort1.opUi.isHidden())\n            {\n                thelink.show();\n            }\n\n            var undofunc=function(p1Name,p2Name,op1Id,op2Id)\n            {\n                CABLES.undo.add({\n                    undo: function()\n                    {\n                        var op1=scene.getOpById(op1Id);\n                        var op2=scene.getOpById(op2Id);\n                        if(!op1 || !op2){ console.warn('undo: op not found'); return; }\n                        op1.getPortByName(p1Name).removeLinkTo( op2.getPortByName(p2Name) );\n                    },\n                    redo: function()\n                    {\n                        scene.link(scene.getOpById(op1Id), p1Name , scene.getOpById(op2Id), p2Name);\n                    }\n                });\n            }(p1.getName(),p2.getName(),p1.parent.id,p2.parent.id);\n        };\n\n        scene.onDelete=function(op)\n        {\n            var undofunc=function(opname,opid)\n            {\n                CABLES.undo.add({\n                    undo: function() {\n                        gui.scene().addOp(opname,op.uiAttribs,opid);\n                    },\n                    redo: function() {\n                        gui.scene().deleteOp( opid,false);\n                    }\n                });\n            }(op.objName,op.id);\n\n            for(var i in self.ops)\n            {\n                if(self.ops[i].op==op)\n                {\n                    self.ops[i].hideAddButtons();\n                    self.ops[i].remove();\n                    self.ops.splice( i, 1 );\n                }\n            }\n        };\n\n        scene.onAdd=function(op)\n        {\n            $('#patch').focus();\n            var uiOp=new OpUi(self.paper,op,CABLES.UI.OPSELECT.newOpPos.x,CABLES.UI.OPSELECT.newOpPos.y, 100, 31, op.name);\n            self.ops.push(uiOp);\n            uiOp.wasAdded=false;\n\n            doAddOp(uiOp);\n        };\n    };\n\n    this.setOpTitle=function(uiop,t)\n    {\n        uiop.op.uiAttribs.title=t;\n        uiop.op.name=t;\n        uiop.oprect.setTitle(t);\n    };\n\n    this.setCurrentOpTitle=function(t)\n    {\n        if(currentOp) this.setOpTitle(currentOp,t);\n    };\n\n    this.updateSubPatches=function()\n    {\n        if(isLoading)return;\n        for(var i in self.ops)\n        {\n            if(!self.ops[i].op.uiAttribs.subPatch)self.ops[i].op.uiAttribs.subPatch=0;\n\n            if(self.ops[i].op.uiAttribs.subPatch==currentSubPatch)\n            {\n                self.ops[i].show();\n            }\n            else\n            {\n                self.ops[i].hide();\n            }\n        }\n    };\n\n    this.getCurrentSubPatch=function()\n    {\n        return currentSubPatch;\n    };\n\n    this.setCurrentSubPatch=function(which)\n    {\n        if(which===0) $('#button_subPatchBack').hide();\n            else $('#button_subPatchBack').show();\n\n        currentSubPatch=which;\n        self.updateSubPatches();\n\n        $('#patch').focus();\n    };\n\n\n    this.showSelectedOpsGraphs=function()\n    {\n        gui.timeLine().clear();\n\n        var doShow=true;\n        var count=0;\n        if(selectedOps.length>0)\n        {\n            for(var j=0;j<selectedOps.length;j++)\n            {\n                for(var i=0;i<selectedOps[j].portsIn.length;i++)\n                {\n                    if(selectedOps[j].portsIn[i].thePort.isAnimated() && selectedOps[j].portsIn[i].thePort.anim)\n                    {\n                        if(count===0)\n                        {\n                            doShow=!selectedOps[j].portsIn[i].thePort.anim.stayInTimeline;\n                        }\n\n                        selectedOps[j].portsIn[i].thePort.anim.stayInTimeline=doShow;\n                        self.timeLine.setAnim(selectedOps[j].portsIn[i].thePort.anim);\n                        count++;\n                    }\n                }\n            }\n        }\n        if(!doShow)\n            gui.timeLine().clear();\n\n\n    };\n\n\n    this.alignSelectedOpsVert=function()\n    {\n        if(selectedOps.length>0)\n        {\n            var j=0;\n            var sum=0;\n            for(j in selectedOps) sum+=selectedOps[j].op.uiAttribs.translate.x;\n\n            var avg=sum/selectedOps.length;\n\n            for(j in selectedOps) selectedOps[j].setPos(avg,selectedOps[j].op.uiAttribs.translate.y);\n        }\n    };\n\n    this.alignSelectedOpsHor=function()\n    {\n        if(selectedOps.length>0)\n        {\n            var j=0;\n            var sum=0;\n            for(j in selectedOps)\n                sum+=selectedOps[j].op.uiAttribs.translate.y;\n\n            var avg=sum/selectedOps.length;\n\n            for(j in selectedOps)\n                selectedOps[j].setPos(selectedOps[j].op.uiAttribs.translate.x,avg);\n        }\n    };\n\n    \n    this.deleteSelectedOps=function()\n    {\n        for(var i in selectedOps)\n            gui.patch().scene.deleteOp( selectedOps[i].op.id,true);\n    };\n\n    this.removeSelectedOp=function(uiop)\n    {\n        for(var i in selectedOps)\n        {\n            if(selectedOps[i]==uiop)\n            {\n                selectedOps.splice(i,1);\n                return;\n            }\n        }\n    };\n\n    this.setSelectedOpById=function(id)\n    {\n        for(var i in gui.patch().ops)\n        {\n            if(gui.patch().ops[i].op.id==id)\n            {\n                gui.patch().setSelectedOp(null);\n                gui.patch().setSelectedOp(gui.patch().ops[i]);\n                gui.patch().showOpParams(gui.patch().ops[i].op);\n                return;\n            }\n        }\n    };\n\n    this.addSelectedOpById=function(id)\n    {\n        for(var i in gui.patch().ops)\n        {\n            if(gui.patch().ops[i].op.id==id)\n            {\n                self.addSelectedOp(gui.patch().ops[i]);\n                console.log('found sel op by id !');\n\n                return;\n            }\n        }\n    };\n\n    this.setSelectedOp=function(uiop)\n    {\n        if(uiop===null )\n        {\n            selectedOps.length=0;\n            for(var i in gui.patch().ops)\n            {\n                gui.patch().ops[i].setSelected(false);\n                gui.patch().ops[i].hideAddButtons();\n            }\n            return;\n        }\n\n        self.addSelectedOp(uiop);\n        // selectedOps.push(uiop);\n        uiop.setSelected(true);\n    };\n\n    this.addSelectedOp=function(uiop)\n    {\n        if(uiop.op.objName=='Ops.Ui.Patch')\n            self.selectAllOpsSubPatch(uiop.op.patchId.val);\n\n        uiop.oprect.setSelected(true);\n        for(var i in selectedOps) if(selectedOps[i]==uiop)return;\n        selectedOps.push(uiop);\n    };\n\n    this.moveSelectedOpsFinished=function()\n    {\n        for(var i in selectedOps)\n            selectedOps[i].doMoveFinished();\n    };\n\n    this.moveSelectedOps=function(dx,dy,a,b,e)\n    {\n        for(var i in selectedOps)\n            selectedOps[i].doMove(dx,dy,a,b,e);\n    };\n\n    this.updateOpParams=function(id)\n    {\n        self.showOpParams(gui.scene().getOpById(id));\n    };\n\n    this.showProjectParams=function(op)\n    {\n        var s={};\n\n        s.name=currentProject.name;\n        s.settings=gui.scene().settings;\n\n        var numVisibleOps=0;\n        for(var i in self.ops)\n        {\n            if(!self.ops[i].isHidden())numVisibleOps++;\n        }\n\n        var html = CABLES.UI.getHandleBarHtml('params_project',{project: s,\n            debug:\n            {\n                numOps:gui.scene().ops.length,\n                numVisibleOps:numVisibleOps,\n                numSvgElements: $('#patch svg *').length,\n            }\n            \n        });\n        \n\n        $('#options').html(html);\n    };\n\n    this.saveProjectParams=function()\n    {\n        var proj_name=$('#projectsettings_name').val();\n        var proj_public=$('#projectsettings_public').val();\n\n        currentProject.name=proj_name;\n        gui.scene().settings=gui.scene().settings || {};\n        gui.scene().settings.isPublic=proj_public;\n    };\n\n    function updateUiAttribs()\n    {\n        if(!currentOp.op.uiAttribs.warning || currentOp.op.uiAttribs.warning.length===0)\n        {\n            $('#options_warning').hide();\n        }\n        else\n        {\n            $('#options_warning').show();\n            $('#options_warning').html(currentOp.op.uiAttribs.warning);\n        }\n\n        if(!currentOp.op.uiAttribs.info) $('#options_info').hide();\n        else\n        {\n            $('#options_info').show();\n            $('#options_info').html(currentOp.op.uiAttribs.info);\n        }\n    }\n\n    this.showOpParams=function(op)\n    {\n\n        if(currentOp)currentOp.onUiAttrChange=null;\n        { // show first anim in timeline\n            if(self.timeLine)\n            {\n                var foundAnim=false;\n                for(var i in op.portsIn)\n                {\n                    if(op.portsIn[i].isAnimated())\n                    {\n                        self.timeLine.setAnim(op.portsIn[i].anim,{name:op.portsIn[i].name});\n                        foundAnim=true;\n                        continue;\n                    }\n                }\n                if(!foundAnim) self.timeLine.setAnim(null);\n            }\n        }\n\n        for(var iops in this.ops)\n            if(this.ops[iops].op==op)\n                currentOp=this.ops[iops];\n\n        currentOp.op.onUiAttrChange=updateUiAttribs;\n\n        watchPorts=[];\n        watchAnimPorts=[];\n        watchColorPicker=[];\n\n        var html = CABLES.UI.getHandleBarHtml('params_op_head',{op: op});\n        var sourcePort = $(\"#params_port\").html();\n        var templatePort = Handlebars.compile(sourcePort);\n\n        html += CABLES.UI.getHandleBarHtml('params_ports_head',{title:'in',});\n\n        for(var i in op.portsIn)\n        {\n            op.portsIn[i].watchId='in_'+i;\n            watchAnimPorts.push(op.portsIn[i]);\n\n            if(op.portsIn[i].uiAttribs.colorPick) watchColorPicker.push(op.portsIn[i]);\n            if(op.portsIn[i].isLinked() || op.portsIn[i].isAnimated()) watchPorts.push(op.portsIn[i]);\n\n            html += templatePort( {port: op.portsIn[i],dirStr:\"in\",portnum:i,isInput:true,op:op } );\n        }\n\n        html += CABLES.UI.getHandleBarHtml('params_ports_head',{title:'out',op: op});\n\n        for(var i2 in op.portsOut)\n        {\n            if(op.portsOut[i2].getType()==OP_PORT_TYPE_VALUE)\n            {\n                op.portsOut[i2].watchId='out_'+i2;\n                watchPorts.push(op.portsOut[i2]);\n            }\n\n            html += templatePort( {port: op.portsOut[i2],dirStr:\"out\",portnum:i2,isInput:false,op: op } );\n        }\n\n        html += CABLES.UI.getHandleBarHtml('params_op_foot',{op: op});\n\n        $('#options').html(html);\n        updateUiAttribs();\n\n        for(var ipo in op.portsOut)\n        {\n            (function (index)\n            {\n                $('#portdelete_out_'+index).on('click',function(e)\n                {\n                    op.portsOut[index].removeLinks();\n                    self.showOpParams(op);\n                });\n            })(ipo);\n        }\n\n        for(var ipi in op.portsIn)\n        {\n            (function (index)\n            {\n                if(op.portsIn[index].isAnimated()) $('#portanim_in_'+index).addClass('timingbutton_active');\n                if(op.portsIn[index].isAnimated() && op.portsIn[index].anim.stayInTimeline) $('#portgraph_in_'+index).addClass('timingbutton_active');\n\n                $('#portgraph_in_'+index).on('click',function(e)\n                {\n                    if(op.portsIn[index].isAnimated())\n                    {\n                        op.portsIn[index].anim.stayInTimeline=!op.portsIn[index].anim.stayInTimeline;\n                        $('#portgraph_in_'+index).toggleClass('timingbutton_active');\n                        self.timeLine.setAnim(op.portsIn[index].anim,{name:op.portsIn[index].name,defaultValue:parseFloat( $('#portval_'+index).val())} );\n                    }\n                });\n\n                $('#portanim_in_'+index).on('click',function(e)\n                {\n                    if( $('#portanim_in_'+index).hasClass('timingbutton_active') )\n                    {\n                        \n                        var val=self.timeLine.removeAnim(op.portsIn[index].anim);\n                        op.portsIn[index].setAnimated(false);\n\n                        self.timeLine.setAnim(null);\n                        // op.portsIn[index].anim=null;\n                        $('#portanim_in_'+index).removeClass('timingbutton_active');\n                        $('#portval_'+index).val(val);\n                        $('#portval_'+index).trigger('input');\n                        $('#portval_'+index).focus();\n                        return;\n                    }\n\n                    $('#portanim_in_'+index).addClass('timingbutton_active');\n\n                    op.portsIn[index].toggleAnim();\n                    self.timeLine.setAnim(op.portsIn[index].anim,{name:op.portsIn[index].name,defaultValue:parseFloat( $('#portval_'+index).val())} );\n                });\n            })(ipi);\n        }\n\n        for(var ipip in op.portsIn)\n        {\n            (function (index)\n            {\n                $('#portdelete_in_'+index).on('click',function(e)\n                {\n                    op.portsIn[index].removeLinks();\n                    self.showOpParams(op);\n                });\n            })(ipip);\n        }\n\n        for(var ipii in op.portsIn)\n        {\n            (function (index)\n            {\n                $('#portval_'+index).on('input',function(e)\n                {\n                    var v=''+$('#portval_'+index).val();\n\n                    if(!op.portsIn[index].uiAttribs.type || op.portsIn[index].uiAttribs.type=='number')\n                    {\n                        if(isNaN(v) || v==='' )\n                        {\n                            $('#portval_'+index).addClass('invalid');\n                            return;\n                        }\n                        else\n                        {\n                            $('#portval_'+index).removeClass('invalid');\n                        }\n                    }\n                    if(op.portsIn[index].uiAttribs.type=='int')\n                    {\n                        if(isNaN(v) || v==='' )\n                        {\n                            $('#portval_'+index).addClass('invalid');\n                            return;\n                        }\n                        else\n                        {\n                            $('#portval_'+index).removeClass('invalid');\n                            v=parseInt(v,10);\n                        }\n\n                    }\n                    if(op.portsIn[index].uiAttribs.display=='bool')\n                    {\n                        if(v!='true' && v!='false' )\n                        {\n                            v=false;\n                            $('#portval_'+index).val('false');\n                        }\n                        if(v=='true')v=true;\n                        else v=false;\n                    }\n                            \n                    op.portsIn[index].val=v;\n                    if(op.portsIn[index].isAnimated())\n                        {\n                                    console.log('is animatedddd');\n                                    \n                            gui.timeLine().scaleHeightDelayed();\n                        }\n                });\n            })(ipii);\n        }\n\n        for(var iwap in watchAnimPorts)\n        {\n            var thePort=watchAnimPorts[iwap];\n            (function (thePort)\n            {\n                var id='.watchPortValue_'+thePort.watchId;\n\n                $(id).on(\"focusin\", function()\n                {\n                    if(thePort.isAnimated() )gui.timeLine().setAnim(thePort.anim,{name:thePort.name});\n                });\n\n            })(thePort);\n        }\n\n        for(var iwcp in watchColorPicker)\n        {\n            var thePort=watchColorPicker[iwcp];\n            (function (thePort)\n            {\n                var id='#watchcolorpick_'+thePort.watchId;\n                var c1=Math.round(255*$(id).parent().next('td').find('input.value').val());\n                var c2=Math.round(255*$(id).parent().parent().next('tr').find('input.value').val());\n                var c3=Math.round(255*$(id).parent().parent().next('tr').next('tr').find('input.value').val());\n\n                $(id).css('background-color','rgb('+c1+','+c2+','+c3+')');\n\n                $(id).colorPicker(\n                {\n                    opacity:true,\n                    margin: '4px -2px 0',\n                    doRender: 'div div',\n                    renderCallback:function(res)\n                    {\n                        var colors = this.color.colors;\n\n                        $(id).parent().next('td').find('input.value').val(colors.rgb.r).trigger('input');\n                        $(id).parent().parent().next('tr').find('input.value').val(colors.rgb.g).trigger('input');\n                        $(id).parent().parent().next('tr').next('tr').find('input.value').val(colors.rgb.b).trigger('input');\n\n                        $(id).parent().next('td').find('input.range').val(colors.rgb.r).trigger('input');\n                        $(id).parent().parent().next('tr').find('input.range').val(colors.rgb.g).trigger('input');\n                        $(id).parent().parent().next('tr').next('tr').find('input.range').val(colors.rgb.b).trigger('input');\n\n                        modes = {\n                            r: Math.round(colors.rgb.r*255), g: Math.round(colors.rgb.g*255), b: Math.round(colors.rgb.b*255),\n                            h: colors.hsv.h, s: colors.hsv.s, v: colors.hsv.v,\n                            HEX: this.color.colors.HEX\n                        };\n\n                        $('input', '.cp-panel').each(function() {\n                            this.value = modes[this.className.substr(3)];\n                        });\n                    },\n                    buildCallback: function($elm)\n                    {\n                        var colorInstance = this.color,\n                            colorPicker = this;\n\n                        $elm.prepend('<div class=\"cp-panel\">' +\n                            'R <input type=\"text\" class=\"cp-r\" /><br>' +\n                            'G <input type=\"text\" class=\"cp-g\" /><br>' +\n                            'B <input type=\"text\" class=\"cp-b\" /><hr>' +\n                            'H <input type=\"text\" class=\"cp-h\" /><br>' +\n                            'S <input type=\"text\" class=\"cp-s\" /><br>' +\n                            'B <input type=\"text\" class=\"cp-v\" /><hr>' +\n                            '<input type=\"text\" class=\"cp-HEX\" />' +\n                        '</div>').on('change', 'input', function(e) {\n                            var value = this.value,\n                                className = this.className,\n                                type = className.split('-')[1],\n                                color = {};\n\n                            color[type] = value;\n                            colorInstance.setColor(type === 'HEX' ? value : color,\n                                type === 'HEX' ? 'HEX' : /(?:r|g|b)/.test(type) ? 'rgb' : 'hsv');\n                            colorPicker.render();\n                            this.blur();\n                        });\n                    }\n                });\n\n            })(thePort);\n        }\n\n    };\n\n    function doWatchPorts()\n    {\n        for(var i in watchPorts)\n        {\n            var id='.watchPortValue_'+watchPorts[i].watchId;\n            if(watchPorts[i].isAnimated() )\n            {\n                if( $(id).val()!=watchPorts[i].val ) $(id).val( watchPorts[i].val );\n            }\n            else\n            {\n                $(id).html( watchPorts[i].val );\n            }\n        }\n\n        if(CABLES.UI.uiConfig.watchValuesInterval>0) setTimeout( doWatchPorts,CABLES.UI.uiConfig.watchValuesInterval);\n    }\n\n    this.getCanvasCoordsMouse=function(evt)\n    {\n        var ctm = $('#patch svg')[0].getScreenCTM();\n\n        ctm = ctm.inverse();\n        var uupos = $('#patch svg')[0].createSVGPoint();\n\n        uupos.x = evt.clientX;\n        uupos.y = evt.clientY;\n\n        uupos = uupos.matrixTransform(ctm);\n        \n        var res={x:uupos.x,y:uupos.y};\n        return res;\n    };\n\n    this.addAssetOp=function(url,suffix,title)\n    {\n        var uiAttr={'title':title,translate:{x:viewBox.x+viewBox.w/2,y:viewBox.y+viewBox.h/2}};\n        var op;\n        if(suffix=='.obj')\n        {\n            op=gui.scene().addOp('Ops.Gl.Meshes.ObjMesh',uiAttr);\n            op.getPort('file').val=url;\n        }\n        else\n        if(suffix=='.png' || suffix=='.jpg')\n        {\n            op=gui.scene().addOp('Ops.Gl.Texture',uiAttr);\n            op.getPort('file').val=url;\n        }\n        else\n        if(suffix=='.mp3' || suffix=='.ogg')\n        {\n            op=gui.scene().addOp('Ops.WebAudio.AudioPlayer',uiAttr);\n            op.getPort('file').val=url;\n        }\n        else\n        {\n            CABLES.UI.setStatusText('unknown file type');\n        }\n    };\n\n    doWatchPorts();\n\n};\n\n","\n\n\n\n\n\nCABLES.UI.Port=function(thePort)\n{\n    var self=this;\n    this.thePort=null;\n    this.rect=null;\n    this.portIndex=0;\n    this.thePort=thePort;\n    this.opUi=null;\n    var xpos=0,\n        ypos=0;\n\n    var linkingLine=null;\n\n    function changeActiveState()\n    {\n        for(var i=0;i<self.opUi.links.length;i++)\n            if(self.opUi.links[i].p1.thePort==self.thePort || self.opUi.links[i].p2.thePort==self.thePort)\n                self.opUi.links[i].setEnabled(self.thePort.getUiActiveState());\n    }\n\n    function dragStart(x,y,event)\n    {\n        $('#patch').focus();\n        if(!linkingLine)\n        {\n            this.startx=this.matrix.e+this.attrs.x;\n            this.starty=this.matrix.f+this.attrs.y;\n        }\n    }\n\n    function dragMove(dx, dy,a,b,event)\n    {\n        if(event.which==3)return;\n        if(event.which==2)return;\n\n        if(self.thePort.direction==PORT_DIR_IN && (self.thePort.isLinked() || self.thePort.isAnimated()) )  return;\n\n        if(!linkingLine)\n        {\n            linkingLine = new Line(this.startx+CABLES.UI.uiConfig.portSize/2,this.starty+CABLES.UI.uiConfig.portHeight);\n        }\n        else\n        {\n            self.opUi.isDragging=true;\n            event=mouseEvent(event);\n\n            linkingLine.updateEnd(\n                gui.patch().getCanvasCoordsMouse(event).x,\n                gui.patch().getCanvasCoordsMouse(event).y\n                );\n        }\n\n        if(!selectedEndPort || !selectedEndPort.thePort)\n        {\n            CABLES.UI.setStatusText('select a port to link...');\n        }\n        else\n        {\n            var txt=Link.canLinkText(selectedEndPort.thePort,self.thePort);\n            if(txt=='can link') CABLES.UI.setStatusText(  getPortDescription(selectedEndPort.thePort));\n                else CABLES.UI.setStatusText( txt );\n\n            if(txt=='can link') txt='<i class=\"fa fa-check\"></i>';\n                else txt='<i class=\"fa fa-times\"></i> '+txt;\n            CABLES.UI.showToolTip(event,txt+' '+getPortDescription(selectedEndPort.thePort));\n        }\n\n        if(selectedEndPort && selectedEndPort.thePort && Link.canLink(selectedEndPort.thePort,self.thePort))\n            linkingLine.thisLine.attr({ stroke: CABLES.UI.uiConfig.colorLink });\n        else\n            linkingLine.thisLine.attr({ stroke: CABLES.UI.uiConfig.colorLinkInvalid });\n    }\n\n    function dragEnd(event)\n    {\n        if(event.which==3)\n        {\n            self.thePort.removeLinks();\n            return;\n        }\n\n        if(selectedEndPort && selectedEndPort.thePort && Link.canLink(selectedEndPort.thePort,self.thePort))\n        {\n            var link=gui.patch().scene.link(selectedEndPort.op, selectedEndPort.thePort.getName() , self.op, self.thePort.getName());\n            if(link)\n            {\n                var thelink=new UiLink(selectedEndPort,self);\n                selectedEndPort.opUi.links.push(thelink);\n                self.opUi.links.push(thelink);\n            }\n        }\n        else\n        {\n            event=mouseEvent(event);\n            if(!selectedEndPort || !selectedEndPort.thePort || !linkingLine)\n            {\n                CABLES.UI.OPSELECT.showOpSelect(gui.patch().getCanvasCoordsMouse(event),self.op,self.thePort);\n            }\n        }\n\n        if(linkingLine && linkingLine.thisLine)linkingLine.thisLine.remove();\n        linkingLine=null;\n        self.opUi.isDragging=false;\n    }\n\n\n\n    function hover(event)\n    {\n        selectedEndPort=self;\n        self.rect.toFront();\n        self.rect.attr(\n        {\n            x:xpos-CABLES.UI.uiConfig.portSize*0.25,\n            y:ypos-CABLES.UI.uiConfig.portSize*0.25,\n            width:CABLES.UI.uiConfig.portSize*1.5,\n            height:CABLES.UI.uiConfig.portSize*1.5,\n            'stroke-width':0,\n        });\n\n        var txt=getPortDescription(thePort);\n        CABLES.UI.setStatusText(txt);\n        CABLES.UI.showToolTip(event,txt);\n    }\n\n    function hoverOut()\n    {\n        CABLES.UI.hideToolTip();\n        selectedEndPort=null;\n\n        var offY=0;\n        if(self.direction==PORT_DIR_OUT) offY=CABLES.UI.uiConfig.portSize-CABLES.UI.uiConfig.portHeight;\n\n        self.rect.attr(\n            {\n                fill:CABLES.UI.uiConfig.getPortColor(self.thePort),\n                \"fill-opacity\": getPortOpacity(self.thePort ),\n                width:CABLES.UI.uiConfig.portSize,\n                height:CABLES.UI.uiConfig.portHeight,\n                x:xpos,\n                y:ypos+offY,\n                'stroke-width':0,\n            });\n\n        CABLES.UI.setStatusText('');\n    }\n\n\n    this.isVisible=function()\n    {\n        return this.rect!==null;\n    };\n\n    this.removeUi=function()\n    {\n        if(!self.isVisible())return;\n        this.rect.undrag();\n        this.rect.unhover(hover,hoverOut);\n        this.rect.remove();\n        this.rect=null;\n        thePort.onUiActiveStateChange=null;\n    };\n\n    this.addUi=function(group)\n    {\n\n        thePort.onUiActiveStateChange=changeActiveState;\n\n        if(self.isVisible())return;\n        if(self.opUi.isHidden())return;\n        var yp=0;\n        var offY=0;\n        var w=(CABLES.UI.uiConfig.portSize+CABLES.UI.uiConfig.portPadding)*self.portIndex;\n\n        if(self.direction==PORT_DIR_OUT)\n        {\n            offY=CABLES.UI.uiConfig.portSize-CABLES.UI.uiConfig.portHeight;\n            yp=21;\n        }\n\n        xpos=0+w;\n        ypos=0+yp;\n\n        this.rect = gui.patch().getPaper().rect(xpos,offY+ypos, CABLES.UI.uiConfig.portSize, CABLES.UI.uiConfig.portHeight).attr({\n            \"stroke-width\": 0,\n            \"fill\":CABLES.UI.uiConfig.getPortColor(self.thePort),\n            \"fill-opacity\": getPortOpacity(self.thePort ),\n        });\n\n        group.push(this.rect);\n\n        $(self.rect.node).bind(\"contextmenu\", function(e)\n        {\n            if(e.stopPropagation) e.stopPropagation();\n            if(e.preventDefault) e.preventDefault();\n            e.cancelBubble = false;\n        });\n\n        self.rect.hover(hover, hoverOut);\n        self.rect.drag(dragMove,dragStart,dragEnd);\n    };\n\n\n};\n\n\n","CABLES =CABLES || {};\nCABLES.UI =CABLES.UI || {};\n\n\nCABLES.UI.FileSelect=function()\n{\n    var currentTab='';\n    var assetPath='';\n    var apiPath='';\n    var inputId='';\n    var filterType='';\n\n    this.setTab=function(which)\n    {\n        if(which=='projectfiles')\n        {\n            assetPath='/assets/'+gui.patch().getCurrentProject()._id;\n            apiPath='project/'+gui.patch().getCurrentProject()._id+'/files/';\n        }\n        if(which=='library')\n        {\n            assetPath='/assets/library/';\n            apiPath='library/';\n        }\n\n        $('#tab_'+currentTab).removeClass('active');\n\n        currentTab=which;\n        this.load();\n    };\n\n    this.showPreview=function(val)\n    {\n        console.log('val',val);\n                \n        var opts={};\n\n        if(val.endsWith('.jpg') || val.endsWith('.png'))\n        {\n            opts.previewImageUrl=val;\n        }\n\n        var html= CABLES.UI.getHandleBarHtml('library_preview',opts);\n\n        $('#lib_preview').html( html );\n\n    };\n\n    this.show=function(_inputId,_filterType)\n    {\n        $('#library').toggle();\n\n        if( $('#library').is(':visible') )\n        {\n            $('#lib_head').html( CABLES.UI.getHandleBarHtml('library_head') );\n\n            inputId=_inputId;\n            filterType=_filterType;\n\n            this.load();\n\n\n            var val=$(_inputId).val();\n            this.showPreview(val);\n        }\n    };\n\n\n    this.load=function()\n    {\n        if(currentTab==='')\n        {\n            this.setTab('projectfiles');\n            return;\n        }\n\n        $('#tab_'+currentTab).addClass('active');\n\n        function getFileList(filterType,files,p)\n        {\n            if(!p)p=assetPath;\n\n            var html='';\n            for(var i in files)\n            {\n                if(!files[i])continue;\n\n                files[i].selectableClass='';\n                if(!files[i].d)\n                {\n                    if(files[i].t==filterType)\n                    {\n                        files[i].selectableClass='selectable';\n                    }\n                    else\n                    {\n                        if(filterType=='image')continue;\n                        files[i].selectableClass='unselectable';\n                    }\n                }\n\n                if(!files[i].p)files[i].p=p+files[i].n;\n\n\n                html+= CABLES.UI.getHandleBarHtml('library_file',{file: files[i],inputId:inputId,filterType:filterType });\n                if(files[i].d )\n                {\n                    html+=getFileList(filterType,files[i].c,p+files[i].n+'/');\n                }\n            }\n            return html;\n        }\n\n\n        \n            CABLES.api.get(apiPath,function(files)\n            {\n                var html=getFileList(filterType,files);\n\n                $('#lib_files').html(html);\n                        \n            });\n\n    };\n\n\n};\n\nCABLES.UI.fileSelect=new CABLES.UI.FileSelect();","CABLES =CABLES || {};\nCABLES.UI =CABLES.UI || {};\nCABLES.UI.SELECTPROJECT=CABLES.UI.SELECTPROJECT || {};\n\n\nCABLES.UI.SELECTPROJECT.projectsHtml=null;\nCABLES.UI.SELECTPROJECT.doReload=true;\n\nCABLES.UI.SELECTPROJECT.showSelectProjects=function(html)\n{\n\n    CABLES.UI.MODAL.show(html);\n\n    $('#projectsearch').focus();\n    $('#projectsearch').on('input',function(e)\n    {\n        var searchFor= $('#projectsearch').val();\n\n        if(!searchFor)\n            $('#search_style').html('.searchable:{display:block;}');\n        else\n            $('#search_style').html(\".searchable:not([data-index*=\\\"\" + searchFor.toLowerCase() + \"\\\"]) { display: none; }\");\n    });\n\n\n    $( \".searchresult:first\" ).addClass( \"selected\" );\n\n    var displayBoxIndex=0;\n    var Navigate = function(diff)\n    {\n        displayBoxIndex += diff;\n\n        if (displayBoxIndex < 0) displayBoxIndex = 0;\n        var oBoxCollection = $(\".searchresult:visible\");\n        var oBoxCollectionAll = $(\".searchresult\");\n        if (displayBoxIndex >= oBoxCollection.length) displayBoxIndex = 0;\n        if (displayBoxIndex < 0) displayBoxIndex = oBoxCollection.length - 1;\n\n        var cssClass = \"selected\";\n        oBoxCollectionAll.removeClass(cssClass);\n\n        oBoxCollection.removeClass(cssClass).eq(displayBoxIndex).addClass(cssClass);\n    };\n\n    function onInput(e)\n    {\n        displayBoxIndex=0;\n        Navigate(0);\n    }\n\n    $('#projectsearch').on('input',onInput);\n\n    $('#projectsearch').keydown(function(e)\n    {\n        switch(e.which)\n        {\n            case 13:\n                var projid=$('.selected').data('projid');\n                document.location.href='#/project/'+projid;\n            break;\n\n            case 8:\n                onInput();\n                return true;\n            break;\n\n            case 37: // left\n            break;\n\n            // case 38: // up\n            //     $('.selected').removeClass('selected');\n            //     Navigate(-1);\n            // break;\n\n            case 39: // right\n            break;\n\n            // case 40: // down\n            //     $('.selected').removeClass('selected');\n            //     Navigate(1);\n            // break;\n\n            default: return; // exit this handler for other keys\n        }\n        e.preventDefault(); // prevent the default action (scroll / move caret)\n    });\n\n    setTimeout(function(){$('#projectsearch').focus();},100);\n};\n\nCABLES.UI.SELECTPROJECT.show=function()\n{\n\n    if(!CABLES.UI.SELECTPROJECT.projectsHtml || CABLES.UI.SELECTPROJECT.doReload)\n    {\n        CABLES.api.get('myprojects',function(data)\n        {\n            CABLES.UI.MODAL.showLoading('loading projectlist...');\n            CABLES.UI.SELECTPROJECT.projectsHtml = CABLES.UI.getHandleBarHtml('select_project',{projects:data });\n            CABLES.UI.SELECTPROJECT.showSelectProjects(CABLES.UI.SELECTPROJECT.projectsHtml);\n            CABLES.UI.SELECTPROJECT.doReload=false;\n        });\n    }\n    else\n        CABLES.UI.SELECTPROJECT.showSelectProjects(CABLES.UI.SELECTPROJECT.projectsHtml);\n\n    \n\n};\n\n\n\n","var min = 300;\nvar max = 3600;\nvar mainmin = 200;\n\n$( document ).ready(function()\n{\n    $('#splitterPatch').mousedown(function (e)\n    {\n        e.preventDefault();\n        $(document).mousemove(function (e)\n        {\n            e.preventDefault();\n\n            gui.rendererWidth=window.innerWidth - e.clientX;\n            gui.setLayout();\n        });\n    });\n\n    $('#splitterRenderer').mousedown(function (e)\n    {\n        e.preventDefault();\n        $(document).mousemove(function (e)\n        {\n            e.preventDefault();\n\n            gui.rendererHeight= e.clientY;\n            gui.setLayout();\n        });\n    });\n\n    $('#splitterTimeline').mousedown(function (e)\n    {\n        e.preventDefault();\n        $(document).mousemove(function (e)\n        {\n            e.preventDefault();\n            gui.timingHeight= window.innerHeight-e.clientY;\n            gui.setLayout();\n        });\n    });\n\n    $('#splitterRendererWH').mousedown(function (e)\n    {\n        e.preventDefault();\n        $(document).mousemove(function (e)\n        {\n            e.preventDefault();\n\n            gui.rendererWidth=window.innerWidth - e.clientX;\n            gui.rendererHeight= e.clientY;\n            gui.setLayout();\n        });\n    });\n\n\n    $(document).mouseup(function (e) {\n        $(document).unbind('mousemove');\n    });\n\n\n});","\nCABLES.TL.UI=CABLES.TL.UI || {};\n\nCABLES.TL.Key.prototype.isUI=true;\nCABLES.TL.Key.prototype.circle=null;\nCABLES.TL.Key.prototype.circleBezierOut=null;\nCABLES.TL.Key.prototype.circleBezierIn=null;\nCABLES.TL.Key.prototype.selected=false;\nCABLES.TL.Key.prototype.showCircle=true;\n\nCABLES.TL.MultiGraphKeyDisplayMode=true;\nCABLES.TL.MoveMode=0;\nCABLES.TL.TIMESCALE=100;\nCABLES.TL.VALUESCALE=100;\n\nCABLES.TL.Key.prototype.setAttribs=function(sel)\n{\n    var opa=0.7;\n    var fill='#222';\n    if(this.isMainAnim)\n    {\n        fill=CABLES.UI.uiConfig.colorKey;\n        opa=0.8;\n    }\n\n    this.circle.attr({ \"fill-opacity\":0.7 });\n    this.circle.attr({ cx:this.x, cy:this.y,\"fill-opacity\":opa,fill:fill  });\n\n    if(this.selected) this.circle.attr({ fill:\"white\" });\n};\n\nCABLES.TL.Key.prototype.setSelected=function(sel)\n{\n    this.selected=sel;\n    this.setAttribs();\n};\n\nCABLES.TL.Key.prototype.removeUi=function()\n{\n    if(this.bezierControlLineOut)\n    {\n        this.bezierControlLineOut.undrag();\n        this.bezierControlLineOut.remove();\n        this.bezierControlLineOut=false;\n    }\n\n    if(this.bezierControlLineIn)\n    {\n        this.bezierControlLineIn.undrag();\n        this.bezierControlLineIn.remove();\n        this.bezierControlLineIn=false;\n    }\n\n    if(this.circleBezierOut)\n    {\n        this.circleBezierOut.undrag();\n        this.circleBezierOut.remove();\n        this.circleBezierOut=false;\n    }\n    \n    if(this.circleBezierIn)\n    {\n        this.circleBezierIn.undrag();\n        this.circleBezierIn.remove();\n        this.circleBezierIn=false;\n    }\n\n    if(this.circle)\n    {\n        this.circle.undrag();\n        this.circle.remove();\n        this.circle=false;\n    }\n};\n\n\n\nCABLES.TL.Key.prototype.isMainAnim=false;\n\nCABLES.TL.Key.prototype.updateCircle=function(_isMainAnim)\n{\n    if(_isMainAnim!== undefined)this.isMainAnim=_isMainAnim;\n\n    if(!gui.timeLine())return;\n    if(!this.circle) this.initUI();\n    if(this.getEasing()==CABLES.TL.EASING_BEZIER && !this.circleBezierOut) this.initUI();\n\n    if(isNaN(this.value)) this.value=0;\n\n    this.x=this.time*CABLES.TL.TIMESCALE;\n    this.y=this.value*-CABLES.TL.VALUESCALE;\n\n    if(!this.showCircle) this.circle.hide();\n        else this.circle.show();\n\n    if(this.getEasing()==CABLES.TL.EASING_BEZIER)\n    {\n        var posBezX=this.x+this.bezTime*CABLES.TL.TIMESCALE;\n        var posBezY=this.y+this.bezValue*CABLES.TL.VALUESCALE;\n        this.circleBezierOut.attr({ cx:posBezX, cy:posBezY  });\n\n        var posBezXIn=this.x+this.bezTimeIn*CABLES.TL.TIMESCALE;\n        var posBezYIn=this.y+this.bezValueIn*CABLES.TL.VALUESCALE;\n        this.circleBezierIn.attr({ cx:posBezXIn, cy:posBezYIn  });\n\n        var pathOut=\"M \"+this.x+\" \"+this.y+\" L \"+posBezX+\" \"+posBezY;\n        var pathIn=\"M \"+this.x+\" \"+this.y+\" L \"+posBezXIn+\" \"+posBezYIn;\n                \n        this.bezierControlLineOut.attr({ path:pathOut, stroke: \"#888\", \"stroke-width\": 1});\n        this.bezierControlLineIn.attr({ path:pathIn, stroke: \"#888\", \"stroke-width\": 1});\n    }\n\n\n    if(isNaN(this.x))\n    {\n        this.x=0;\n        console.log('key this.x NaN');\n    }\n    if(isNaN(this.y))\n    {\n        this.y=0;\n        console.log('key this.x NaN');\n    }\n\n\n    this.setAttribs();\n    if(this.isMainAnim)this.circle.toFront();\n};\n\nCABLES.TL.Key.prototype.initUI=function()\n{\n    if(!gui.timeLine())return;\n    var self=this;\n\n    this.x=this.time*CABLES.TL.TIMESCALE;\n    this.y=this.value*-CABLES.TL.VALUESCALE;\n\n    this.bezX=this.x+this.bezTime*CABLES.TL.TIMESCALE;\n    this.bezY=this.y+this.bezValue*CABLES.TL.VALUESCALE;\n\n    var discattr = {fill: CABLES.UI.uiConfig.colorKey, stroke: \"none\"};\n\n    if(this.circle)\n    {\n        this.removeUi();\n    }\n\n    if(this.getEasing()==CABLES.TL.EASING_BEZIER)\n    {\n        if(!this.circleBezierOut)\n            this.circleBezierOut=gui.timeLine().getPaper().circle(this.bezX, this.bezY, 7);\n        \n        this.circleBezierOut.attr({ fill:\"#fff\",\"fill-opacity\":0.7  });\n\n        if(!this.circleBezierIn)\n            this.circleBezierIn=gui.timeLine().getPaper().circle(this.bezXIn, this.bezYIn, 7);\n        \n        this.circleBezierIn.attr({ fill:\"#f00\",\"fill-opacity\":0.7  });\n\n        if(!this.bezierControlLineOut)\n            this.bezierControlLineOut = gui.timeLine().getPaper().path(\"M 0 0 \");\n\n        if(!this.bezierControlLineIn)\n            this.bezierControlLineIn = gui.timeLine().getPaper().path(\"M 0 0 \");\n    }\n\n    this.circle=gui.timeLine().getPaper().circle(this.x, this.y, 7);\n    this.circle.attr(discattr);\n    this.circle.toFront();\n\n    this.circle.node.onclick = function (e)\n    {\n        $('#timeline').focus();\n        if(!e.shiftKey) gui.timeLine().unselectKeys();\n\n        if(e.shiftKey && self.selected) self.setSelected(false);\n            else self.setSelected(true);\n    };\n\n    var oldValues={};\n\n    var startMoveX=-1;\n    var startMoveY=-1;\n\n    this.doMoveFinished=function()\n    {\n        startMoveX=-1;\n        startMoveY=-1;\n        self.isDragging=false;\n    };\n\n    this.doMove=function(dx,dy,a,b,e,newPos)\n    {\n        if(!this.showCircle) return;\n\n        if(startMoveX==-1 )\n        {\n            startMoveX=newPos.x-self.x;\n            startMoveY=newPos.y-self.y;\n        }\n\n        newPos.x=newPos.x-startMoveX;\n        newPos.y=newPos.y-startMoveY;\n\n        var time=gui.timeLine().getTimeFromPaper(newPos.x);\n        var frame=parseInt( (time +0.5*1/gui.timeLine().getFPS() )*gui.timeLine().getFPS(),10);\n        time=frame/gui.timeLine().getFPS();\n\n\n\n        if(CABLES.TL.MoveMode===0)\n        {\n            self.set({time:time,value:self.value});\n            // self.updateCircle();\n        }\n        if(CABLES.TL.MoveMode==1)\n        {\n            self.set({time:time,value:newPos.y/-CABLES.TL.VALUESCALE});\n            // self.updateCircle();\n        }\n        if(CABLES.TL.MoveMode==2)\n        {\n            self.set({time:time,value:newPos.y/-CABLES.TL.VALUESCALE});\n            // self.updateCircle();\n        }\n\n    };\n\n    function move(dx,dy,a,b,e)\n    {\n        $('#timeline').focus();\n\n        self.isDragging=true;\n        if(!self.selected)\n        {\n            gui.timeLine().unselectKeys();\n            self.setSelected(true);\n\n        }\n        gui.timeLine().moveSelectedKeys(dx,dy,a,b,e);\n    }\n\n    function down()\n    {\n        if(!self.isDragging)\n        {\n            oldValues=self.getSerialized();\n        }\n        self.isDragging=true;\n    }\n\n    function up()\n    {\n        gui.timeLine().moveSelectedKeysFinished();\n\n        CABLES.undo.add({\n            undo: function()\n            {\n                self.set(oldValues);\n                gui.timeLine().refresh();\n            },\n            redo: function()\n            {\n            }\n        });\n\n        self.isDragging=false;\n    }\n    this.circle.drag(move,down,up);\n\n    // --------\n\n    function moveBezierOut(dx,dy,a,b,e)\n    {\n        self.isDragging=true;\n        var newPos=gui.timeLine().getCanvasCoordsMouse(e);\n        var newTime=gui.timeLine().getTimeFromPaper(newPos.x);\n        var t=self.time;\n        var v=self.value;\n        var newValue=newPos.y/CABLES.TL.VALUESCALE;\n        \n        self.setBezierControlOut(newTime-t,newValue+v);\n        self.updateCircle();\n    }\n\n    function upBezierOut()\n    {\n        self.isDragging=false;\n        self.x=-1;\n        self.y=-1;\n    }\n\n    if(self.circleBezierOut) self.circleBezierOut.drag(moveBezierOut,upBezierOut);\n\n    // --------\n\n    function moveBezierIn(dx,dy,a,b,e)\n    {\n        self.isDragging=true;\n        var newPos=gui.timeLine().getCanvasCoordsMouse(e);\n        var newTime=gui.timeLine().getTimeFromPaper(newPos.x);\n        var t=self.time;\n        var v=self.value;\n        var newValue=newPos.y/CABLES.TL.VALUESCALE;\n\n        self.setBezierControlIn(newTime-t,newValue+v);\n        self.updateCircle();\n    }\n\n    function upBezierIn()\n    {\n        self.isDragging=false;\n        self.x=-1;\n        self.y=-1;\n    }\n\n    if(self.circleBezierIn) self.circleBezierIn.drag(moveBezierIn,upBezierIn);\n\n};\n\nCABLES.TL.Anim.prototype.hasSelectedKeys=function()\n{\n    for(var i in this.keys)if(this.keys[i].selected)return true;\n};\n\nCABLES.TL.Anim.prototype.show=function()\n{\n    if(gui.timeLine())\n        if(!this.keyLine)\n            this.keyLine = gui.timeLine().getPaper().path(\"M 0 0 L 1 1\");\n};\n\nCABLES.TL.Anim.prototype.removeUi=function()\n{\n    if(this.keyLine)\n    {\n        this.keyLine.hide();\n        this.keyLine.remove();\n        this.keyLine=false;\n    }\n\n    for(var i in this.keys)\n        this.keys[i].removeUi();\n};\n\nCABLES.TL.Anim.prototype.unselectKeys=function()\n{\n    for(var i in this.keys)\n        this.keys[i].setSelected(false);\n};\n\nCABLES.TL.Anim.prototype.deleteKeyAt=function(t)\n{\n    for(var i in this.keys)\n    {\n        if(this.keys[i].time==t)\n        {\n            this.keys[i].removeUi();\n            this.keys.splice(i, 1);\n            return;\n        }\n    }\n\n};\n\nCABLES.TL.Anim.prototype.deleteSelectedKeys=function()\n{\n    var found=true;\n\n    while(found)\n    {\n        found=false;\n        for(var i in this.keys)\n        {\n            if(this.keys[i].selected && this.keys[i].showCircle)\n            {\n                var undofunc=function(anim,objKey)\n                {\n                    CABLES.undo.add({\n                        undo: function(){\n                            anim.addKey(new CABLES.TL.Key(objKey));\n                            anim.sortKeys();\n                            gui.timeLine().refresh();\n                        },\n                        redo: function(){\n\n                            anim.deleteKeyAt(objKey.t);\n                            gui.timeLine().refresh();\n                        }\n                    });\n                }(this,this.keys[i].getSerialized());\n\n                this.keys[i].removeUi();\n                this.keys.splice(i, 1);\n                found=true;\n            }\n        }\n    }\n    this.sortKeys();\n};\n\n\nCABLES.TL.UI.TimeLineUI=function()\n{\n    var self=this;\n    \n    var tlEmpty=new CABLES.TL.Anim();\n    var anim=null;//tlEmpty;//new CABLES.TL.Anim();\n    var viewBox={x:-10,y:-170,w:1200,h:400};\n    var fps=30;\n    var cursorTime=0.0;\n\n    var anims=[];\n\n    var paper= Raphael(\"timeline\", 0,0);\n    var paperTime= Raphael(\"timetimeline\", 0,0);\n    var isScrollingTime=false;\n    var enabled=false;\n    var doCenter=false;\n\n    var rubberBandStartPos=null;\n    var rubberBandPos=null;\n    var mouseRubberBandStartPos=null;\n    var mouseRubberBandPos=null;\n    var rubberBandRect=null;\n\n    var updateTimer=null;\n    var timeDisplayMode=true;\n\n    var cursorLine = paper.path(\"M 0 0 L 10 10\");\n    cursorLine.attr({stroke: CABLES.UI.uiConfig.colorCursor, \"stroke-width\": 2});\n\n    var cursorLineDisplay = paperTime.path(\"M 0 0 L 10 10\");\n    cursorLineDisplay.attr({stroke: CABLES.UI.uiConfig.colorCursor, \"stroke-width\": 2});\n\n    this.getFPS=function()\n    {\n        return fps;\n    };\n\n    function getFrame(time)\n    {\n        var frame=parseInt(time*fps,10);\n        return frame;\n    }\n\n    this.getPaper=function()\n    {\n        return paper;\n    };\n\n    function removeDots()\n    {\n        for(var j in anims)\n        {\n\n            anims[j].removeUi();\n\n            // for(var i in anims[j].keys)\n            // {\n            //     if(anims[j].keys[i].circle)\n            //     {\n            //         // $('#timeline svg circle').hide();\n            //         anims[j].keys[i].removeUi();\n            //     }\n            // }\n        }\n        \n        if($('#timeline svg circle').length>0)\n        {\n            console.log('KEYS NOT REMOVED PROPERLY');\n        }\n    }\n\n    this.addAnim=function(newanim)\n    {\n        if(newanim===null)return;\n\n        var i=0;\n        // newanim.onChange=null;\n\n\n\n        // var newAnims=[];\n        // newAnims.push(newanim);\n        newanim.show();\n\n        var found=true;\n        while(found)\n        {\n            found=false;\n            for(i in anims)\n            {\n                if(!found && !anims[i].stayInTimeline && anims[i]!=newanim)\n                {\n                            console.log('found one! '+i);\n                            \n                    anims[i].removeUi();\n                    if(anims.length==1) anims.length=0;\n                        else\n                    anims=anims.slice(i,1);\n\n                    // if(anims[i].keyLine)anims[i].keyLine.hide();\n                    found=true;\n                }\n            }\n        }\n\n        anims.push(newanim);\n\n                // {\n                //     newAnims.push(anims[i]);\n                //     anims[i].show();\n                // }\n\n        // anims=newAnims;\n\n        // for(i in anims)\n        // {\n        //     if(anims[i]==newanim)\n        //     {\n        //         return;\n        //     }\n        // }\n        // if(newanim) anims.push(newanim);\n\n    };\n\n\n\n    this.removeAnim=function(an)\n    {\n        if(!an)return;\n        var val=an.getValue(cursorTime);\n\n        an.stayInTimeline=false;\n        // an.keyLine.hide();\n        \n        for(var i in anims)\n        {\n            if(anims[i] && anims[i]==an)\n            {\n                an.removeUi();\n                anims=anims.slice(i,1);\n                self.addAnim(tlEmpty);\n                removeDots();\n                updateKeyLine();\n                this.refresh();\n                return val;\n            }\n        }\n        \n        return 0;\n    };\n\n    function mousemoveTime(e)\n    {\n        if(isScrollingTime)\n            scrollTime(e);\n    }\n\n    this.getAnim=function()\n    {\n        return anim;\n    };\n\n    this.setAnim=function(newanim,config)\n    {\n        if(!gui.timeLine())return;\n        $(document).bind(\"mousemove\",mousemoveTime);\n\n        if(newanim && newanim!=tlEmpty)gui.showTiming();\n\n        removeDots();\n\n        if(!newanim || newanim===null)\n        {\n            anim=tlEmpty;\n            removeDots();\n            updateKeyLine();\n            $('#timelineTitle').html('');\n            enabled=false;\n            return;\n        }\n\n        newanim.paper=paper;\n        anim=newanim;\n        enabled=true;\n        this.addAnim(anim);\n        \n        if(config && config.name) $('#timelineTitle').html(config.name);\n            else $('#timelineTitle').html('');\n\n        if(config && config.hasOwnProperty('defaultValue') && anim.keys.length===0)\n        {\n            anim.keys.push(new CABLES.TL.Key({time:cursorTime,value:config.defaultValue}) );\n            this.centerCursor();\n        }\n\n        updateKeyLine();\n        if(anim.keyLine)anim.keyLine.toFront();\n        for(var i in anim.keys)\n        {\n            if(!anim.keys[i].circle)anim.keys[i].initUI();\n            anim.keys[i].updateCircle(true);\n        }\n\n        // if(anim.keys.length>1 || anims.length>0)\n        // {\n        //     self.scaleWidth();\n        // }\n\n        // if(anim.keys.length==1)this.centerCursor();\n        // self.scaleHeight();\n        // this.centerCursor();\n\n        if(anim.onChange===null) anim.onChange=updateKeyLineDelayed;\n        \n    };\n\n    function setCursor(time)\n    {\n        if(time<0)time=0;\n        if(isNaN(time))time=0;\n\n        cursorTime=time;\n        time=time*CABLES.TL.TIMESCALE;\n        cursorLine.attr({path: \"M \"+time+\" -1000 L\" + time + \" \" + 1110 });\n        cursorLineDisplay.attr({path: \"M \"+time+\" -1000 L\" + time + \" \" + 1110 });\n    }\n\n    var zeroLine2 = paper.path(\"M 0 0 L 111000 0\");\n    zeroLine2.attr({ stroke: \"#999\", \"stroke-width\": 1});\n\n    this.updateViewBox=function()\n    {\n        if(!enabled) removeDots();\n\n        paper.setViewBox(\n            viewBox.x,\n            viewBox.y,\n            $('#timeline').width(),\n            viewBox.h,false\n        );\n\n        paperTime.setViewBox(\n            viewBox.x,\n            -200,\n            $('#timeline').width(),\n            400,false\n        );\n\n        viewBox.w=$('#timeline').width();\n\n        paperTime.canvas.setAttribute('preserveAspectRatio', 'xMinYMin slice');\n        paper.canvas.setAttribute('preserveAspectRatio', 'xMinYMin slice');\n        updateKeyLine();\n    };\n\n    this.refresh=function()\n    {\n        updateKeyLineDelayed();\n    };\n\n    var delayedUpdateKeyLine=0;\n    function updateKeyLineDelayed()\n    {\n        clearTimeout(delayedUpdateKeyLine);\n        delayedUpdateKeyLine = setTimeout(updateKeyLine, 10);\n    }\n\n    function updateKeyLine()\n    {\n        if(gui.patch().isLoading())return;\n\n        for(var anii in anims)\n        {\n            var str=null;\n            var ani=anims[anii];\n\n\n            if(ani && ani.keys.length===0)\n            {\n                ani.removeUi();\n            }\n            else\n            if(ani)\n            {\n                ani.show();\n                ani.sortKeys();\n\n                // var numSteps=500;\n                var start=viewBox.x/CABLES.TL.TIMESCALE;\n                var width=viewBox.w/CABLES.TL.TIMESCALE*1.2;\n\n                var timePoints=[0];\n\n                for(var ik=0;ik<ani.keys.length;ik++)\n                {\n                    timePoints.push(ani.keys[ik].time-0.00001);\n                    timePoints.push(ani.keys[ik].time);\n                    timePoints.push(ani.keys[ik].time+0.00001);\n\n                    if(ani.keys[ik].getEasing()!=CABLES.TL.EASING_LINEAR &&\n                        ani.keys[ik].getEasing()!=CABLES.TL.EASING_ABSOLUTE  &&\n                        ik<ani.keys.length-1)\n                    {\n                        var timeSpan=ani.keys[ik+1].time-ani.keys[ik].time;\n                                        \n                        for(var j=0;j<timeSpan;j+=timeSpan/50)\n                        {\n                            timePoints.push(ani.keys[ik].time+j);\n                        }\n                    }\n                }\n                timePoints.push(1000);\n\n\n                for(var i=0;i<timePoints.length;i++)\n                {\n                    // var t=start+i*width/numSteps;\n                    var t=timePoints[i];\n                    var v=ani.getValue(t);\n                    if(str===null)str+=\"M \";\n                        else str+=\"L \";\n                    str+=t*CABLES.TL.TIMESCALE+\" \"+v*-CABLES.TL.VALUESCALE;\n\n                }\n\n                // var lastValue=Number.MAX_VALUE;\n\n                // for(var i=0;i<numSteps;i++)\n                // {\n                //     var t=start+i*width/numSteps;\n                //     var v=ani.getValue(t);\n\n                //     if(lastValue!=v || i>=numSteps-2 || i<=3)\n                //     {\n                //         if(str===null)str+=\"M \";\n                //             else str+=\"L \";\n                //         str+=t*CABLES.TL.TIMESCALE+\" \"+v*-CABLES.TL.VALUESCALE;\n                //     }\n                //     lastValue=v;\n                // }\n\n                        // console.log('str ',str.length);\n                        \n\n                for(var ik=0;ik<ani.keys.length;ik++)\n                {\n                    var nextKey=null;\n                    if(ani.keys.length > ik+1) nextKey=ani.keys[ik+1];\n                    \n                    if(CABLES.TL.MultiGraphKeyDisplayMode)\n                        ani.keys[ik].showCircle=true;\n                    else\n                        if(ani==anim)ani.keys[ik].showCircle=true;\n                            else ani.keys[ik].showCircle=false;\n\n                    ani.keys[ik].updateCircle(ani==anim);\n                    if(ani.keys[ik].onChange===null) ani.keys[ik].onChange=updateKeyLineDelayed;\n                }\n\n                ani.keyLine.attr({ path:str });\n    \n                if(ani.keyLine)\n                    if(ani==anim) ani.keyLine.attr({ stroke: \"#fff\", \"stroke-width\": 2 });\n                        else ani.keyLine.attr({ stroke: \"#222\", \"stroke-width\": 1 });\n\n            }\n        }\n    }\n\n    this.getCanvasCoordsMouse=function(evt)\n    {\n        return this.getCanvasCoordsSVG('#timeline svg',evt);\n    };\n\n    this.getCanvasCoordsMouseTimeDisplay=function(evt)\n    {\n        return this.getCanvasCoordsSVG('#timetimeline svg',evt);\n    };\n\n    this.gotoOffset=function(off)\n    {\n        gui.scene().timer.setOffset(off);\n        self.updateTime();\n        if(!self.isCursorVisible())self.centerCursor();\n    };\n\n    this.gotoZero=function()\n    {\n        // setCursor(0);\n        gui.scene().timer.setTime(0);\n\n        setCursor(0);\n        \n        self.centerCursor();\n    };\n\n    this.getCanvasCoordsSVG=function(id,evt)\n    {\n        var ctm = $(id)[0].getScreenCTM();\n\n        ctm = ctm.inverse();\n        var uupos = $(id)[0].createSVGPoint();\n\n        uupos.x = evt.clientX;\n        uupos.y = evt.clientY;\n\n        uupos = uupos.matrixTransform(ctm);\n        \n        var res={x:uupos.x,y:uupos.y};\n        return res;\n    };\n\n    var spacePressed=false;\n\n    this.jumpKey=function(dir)\n    {\n        var theKey=null;\n\n        for(var anii in anims)\n        {\n            var index=anims[anii].getKeyIndex(cursorTime);\n            var newIndex=parseInt(index,10)+parseInt(dir,10);\n\n            if(newIndex==1 && cursorTime<anims[anii].keys[0].time)newIndex=0;\n            if(newIndex==anims[anii].keys.length-2 && cursorTime>anims[anii].keys[anims[anii].keys.length-1].time)newIndex=anims[anii].keys.length-1;\n\n            if(anims[anii].keys.length>newIndex && newIndex>=0)\n            {\n                var thetime=anims[anii].keys[newIndex].time;\n\n                if(!theKey)theKey=anims[anii].keys[newIndex];\n\n                if( Math.abs(cursorTime-thetime) < Math.abs(cursorTime-theKey.time) )\n                {\n                    theKey=anims[anii].keys[newIndex];\n                }\n            }\n        }\n\n        if(theKey)\n        {\n            gui.scene().timer.setTime(theKey.time);\n            self.updateTime();\n\n            if(theKey.time>this.getTimeRight() || theKey.time<this.getTimeLeft()) this.centerCursor();\n        }\n    };\n\n    $('#timeline').keyup(function(e)\n    {\n        switch(e.which)\n        {\n            case 32:\n                spacePressed=false;\n            break;\n        }\n    });\n\n    $('#timeline').keydown(function(e)\n    {\n        switch(e.which)\n        {\n            case 46: case 8:\n                for(var j in anims) anims[j].deleteSelectedKeys();\n                updateKeyLine();\n                if(e.stopPropagation) e.stopPropagation();\n                if(e.preventDefault) e.preventDefault();\n            break;\n\n            case 32:\n                spacePressed=true;\n            break;\n\n\n            case 72: // h\n                self.scaleHeight();\n                self.scaleWidth();\n            break;\n\n\n            case 65: // a \n                if(e.metaKey || e.ctrlKey) self.selectAllKeys();\n            break;\n\n            case 68: // d\n                console.log('anim.keys',anim.keys);\n            break;\n\n            case 90: // z undo\n                if(e.metaKey || e.ctrlKey)\n                {\n                    if(e.shiftKey) CABLES.undo.redo();\n                    else CABLES.undo.undo();\n                }\n            break;\n\n            case 37: // left\n                var num=1;\n                if(e.shiftKey)num=10;\n                var newTime=getFrame((self.getTime()-1.0/fps*num)+0.001);\n                gui.scene().timer.setTime(newTime/fps);\n            break;\n\n            case 39: // right\n                var num=1;\n                if(e.shiftKey)num=10;\n                var newTime=getFrame((self.getTime()+1.0/fps*num)+0.001);\n                gui.scene().timer.setTime(newTime/fps);\n            break;\n\n            default:\n                console.log('key ',e.which);\n            break;\n        }\n    });\n\n    function toggleMoveMode()\n    {\n        CABLES.TL.MoveMode++;\n        if(CABLES.TL.MoveMode>2)CABLES.TL.MoveMode=0;\n        if(CABLES.TL.MoveMode===0)\n        {\n            $(\"#keymovemode\").addClass('fa-arrows-h');\n            $(\"#keymovemode\").removeClass('fa-arrows-v');\n            $(\"#keymovemode\").removeClass('fa-arrows');\n        }\n        if(CABLES.TL.MoveMode==1)\n        {\n            $(\"#keymovemode\").addClass('fa-arrows-v');\n            $(\"#keymovemode\").removeClass('fa-arrows-h');\n            $(\"#keymovemode\").removeClass('fa-arrows');\n        }\n        if(CABLES.TL.MoveMode==2)\n        {\n            $(\"#keymovemode\").addClass('fa-arrows');\n            $(\"#keymovemode\").removeClass('fa-arrows-v');\n            $(\"#keymovemode\").removeClass('fa-arrows-h');\n        }\n    }\n\n    this.getTimeLeft=function()\n    {\n        return viewBox.x/CABLES.TL.TIMESCALE;\n    };\n\n    this.getTimeRight=function()\n    {\n        return this.getTimeLeft()+viewBox.w/CABLES.TL.TIMESCALE;\n    };\n\n    this.toggleLoop=function()\n    {\n        anim.loop=!anim.loop;\n        updateKeyLine();\n    };\n\n    this.centerCursor=function()\n    {\n        var start=cursorTime*CABLES.TL.TIMESCALE;\n        var width=viewBox.w;\n        var left=start-width/2;\n\n        if(left<0)left=0;\n\n        viewBox.x=left;\n\n        self.updateViewBox();\n        updateTimeDisplay();\n    };\n\n    this.scaleWidth=function()\n    {\n        if(gui.patch().isLoading())return;\n\n        var maxt=-99999;\n        var mint=99999999;\n\n        var hasSelectedKeys=false;\n        for(var anii in anims)\n            if(anims[anii].hasSelectedKeys())hasSelectedKeys=true;\n\n        var count=0;\n        for(var anii in anims)\n        {\n            for(var i in anims[anii].keys)\n            {\n                if(!hasSelectedKeys || anims[anii].keys[i].selected)\n                {\n                    count++;\n                    maxt=Math.max(maxt,anims[anii].keys[i].time);\n                    mint=Math.min(mint,anims[anii].keys[i].time);\n                }\n            }\n        }\n        if(count===0)\n        {\n            maxt=10;\n            mint=10;\n        }\n        if(maxt==mint)\n        {\n            maxt+=3;\n            mint-=3;\n            if(mint<0) mint=0;\n        }\n\n        CABLES.TL.TIMESCALE=viewBox.w/(maxt-mint)*0.9;\n        viewBox.x=mint*CABLES.TL.TIMESCALE-(maxt-mint)*0.05*CABLES.TL.TIMESCALE;\n        console.log('CABLES.TL.TIMESCALE ',mint,maxt,count);\n\n\n        self.updateViewBox();\n        updateTimeDisplay();\n    };\n\n    var delayedScaleHeight=0;\n    this.scaleHeightDelayed=function()\n    {\n        clearTimeout(delayedScaleHeight);\n        delayedScaleHeight = setTimeout(self.scaleHeight, 150);\n    };\n\n\n    var lastScaleHeightMax=0;\n    var lastScaleHeightMin=0;\n    this.scaleHeight=function()\n    {\n        var maxv=-99999;\n        var minv=99999999;\n\n        var hasSelectedKeys=false;\n        for(var anii in anims)\n            if(anims[anii].hasSelectedKeys())hasSelectedKeys=true;\n\n        var count=0;\n        for(var anii in anims)\n        {\n            for(var i in anims[anii].keys)\n            {\n                if(!hasSelectedKeys || anims[anii].keys[i].selected)\n                {\n                    count++;\n                    maxv=Math.max(maxv,anims[anii].keys[i].value);\n                    minv=Math.min(minv,anims[anii].keys[i].value);\n                }\n            }\n        }\n\n        if( lastScaleHeightMax!=maxv ||lastScaleHeightMin!=minv )\n        {\n            lastScaleHeightMax=maxv;\n            lastScaleHeightMin=minv;\n\n            if(count===0)\n            {\n                maxv=1;\n                minv=-1;\n            }\n\n            if(maxv==minv)\n            {\n                maxv+=2;\n                minv-=2;\n            }\n            \n            var s=Math.abs(maxv)+Math.abs(minv);\n            self.setValueScale( $('#timeline').height()/2.3/( s-Math.abs(s)*0.2) );\n\n            viewBox.y=-maxv*1.1*CABLES.TL.VALUESCALE;\n            self.updateViewBox();\n\n        }\n    };\n\n    this.selectAllKeys=function()\n    {\n        for(var anii in anims)\n            for(var i in anims[anii].keys)\n                if(anims[anii].keys[i].showCircle)\n                    anims[anii].keys[i].setSelected(true);\n        updateKeyLine();\n    };\n\n    this.setSelectedKeysEasing=function(e)\n    {\n        for(var anii in anims)\n        {\n            anims[anii].defaultEasing=e;\n            for(var i in anims[anii].keys)\n            {\n                anims[anii].removeUi();\n\n                if(anims[anii].keys[i].selected)\n                    anims[anii].keys[i].setEasing(e);\n            }\n        }\n        updateKeyLine();\n    };\n\n    function toggleMultiGraphKeyDisplay(e)\n    {\n        if(e.buttons==3)\n        {\n            removeDots();\n\n            for(var i=0;i<anims.length;i++)\n            {\n                console.log('anims[i]',anims[i]);\n                self.removeAnim(anims[i]);\n            }\n\n            self.setAnim(null);\n            updateKeyLine();\n        }\n        else\n        {\n            CABLES.TL.MultiGraphKeyDisplayMode=!CABLES.TL.MultiGraphKeyDisplayMode;\n            console.log('CABLES.TL.MultiGraphKeyDisplayMode ',CABLES.TL.MultiGraphKeyDisplayMode);\n        }\n        updateKeyLine();\n    }\n\n\n    $(\"#keymovemode\").bind(\"click\", toggleMoveMode);\n    $(\"#keyscaleheight\").bind(\"click\", this.scaleHeight);\n    $(\"#keyscalewidth\").bind(\"click\", this.scaleWidth);\n\n    // $(\"#ease_linear\").bind(\"click\", function(){ self.setSelectedKeysEasing(CABLES.TL.EASING_LINEAR); } );\n    // $(\"#ease_absolute\").bind(\"click\", function(){ self.setSelectedKeysEasing(CABLES.TL.EASING_ABSOLUTE); } );\n    // $(\"#ease_smoothstep\").bind(\"click\", function(){ self.setSelectedKeysEasing(CABLES.TL.EASING_SMOOTHSTEP); } );\n    // $(\"#ease_smootherstep\").bind(\"click\", function(){ self.setSelectedKeysEasing(CABLES.TL.EASING_SMOOTHERSTEP); } );\n    // $(\"#ease_bezier\").bind(\"click\", function(){ self.setSelectedKeysEasing(CABLES.TL.EASING_BEZIER); } );\n\n\n    $(\"#loop\").bind(\"click\", this.toggleLoop);\n    $(\"#centercursor\").bind(\"click\", this.centerCursor);\n    $(\"#centercursor\").bind(\"mousedown\", function(){doCenter=true;} );\n    $(\"#centercursor\").bind(\"mouseup\", function(){doCenter=false;} );\n\n    $(\"#toggleMultiGraphKeyDisplay\").bind(\"mousedown\", toggleMultiGraphKeyDisplay );\n\n\n    // $('#timeline').bind(\"mousewheel\", function (event,delta,nbr)\n    // {\n    //     CABLES.TL.VALUESCALE+=delta;\n\n    //     if(CABLES.TL.VALUESCALE<10)CABLES.TL.VALUESCALE=10;\n    //     self.updateViewBox();\n    // });\n\n    $(\".timeLineInsert\").bind(\"click\", function (e)\n    {\n        anim.keys.push(new CABLES.TL.Key({paper:paper,time:cursorTime,value:anim.getValue(cursorTime)}) );\n        updateKeyLine();\n    });\n\n    var startMouseDown=0;\n    $('#timeline').bind(\"mousedown\", function (event)\n    {\n        startMouseDown=Date.now();\n    });\n    $('#timeline').bind(\"mouseup\", function (event)\n    {\n        if(Date.now()-startMouseDown<100 && !event.shiftKey && !isScrollingTime && !isDragging())self.unselectKeys();\n\n        rubberBandHide();\n\n        for(var j in anims)\n            for(var i in anims[j].keys)\n                anims[j].keys[i].isDragging=false;\n    });\n\n    $(\"#timetimeline\").bind(\"mouseup\", function(e)\n    {\n        isScrollingTime=false;\n    });\n\n    window.addEventListener('resize', function(event)\n    {\n        self.updateViewBox();\n    });\n\n\n    $(document).bind(\"mouseup\",function(e)\n    {\n        isScrollingTime=false;\n    });\n\n    function scrollTime(e)\n    {\n        if(e.buttons==1 || e.buttons==2)\n        {\n            isScrollingTime=true;\n            e.offsetX=e.clientX;\n            var time=self.getTimeFromMouse( e );\n            var frame=parseInt( (time +0.5*1/fps )*fps,10);\n            time=frame/fps;\n\n            gui.scene().timer.setTime(time);\n            self.updateTime();\n            $('#timeline').focus();\n        }\n    }\n    $(\"#timelineui\").bind(\"mousedown\", function(e)\n    {\n        $('#timeline').focus();\n        if(e.target.nodeName!='INPUT')e.preventDefault();\n    });\n\n    $(\"#timetimeline\").bind(\"mousedown\", function(e)\n    {\n        $(document).bind(\"mousemove\",mousemoveTime);\n        $('#timeline').focus();\n        e=mouseEvent(e);\n        scrollTime(e);\n        e.preventDefault();\n    });\n\n    function isDragging()\n    {\n        for(var j in anims)\n            for(var i in anims[j].keys)\n                if(anims[j].keys[i].isDragging===true)\n                    return true;\n\n        return false;\n    }\n\n    var panX=0,panY=0;\n    $(\"#timeline\").bind(\"mousemove\", function(e)\n    {\n        if(isScrollingTime)return;\n        e=mouseEvent(e);\n\n        if(e.buttons==2 || e.buttons==3 || (e.buttons==1 && spacePressed))\n        {\n            viewBox.x+=panX-self.getCanvasCoordsMouse(e).x;\n            viewBox.y+=panY-self.getCanvasCoordsMouse(e).y;\n\n            var startTime=viewBox.x/CABLES.TL.TIMESCALE;\n\n            self.updateViewBox();\n        }\n\n        panX=self.getCanvasCoordsMouse(e).x;\n        panY=self.getCanvasCoordsMouse(e).y;\n\n        if(isDragging())return;\n\n\n                \n        rubberBandMove(e);\n    });\n\n    var timeDisplayTexts=[];\n    function updateTimeDisplay()\n    {\n        var step=fps*5;\n\n        step=fps+fps/4;\n        if(CABLES.TL.TIMESCALE>30) step=fps/2;\n        if(CABLES.TL.TIMESCALE>60) step=fps/3;\n        if(CABLES.TL.TIMESCALE>300) step=fps/6;\n        if(CABLES.TL.TIMESCALE>500) step=fps/10;\n        // if(CABLES.TL.TIMESCALE>1000) step=fps/6;\n        if(CABLES.TL.TIMESCALE>1000) step=fps/30;\n\n\n        for(var i=0;i<100;i++)\n        {\n            var frame=i*step;\n            var t;\n            if(i>timeDisplayTexts.length-1)\n            {\n                t = paperTime.text(10, -80, \"\");\n                timeDisplayTexts.push(t);\n            }\n\n            var txt=parseInt(frame,10);\n            if(!timeDisplayMode)txt=(''+i*step/fps).substr(0, 4)+\"s \";\n\n            t=timeDisplayTexts[i];\n            t.attr({\n                \"text\":\"\"+txt,\n                \"x\":i*step/fps*CABLES.TL.TIMESCALE,\n                \"y\":-190,\n                \"fill\":'#aaa',\n                \"font-size\": 12 });\n        }\n    }\n\n    this.getTime=function()\n    {\n        return cursorTime;\n    };\n\n    this.setValueScale=function(v)\n    {\n        CABLES.TL.VALUESCALE=v;\n        updateKeyLine();\n        updateTimeDisplay();\n    };\n\n    this.setTimeScale=function(v)\n    {\n        cursorLine.hide();\n        var cursorOffset=this.getTimeFromPaper(viewBox.x);\n        var oldCursor=this.getPaperXFromTime(cursorTime);\n        // var addOffset=Math.abs(cursorOffset-cursorTime);\n\n        // console.log('cursorOffset',cursorOffset);\n        // console.log('addOffset',cursorTime*CABLES.TL.TIMESCALE);\n\n        CABLES.TL.TIMESCALE=v;\n\n        viewBox.x=cursorOffset*CABLES.TL.TIMESCALE/2;\n\n        var newCursor=this.getPaperXFromTime(cursorTime);\n        viewBox.x-=(oldCursor-newCursor)/2;\n\n        // this.centerCursor();\n        updateKeyLine();\n\n        self.updateViewBox();\n        updateTimeDisplay();\n\n        $('#timeline').focus();\n        cursorLine.show();\n        setCursor(this.getTime());\n    };\n\n    this.getTimeFromMouse=function(e)\n    {\n        var time=self.getCanvasCoordsMouseTimeDisplay(e).x;\n        time/=CABLES.TL.TIMESCALE;\n        return time;\n    };\n\n    this.isCursorVisible=function()\n    {\n        return (cursorTime> self.getTimeFromPaper(viewBox.x)  && cursorTime < self.getTimeFromPaper(viewBox.w)+self.getTimeFromPaper(viewBox.x));\n    };\n    this.getPaperXFromTime=function(t)\n    {\n        return t*CABLES.TL.TIMESCALE;\n    };\n    this.getTimeFromPaper=function(offsetX)\n    {\n        var time=offsetX;\n        time/=CABLES.TL.TIMESCALE;\n        return time;\n    };\n\n    this.toggleTimeDisplayMode=function()\n    {\n        timeDisplayMode=!timeDisplayMode;\n        console.log('timeDisplayMode',timeDisplayMode);\n        this.updateTime();\n        updateTimeDisplay();\n    };\n\n    var lastTime=-1;\n    this.updateTime=function()\n    {\n        var time=gui.scene().timer.getTime();\n        setCursor(time);\n        if(doCenter)self.centerCursor();\n \n\n        if(lastTime!=time)\n        {\n            lastTime=time;\n\n            if(timeDisplayMode)\n                $('.timelinetime').html( '<b class=\"mainColor\">'+getFrame(time)+'</b><br/>'+(time+'').substr(0, 4)+'s ' );\n            else\n                $('.timelinetime').html( '<b class=\"mainColor\">'+(time+'').substr(0, 4)+'s </b><br/>'+getFrame(time)+' ' );\n        }\n        if(updateTimer===null) updateTimer=setInterval(self.updateTime,30);\n    };\n\n    this.togglePlay=function(patch)\n    {\n        gui.scene().timer.togglePlay();\n                \n        if(!gui.scene().timer.isPlaying())\n        {\n            $('#timelineplay').removeClass('fa-pause');\n            $('#timelineplay').addClass('fa-play');\n            this.updateTime();\n        }\n        else\n        {\n            $('#timelineplay').removeClass('fa-play');\n            $('#timelineplay').addClass('fa-pause');\n            this.updateTime();\n        }\n    };\n\n    // ------------------\n\n    function rubberBandHide()\n    {\n        mouseRubberBandStartPos=null;\n        mouseRubberBandPos=null;\n        if(rubberBandRect)rubberBandRect.attr({\n            x:0,y:0,width:0,height:0,\n            \"stroke-width\": 0,\n            \"fill-opacity\": 0\n        });\n    }\n\n    function rubberBandMove(e)\n    {\n        if(e.buttons==1 && !spacePressed)\n        {\n            if(!mouseRubberBandStartPos)\n                mouseRubberBandStartPos=self.getCanvasCoordsMouse(e);\n            mouseRubberBandPos=self.getCanvasCoordsMouse(e);\n\n            if(!rubberBandRect) rubberBandRect=paper.rect( 0,0,10,10).attr({ });\n\n            var start={x:mouseRubberBandStartPos.x,y:mouseRubberBandStartPos.y};\n            var end={x:mouseRubberBandPos.x,y:mouseRubberBandPos.y};\n\n            if(end.x-start.x<0)\n            {\n                var tempx=start.x;\n                start.x=end.x;\n                end.x=tempx;\n            }\n\n            if(end.y-start.y<0)\n            {\n                var tempy=start.y;\n                start.y=end.y;\n                end.y=tempy;\n            }\n\n            rubberBandRect.attr({\n                    x:start.x,\n                    y:start.y,\n                    width:end.x-start.x,\n                    height:end.y-start.y,\n                    \"stroke\": CABLES.UI.uiConfig.colorRubberBand,\n                    \"fill\": CABLES.UI.uiConfig.colorRubberBand,\n                    \"stroke-width\": 2,\n                    \"fill-opacity\": 0.1\n               });\n\n            if(!enabled)return;\n            var count=0;\n\n            for(var j in anims)\n            {\n                for(var i in anims[j].keys)\n                {\n                    var rect=anims[j].keys[i].circle;\n                    if(anims[j].keys[i].showCircle)\n                    {\n                        var opX=rect.attr(\"cx\");\n                        var opY=rect.attr(\"cy\");\n\n                        anims[j].keys[i].setSelected(false);\n                        if(opX>start.x && opX<end.x && opY>start.y && opY<end.y )\n                        {\n                            anims[j].keys[i].setSelected(true);\n                            count++;\n                        }\n\n                    }\n                }\n            }\n\n            CABLES.UI.setStatusText(count+' keys selected');\n        }\n    }\n\n    // ---------------------------------\n\n    this.copy=function(e)\n    {\n        var keys=[];\n        for(var i in anim.keys)\n        {\n            if(anim.keys[i].selected)\n            {\n                keys.push(anim.keys[i].getSerialized() );\n            }\n        }\n\n        var obj={keys:keys};\n        var objStr=JSON.stringify(obj);\n\n        CABLES.UI.setStatusText(keys.length+' keys copied...');\n\n        e.clipboardData.setData('text/plain', objStr);\n        e.preventDefault();\n    };\n\n    this.cut=function(e)\n    {\n        if(!enabled)return;\n        self.copy(e);\n        anim.deleteSelectedKeys();\n        updateKeyLine();\n    };\n\n    this.paste=function(e)\n    {\n        if(!enabled)return;\n        if(e.clipboardData.types.indexOf('text/plain') > -1)\n        {\n            e.preventDefault();\n\n            var str=e.clipboardData.getData('text/plain');\n\n            e.preventDefault();\n\n            var json=JSON.parse(str);\n            if(json)\n            {\n                if(json.keys)\n                {\n                    var i=0;\n\n                    var minTime=Number.MAX_VALUE;\n                    for(i in json.keys)\n                    {\n                        minTime=Math.min(minTime,json.keys[i].t);\n                    }\n        \n                    CABLES.UI.setStatusText(json.keys.length+' keys pasted...');\n\n                    for(i in json.keys)\n                    {\n                        json.keys[i].t=json.keys[i].t-minTime+cursorTime;\n                        anim.addKey(new CABLES.TL.Key(json.keys[i]));\n                    }\n\n                    anim.sortKeys();\n\n                    for(i in anim.keys)\n                    {\n                        anim.keys[i].updateCircle(true);\n                    }\n\n                    updateKeyLine();\n                    return;\n                }\n            }\n            CABLES.UI.setStatusText(\"paste failed / not cables data format...\");\n        }\n    };\n\n\n\n\n    this.moveSelectedKeysFinished=function()\n    {\n        for(var i in anims)\n        {\n            if(anims[i])\n            {\n                for(var k in anims[i].keys)\n                {\n                    var key=anims[i].keys[k];\n                    if(key.selected)\n                    {\n                        key.doMoveFinished();\n                    }\n                }\n            }\n        }\n    };\n\n    this.moveSelectedKeys=function(dx,dy,a,b,e)\n    {\n        var newPos=gui.timeLine().getCanvasCoordsMouse(e);\n\n\n\n        // snap to cursor\n        if( Math.abs(e.clientX-gui.timeLine().getTime()*CABLES.TL.TIMESCALE) <20 )\n        {\n            newPos.x=gui.timeLine().getTime()*CABLES.TL.TIMESCALE;\n        }\n\n        for(var i in anims)\n        {\n            if(anims[i])\n            {\n                for(var k in anims[i].keys)\n                {\n                    var key=anims[i].keys[k];\n                    if(key.selected)\n                    {\n                        key.doMove(dx,dy,a,b,e,newPos);\n                    }\n                }\n            }\n        }\n    };\n\n    this.unselectKeys=function()\n    {\n        for(var i in anims)\n        {\n            if(anims[i])\n            {\n                anims[i].unselectKeys();\n            }\n        }\n    };\n\n    this.clear=function()\n    {\n        for(var i in anims)\n        {\n            // if(anims[i])\n            {\n                // anims[i].keyLine.hide();\n                anims[i].removeUi();\n                found=true;\n            }\n        }\n        anims.length=0;\n    };\n\n    this.updateTime();\n    this.setAnim(tlEmpty);\n    updateTimeDisplay();\n    this.centerCursor();\n    updateKeyLine();\n    this.setAnim(tlEmpty);\n    self.updateViewBox();\n    self.setAnim(tlEmpty);\n\n    \n\n};\n\n\n\n","\nvar tooltipTimeout=null;\n\nCABLES.UI=CABLES.UI || {};\n\nCABLES.UI.showToolTip=function(e,txt)\n{\n    $('.tooltip').show();\n    $('.tooltip').css('top',e.clientY+12);\n    $('.tooltip').css('left',e.clientX+12);\n    $('.tooltip').html(txt);\n};\n\n\nCABLES.UI.hideToolTip=function()\n{\n    $('.tooltip').hide();\n};\n\n$(document).on('mouseover mousemove', '.tt', function(e)\n{\n    clearTimeout(tooltipTimeout);\n    var txt=$(this).data('tt');\n    tooltipTimeout = setTimeout(function()\n    {\n        CABLES.UI.showToolTip(e,txt);\n    }, 300);\n});\n\n$(document).on('mouseout', '.tt', function()\n{\n    clearTimeout(tooltipTimeout);\n    CABLES.UI.hideToolTip();\n});\n\n","\n\n\nCABLES.UI=CABLES.UI|| {};\nCABLES.undo = new UndoManager();\n\nCABLES.UI.GUI=function()\n{\n    var self=this;\n    var showTiming=false;\n    var showEditor=false;\n    var _scene=new Scene();\n    _scene.gui=true;\n    var _patch=null;\n\n    this.timeLine=function()\n    {\n        return _patch.timeLine;\n    };\n\n    this.scene=function()\n    {\n        return _scene;\n    };\n\n    this.patch=function()\n    {\n        return _patch;\n    };\n\n    this.timingHeight=250;\n    this.rendererWidth=640;\n    this.rendererHeight=360;\n\n    this.setLayout=function()\n    {\n        if(self.rendererWidth===undefined || self.rendererHeight===undefined || self.rendererWidth>window.innerWidth*0.99 || self.rendererHeight>window.innerHeight*0.99)\n        {\n            self.rendererWidth=window.innerWidth*0.4;\n            self.rendererHeight=window.innerHeight*0.25;\n        }\n\n        var statusBarHeight=26;\n        var menubarHeight=33;\n        var optionsWidth=400;\n\n        var timelineUiHeight=40;\n        var timedisplayheight=25;\n\n        var patchHeight=window.innerHeight-statusBarHeight-menubarHeight-2;\n\n        var patchWidth=window.innerWidth-self.rendererWidth-8;\n        var patchLeft=0;\n\n        if(showTiming)\n        {\n            patchHeight=patchHeight-this.timingHeight-2;\n\n            $('.easingselect').css('bottom',40);\n            $('.easingselect').css('left',patchWidth+30);\n        }\n        else\n        {\n            patchHeight-=timelineUiHeight;\n        }\n\n        if(showEditor)\n        {\n            var editorbarHeight=30;\n            $('#editor').show();\n            $('#editorbar').css('height',editorbarHeight);\n            $('#editorbar').css('top',menubarHeight+2);\n\n            patchWidth=patchWidth/2;\n            patchLeft=patchWidth;\n            $('#ace').css('height',patchHeight-2-editorbarHeight);\n            $('#ace').css('width',patchWidth);\n            $('#ace').css('top',menubarHeight+2+editorbarHeight);\n            $('#ace').css('left',0);\n        }\n        else\n        {\n            $('#editor').hide();\n        }\n\n\n\n\n        $('#patch svg').css('height',patchHeight-2);\n        $('#patch svg').css('width',window.innerWidth-self.rendererWidth-9);\n\n        $('#splitterPatch').css('left',window.innerWidth-self.rendererWidth-5);\n        $('#splitterPatch').css('height',patchHeight+timelineUiHeight+2);\n        $('#splitterPatch').css('top',menubarHeight);\n        $('#splitterRenderer').css('top',self.rendererHeight);\n        $('#splitterRenderer').css('width',self.rendererWidth);\n        $('#splitterRendererWH').css('right',self.rendererWidth-35);\n        $('#splitterRendererWH').css('top',self.rendererHeight-30);\n\n        $('#patch').css('height',patchHeight-2);\n        $('#patch').css('width',patchWidth);\n        $('#patch').css('top',menubarHeight+2);\n        $('#patch').css('left',patchLeft);\n\n        $('#timelineui').css('width',window.innerWidth-self.rendererWidth-2);\n\n        $('#timing').css('width',window.innerWidth-self.rendererWidth-2);\n        $('#timing').css('bottom',statusBarHeight);\n\n\n\n\n        if(showTiming)\n        {\n            $('#timing').css('height',this.timingHeight);\n\n            $('#timetimeline').css('width',window.innerWidth-self.rendererWidth-2);\n            $('#timetimeline').css('height',this.timingHeight-timedisplayheight);\n            $('#timetimeline').css('margin-top',timelineUiHeight);\n\n            $('#timetimeline svg').css('width',window.innerWidth-self.rendererWidth-2);\n            $('#timetimeline svg').css('height',this.timingHeight-timedisplayheight-timelineUiHeight-statusBarHeight);\n\n            $('#timeline svg').css('width',window.innerWidth-self.rendererWidth-2);\n            $('#timeline svg').css('height',this.timingHeight-timedisplayheight);\n            $('#timeline svg').css('margin-top',timelineUiHeight+timedisplayheight);\n            $('#timeline svg').show();\n            $('#timetimeline').show();\n            $('#keycontrols').show();\n\n            $('#splitterTimeline').show();\n            $('#splitterTimeline').css('bottom',this.timingHeight-timedisplayheight+timelineUiHeight+8);\n        }\n        else\n        {\n            $('#keycontrols').hide();\n            $('#timetimeline').hide();\n            $('#timeline svg').hide();\n            $('#timing').css('height',timelineUiHeight);\n\n            $('#splitterTimeline').hide();\n        }\n\n        if(self.timeLine())self.timeLine().updateViewBox();\n\n        $('#splitterTimeline').css('width',window.innerWidth-self.rendererWidth-2);\n\n        $('#options').css('left',window.innerWidth-self.rendererWidth-1);\n        $('#options').css('top',self.rendererHeight);\n        $('#options').css('width',optionsWidth);\n        $('#options').css('height',window.innerHeight-self.rendererHeight-statusBarHeight);\n\n        $('#meta').css('right',0);\n        $('#meta').css('top',self.rendererHeight);\n        $('#meta').css('width',self.rendererWidth-optionsWidth);\n        $('#meta').css('height',window.innerHeight-self.rendererHeight-statusBarHeight);\n\n        $('#performance_glcanvas').css('bottom',statusBarHeight);\n        // $('#performance_glcanvas').css('right',($('#performance_glcanvas').width()-(self.rendererWidth+optionsWidth))) ;\n        $('#performance_glcanvas').css('right',self.rendererWidth-optionsWidth-$('#performance_glcanvas').width()+1 );\n        // $('#performance_glcanvas').css('max-width',self.rendererWidth-optionsWidth);\n\n\n        $('#menubar').css('top',0);\n        $('#menubar').css('width',window.innerWidth-self.rendererWidth-10);\n        $('#menubar').css('height',menubarHeight);\n\n        if(self.rendererWidth===0)\n        {\n            $('#glcanvas').attr('width',window.innerWidth);\n            $('#glcanvas').attr('height',window.innerHeight);\n            $('#glcanvas').css('z-index',9999);\n        }\n        else\n        {\n            $('#glcanvas').attr('width',self.rendererWidth);\n            $('#glcanvas').attr('height',self.rendererHeight);\n        }\n        CABLES.UI.setStatusText('webgl renderer set to size: '+self.rendererWidth+' x '+self.rendererHeight);\n    };\n\n    this.importDialog=function()\n    {\n        var html='';\n        html+='import:<br/><br/>';\n        html+='<textarea id=\"serialized\"></textarea>';\n        html+='<br/>';\n        html+='<br/>';\n        html+='<a class=\"button\" onclick=\"gui.patch().scene.clear();gui.patch().scene.deSerialize($(\\'#serialized\\').val());CABLES.UI.MODAL.hide();\">import</a>';\n        CABLES.UI.MODAL.show(html);\n    };\n\n    this.exportDialog=function()\n    {\n        var html='';\n        html+='export:<br/><br/>';\n        html+='<textarea id=\"serialized\"></textarea>';\n        CABLES.UI.MODAL.show(html);\n        $('#serialized').val(self.patch().scene.serialize());\n    };\n\n    var oldRendwerWidth,oldRendwerHeight;\n    this.cycleRendererSize=function()\n    {\n                console.log('cycleRendererSize');\n                \n        if(self.rendererWidth!==0)\n        {\n            oldRendwerWidth=self.rendererWidth;\n            oldRendwerHeight=self.rendererHeight;\n            self.rendererWidth=0;\n        }\n        else\n        {\n            self.rendererWidth=oldRendwerWidth;\n            self.rendererHeight=oldRendwerHeight;\n        }\n\n        self.setLayout();\n    };\n\n    this.isShowingTiming=function()\n    {\n        return showTiming;\n    };\n\n    this.showTiming=function()\n    {\n        showTiming=true;\n        self.setLayout();\n    };\n\n    this.toggleTiming=function()\n    {\n        showTiming=!showTiming;\n        self.setLayout();\n    };\n\n    this.showLibrary=function(inputId,filterType)\n    {\n        CABLES.UI.fileSelect.show(inputId,filterType);\n    };\n\n\n    this.createProject=function()\n    {\n        CABLES.api.post('project',{name: prompt('projectname','') },function(d)\n        {\n            CABLES.UI.SELECTPROJECT.doReload=true;\n\n            document.location.href='#/project/'+d._id;\n        });\n    };\n\n    this.showHelp=function()\n    {\n        var html=CABLES.UI.getHandleBarHtml('help1');\n        CABLES.UI.MODAL.show(html);\n    };\n\n    this.deleteCurrentProject=function()\n    {\n        if(confirm('delete ?'))\n        {\n            CABLES.api.delete('project/'+self.patch().getCurrentProject()._id,{},\n                function()\n                {\n                    CABLES.UI.SELECTPROJECT.doReload=true;\n                } );\n        }\n    };\n\n    this.bind=function()\n    {\n        $('#glcanvas').attr('tabindex','3');\n\n        $('#button_toggleTiming').bind(\"mousedown\", function (event) { self.toggleTiming(); });\n        $('#button_cycleRenderSize').bind(\"mousedown\", function (event) { self.cycleRendererSize(); });\n        $('.button_saveCurrentProject').bind(\"mousedown\", function (event) { self.patch().saveCurrentProject(); });\n        $('.button_addOp').bind(\"mousedown\", function (event) { CABLES.UI.OPSELECT.showOpSelect({x:0,y:0}); });\n        $('#button_subPatchBack').bind(\"click\", function (event) { self.patch().setCurrentSubPatch(0); });\n        $('#button_settings').bind(\"click\", function (event) { self.patch().showProjectParams(); });\n\n        $('#help').bind(\"click\", function (event) { self.showHelp(); });\n\n        window.addEventListener( 'resize', self.setLayout, false );\n\n        document.addEventListener('copy', function(e)\n        {\n            if($('#patch').is(\":focus\")) self.patch().copy(e);\n            if($('#timeline').is(\":focus\"))self.patch().timeLine.copy(e);\n        });\n\n        document.addEventListener('paste', function(e)\n        {\n            if($('#patch').is(\":focus\")) self.patch().paste(e);\n            if($('#timeline').is(\":focus\"))self.patch().timeLine.paste(e);\n        });\n\n        document.addEventListener('cut', function(e)\n        {\n            if($('#patch').is(\":focus\")) self.patch().cut(e);\n            if($('#timeline').is(\":focus\"))self.patch().timeLine.cut(e);\n        });\n\n        var spaceBarStart = 0;\n\n\n        $('#timeline, #patch').keyup(function(e)\n        {\n            switch(e.which)\n            {\n                case 32: // space play\n                    var timeused=Date.now()-spaceBarStart;\n                    if(timeused<150) self.timeLine().togglePlay();\n                    spaceBarStart=0;\n                break;\n            }\n        });\n\n        $(document).keydown(function(e)\n        {\n            switch(e.which)\n            {\n                default:\n                        console.log('e.which',e.which);\n                        \n                break;\n                case 49: // 1 - editor\n                if(e.shiftKey)\n                {\n                    showEditor=!showEditor;\n                    self.setLayout();\n\n                    var editor = ace.edit(\"ace\");\n                    editor.setTheme(\"ace/theme/twilight\");\n                    editor.session.setMode(\"ace/mode/javascript\");\n                    editor.resize();\n                }\n\n                break;\n\n                case 79: // o - open\n                    if(e.metaKey || e.ctrlKey)\n                    {\n                        CABLES.UI.SELECTPROJECT.show();\n                        e.preventDefault();\n                    }\n                break;\n                case 83: // s - save\n                    if(e.metaKey || e.ctrlKey)\n                    {\n                        if(!e.shiftKey)\n                        {\n                            self.patch().saveCurrentProject();\n                            CABLES.UI.SELECTPROJECT.doReload=true;\n                            e.preventDefault();\n                        }\n                        else\n                        {\n                            CABLES.api.post('project',{name: prompt('projectname','') },function(d)\n                            {\n                                CABLES.UI.SELECTPROJECT.doReload=true;\n                                self.patch().saveCurrentProject(function(){\n                                    document.location.href='#/project/'+d._id;\n                                },d._id,d.name);\n                                \n                            });\n                        }\n                    }\n                break;\n                case 78: // n - new project\n                    if(e.metaKey || e.ctrlKey)\n                    {\n                        self.createProject();\n                    }\n                break;\n                case 27:\n                    if(e.metaKey || e.ctrlKey)\n                    {\n                        CABLES.UI.SELECTPROJECT.show();\n                        return;\n                    }\n\n                    $('.tooltip').hide();\n\n                    if(self.rendererWidth===0)\n                    {\n                        self.cycleRendererSize();\n                    }\n                    else\n                    if( $('#library').is(':visible') )\n                    {\n                        $('#library').hide();\n                    }\n                    else\n                    if( $('#sidebar').is(':visible') )\n                    {\n                        $('#sidebar').animate({width:'toggle'},200);\n                    }\n                    else\n                    if( $('.easingselect').is(':visible') )\n                    {\n                        $('.easingselect').hide();\n                    }\n                    else\n                    if( $('#modalcontent').is(':visible') )\n                    {\n                        CABLES.UI.MODAL.hide();\n                    }\n                    else\n                    {\n                        CABLES.UI.OPSELECT.showOpSelect({x:0,y:0});\n                    }\n\n                break;\n            }\n        });\n\n        $('#timeline, #patch').keydown(function(e)\n        {\n            switch(e.which)\n            {\n                case 32: // space play\n                    if(spaceBarStart===0) spaceBarStart = Date.now();\n                break;\n\n                case 74: // j\n                    self.timeLine().jumpKey(-1);\n                break;\n                case 75: // k\n                    self.timeLine().jumpKey(1);\n                break;\n            }\n        });\n\n    };\n\n\n    function initRouting()\n    {\n        var router = new Simrou();\n\n        router.addRoute('/').get(function(event, params)\n        {\n            if(!localStorage.holo || localStorage.holo===''  || localStorage.holo.length<20)\n                self.scene.clear();\n\n            self.patch().scene.deSerialize(localStorage.holo);\n        });\n\n        router.addRoute('/project/:id').get(function(event, params)\n        {\n            CABLES.UI.MODAL.showLoading('loading');\n\n            CABLES.api.get('project/'+params.id,function(proj)\n            {\n                self.patch().setProject(proj);\n            });\n        });\n\n        router.start('/');\n    }\n\n    this.importJson3D=function(id)\n    {\n        CABLES.api.get('json3dimport/'+id,\n            function(data)\n            {\n                console.log('data',data);\n            }\n        );\n        \n    };\n\n    this.loadUser=function()\n    {\n        CABLES.api.get('user/me',\n            function(data)\n            {\n                if(data.user)\n                {\n                    $('#loggedout').hide();\n                    $('#loggedin').show();\n                    $('#username').html(data.user.username);\n                }\n            },function(data)\n            {\n                $('#loggedout').show();\n                $('#loggedin').hide();\n            });\n    };\n\n    this.init=function()\n    {\n        _patch=new CABLES.UI.Patch(this);\n        _patch.show(_scene);\n\n        initRouting();\n        self.loadUser();\n    };\n\n};\n\n\ndocument.addEventListener(\"DOMContentLoaded\", function(event)\n{\n    $(document).bind(\"contextmenu\", function(e)\n    {\n        if(e.preventDefault) e.preventDefault();\n    });\n\n    gui=new CABLES.UI.GUI();\n    // _patch=ui;\n\n    gui.init();\n    gui.bind();\n\n});\n\n","\nCABLES.UI=CABLES.UI|| {};\n\nCABLES.UI.uiConfig=\n{\n    portSize:10,\n    portHeight:7,\n    portPadding:2,\n\n    colorBackground:'#333',\n    colorLink:'#fff',\n    colorLinkHover:'#fff',\n    colorLinkInvalid:'#888',\n    colorOpBg:'#ddd',\n    colorOpBgSelected:'#ff9',\n    colorPort:'#6c9fde',\n    colorRubberBand:'#6c9fde',\n    colorPortHover:'#f00',\n    colorPatchStroke:'#6c9fde',\n\n    colorSelected:'#fff',\n    colorKey:'#6c9fde',\n    colorKeyOther:'#ea6638',\n    colorCursor:'#ea6638',\n\n    watchValuesInterval:100,\n    rendererSizes:[{w:640,h:360},{w:1024,h:768},{w:1280,h:720},{w:0,h:0}],\n\n    getPortColor:function(port)\n    {\n        if(!port)return '#ff0000';\n        var type=port.getType();\n        if(type==OP_PORT_TYPE_VALUE) return '#ea6638';\n        else if(type==OP_PORT_TYPE_FUNCTION) return '#6c9fde';\n        else if(type==OP_PORT_TYPE_OBJECT)  return '#26a92a';\n        else if(type==OP_PORT_TYPE_ARRAY)  return '#a02bbd';\n        else if(type==OP_PORT_TYPE_DYNAMIC)  return '#666';\n        \n        else return '#c6c6c6';\n    },\n\n    linkingLine:\n    {\n        \"stroke-width\": 1,\n    }\n\n\n};\n\n","//http://html5doctor.com/drag-and-drop-to-server/\n\n$(\"html\").on(\"dragover\", function(event)\n{\n    event.preventDefault();\n    event.stopPropagation();\n    $(this).addClass('dragging');\n    CABLES.UI.MODAL.show(\"drop files to upload!\");\n    jQuery.event.props.push('dataTransfer');\n});\n\n$(\"html\").on(\"dragleave\", function(event)\n{\n    event.preventDefault();\n    event.stopPropagation();\n    $(this).removeClass('dragging');\n});\n\n$(\"html\").on(\"drop\", function(event)\n{\n    event.preventDefault();\n    event.stopPropagation();\n\n    CABLES.UI.MODAL.showLoading(\"uploading\");\n\n    var files = event.dataTransfer.files;\n    var url='/api/project/'+gui.patch().getCurrentProject()._id+'/file';\n\n    var formData = new FormData();\n    $.each(files, function(key, value)\n    {\n        formData.append(key, value);\n    });\n\n    // now post a new XHR request\n    var xhr = new XMLHttpRequest();\n    xhr.open('POST', url);\n\n    xhr.upload.onprogress = function (event)\n    {\n        if (event.lengthComputable)\n        {\n            var complete = (event.loaded / event.total * 100 | 0);\n            CABLES.UI.MODAL.showLoading('uploading ' + complete + '%');\n        }\n    };\n\n    xhr.onload = function (e)\n    {\n        gui.patch().updateProjectFiles();\n        if (xhr.status === 200)\n        {\n            CABLES.UI.MODAL.hide();\n        }\n        else\n        {\n            var msg='unknown';\n            var res=JSON.parse(e.target.response);\n            msg=res.msg;\n\n            CABLES.UI.MODAL.show('upload error (' + xhr.status +') :'+msg);\n        }\n    };\n\n    xhr.send(formData);\n\n});\n"],"sourceRoot":"/source/"}